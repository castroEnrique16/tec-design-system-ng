{
  "pipes": [],
  "interfaces": [
    {
      "name": "IBmbCalendarEventClick",
      "id": "interface-IBmbCalendarEventClick-a2bc9abda7667185f8df9152ed8235772226e3e1a8a3ae0914245efbf13baadd9b506250273ef81bf58d5960a3d9eb87a3401fda768e5eafbf32305697fd9fd2",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { DateTime } from 'luxon';\n\nexport type IBmbCalendarEvent = {\n  title: string;\n  detail: string;\n  start: string;\n  end: string;\n};\n\nexport type IBmbCalendarView = 'week' | 'month' | 'day';\n\nexport type IBmbCalendarHourFormat = '12' | '24';\n\nexport interface IBmbCalendarEventClick {\n  event: IBmbCalendarEvent;\n  position: any;\n}\n\nexport interface IBmbCalendarRenderEvents {\n  date: DateTime;\n  events: IBmbCalendarEvent[];\n}\n",
      "properties": [
        {
          "name": "event",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "IBmbCalendarEvent",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "position",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "IBmbCalendarRenderEvents",
      "id": "interface-IBmbCalendarRenderEvents-a2bc9abda7667185f8df9152ed8235772226e3e1a8a3ae0914245efbf13baadd9b506250273ef81bf58d5960a3d9eb87a3401fda768e5eafbf32305697fd9fd2",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { DateTime } from 'luxon';\n\nexport type IBmbCalendarEvent = {\n  title: string;\n  detail: string;\n  start: string;\n  end: string;\n};\n\nexport type IBmbCalendarView = 'week' | 'month' | 'day';\n\nexport type IBmbCalendarHourFormat = '12' | '24';\n\nexport interface IBmbCalendarEventClick {\n  event: IBmbCalendarEvent;\n  position: any;\n}\n\nexport interface IBmbCalendarRenderEvents {\n  date: DateTime;\n  events: IBmbCalendarEvent[];\n}\n",
      "properties": [
        {
          "name": "date",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DateTime",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "events",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "IBmbCalendarEvent[]",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "IBmbTab",
      "id": "interface-IBmbTab-e22424fdf9598cf03b961dd0141f369e6120e27a4349c7b05e538b035826a2d35f1e245303899d07289e77678b696672191f5a185aac3cdc59fbc275fc1f5461",
      "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface IBmbTab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-tabs',\n  templateUrl: './bmb-tabs.component.html',\n  styleUrls: ['./bmb-tabs.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTabsComponent implements OnInit, AfterViewInit {\n  @Input() format: string = '';\n  @Input() tabs: IBmbTab[] = [];\n  @Output() selected = new EventEmitter<IBmbTab>();\n\n  activeTabIndex: number = 0;\n  @ViewChild('tabsItems') tabsItems!: ElementRef;\n\n  ngOnInit(): void {\n    const initialActiveTab = this.tabs.findIndex((tab) => tab.isActive);\n    this.activeTabIndex = initialActiveTab !== -1 ? initialActiveTab : 0;\n    this.tabs.forEach(\n      (tab, index) => (tab.isActive = index === this.activeTabIndex),\n    );\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.showActiveTab(), 100);\n  }\n\n  selectTab(selectedId: number): void {\n    const tabIndex = this.tabs.findIndex((tab) => tab.id === selectedId);\n    if (tabIndex !== -1) {\n      this.tabs.forEach((tab) => (tab.isActive = false));\n      this.tabs[tabIndex].isActive = true;\n      this.activeTabIndex = tabIndex;\n      const activeTab = this.tabs[tabIndex];\n      this.selected.emit(activeTab);\n      setTimeout(() => this.showActiveTab(), 0);\n    }\n  }\n\n  showActiveTab(): void {\n    requestAnimationFrame(() => {\n      const tabsElement = this.tabsItems.nativeElement;\n      const activeTabElement = tabsElement.children[this.activeTabIndex];\n\n      if (activeTabElement) {\n        const containerWidth = tabsElement.offsetWidth;\n        const activeTabWidth = activeTabElement.offsetWidth;\n        const activeTabOffsetLeft = activeTabElement.offsetLeft;\n\n        const scrollOffset =\n          activeTabOffsetLeft - (containerWidth - activeTabWidth) / 2;\n\n        tabsElement.scrollTo({\n          left: scrollOffset,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n}\n",
      "properties": [
        {
          "name": "badge",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "isActive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 18
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "IFixDecimals",
      "id": "interface-IFixDecimals-2d4c61f6834d4de11e1efdeb7b6e471f905aa09182cd9252968c6349713d05e71e36f3912da79c88aa07514358d2430d140bbb8ae1d1a97205e1bc05eda8012f",
      "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "interface IFixDecimals {\n  value: number;\n  dp?: number;\n}\n\nfunction fixDecimals({ value, dp = 2 }: IFixDecimals) {\n  return parseFloat(value.toString()).toFixed(dp);\n}\n\nexport const pixelToRem = (size: number) =>\n  `${fixDecimals({ value: size / 16 })}rem`;\n",
      "properties": [
        {
          "name": "dp",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 3
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "IMargin",
      "id": "interface-IMargin-d91398d383373488ff19e4f9a16fa32c7a5a2ba82c8ab3736394041f52e310896972620035bc5ec213a2332e73e6b567e30e39eb5c5c39e0ebae41762f8b1632",
      "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\n\ninterface IMargin {\n  sm: number;\n  lg?: number;\n}\n\n@Directive({\n  selector: '[bmbLayoutItem]',\n  standalone: true,\n})\nexport class BmbLayoutItemDirective {\n  @Input() colSm: number = 0;\n  @Input() colLg: number = 0;\n  @Input() marginLeft: IMargin | null = null;\n  @Input() marginRight: IMargin | null = null;\n  @Input() colGrow: number = 0;\n\n  constructor() {}\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classes = [];\n\n    if (this.colSm) classes.push(`bmb_col-sm-${this.colSm}`);\n    if (this.colLg) classes.push(`bmb_col-lg-${this.colLg}`);\n    if (this.marginLeft) {\n      classes.push(`bmb_space-sm-left-${this.marginLeft?.sm}`);\n\n      if (this.marginLeft.lg)\n        classes.push(`bmb_space-lg-left-${this.marginLeft?.lg}`);\n    }\n    if (this.marginRight) {\n      classes.push(`bmb_space-sm-right-${this.marginRight?.sm}`);\n\n      if (this.marginRight.lg)\n        classes.push(`bmb_space-lg-right-${this.marginRight?.lg}`);\n    }\n    return classes;\n  }\n\n  @HostBinding('style.flex-grow') get flexGrow(): string {\n    return this.colGrow.toString();\n  }\n}\n",
      "properties": [
        {
          "name": "lg",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 5
        },
        {
          "name": "sm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "IUserInformation",
      "id": "interface-IUserInformation-604ce6ba42502fcfd5d4eb38dbd100a718ce1257e42cc22a8f846ee6428c4bf3f36ee00ba0d623b4a0a6a9ca18f11fa63124da273e2c25ea9c723c4a029eb0a1",
      "file": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export type IPositionButtonMenu = 'left' | 'right';\n\nexport interface IUserInformation {\n  name: string;\n  image: string;\n  role: string;\n}\n",
      "properties": [
        {
          "name": "image",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "role",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Props",
      "id": "interface-Props-0be329acc963ff455ffdf9172d95c844a313ba429c49a8f0645bca85aef6b06ecb11a573d85443a1730e1fcc45ddd93688a6b7591932b2eff126b81c31779683",
      "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeStepIndex?: number;\n  totalSteps?: number;\n  targets?: Target[];\n  onStepsPress: EventEmitter<number>;\n}\n",
      "properties": [
        {
          "name": "activeStepIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "onStepsPress",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "EventEmitter<number>",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "targets",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Target[]",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "totalSteps",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "SidebarElements",
      "id": "interface-SidebarElements-7c7c4d730e4744f1ec995d67b5f7282621ec76e7c56f718858d28523dbf7aadcad663a0ff68de47711ddaaa92dd43d6e37a967d0df9c501280d21693e20567ce",
      "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface SidebarElements {\n  icon: string;\n  title: string;\n  link: string;\n}\n",
      "properties": [
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "link",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "TableColum",
      "id": "interface-TableColum-01cc5aa0718b6133b6fe73133e6cda30ee812619ff0d759936b5f4d5038352facea4d8acabf46bf53fbc1defc21e534c0924b611365456cd508b9d1dc0133b99",
      "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface TableColum {\n  label: string;\n  def: string;\n  dataKey: string;\n  templateActions?: TemplateRef<any>;\n  width?: number;\n}\n\nexport interface TableConfig {\n  isSelectable?: boolean;\n  isPaginable?: boolean;\n  isExpandible?: boolean;\n  showActions?: boolean;\n}\n",
      "properties": [
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "def",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "templateActions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "width",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "TableConfig",
      "id": "interface-TableConfig-01cc5aa0718b6133b6fe73133e6cda30ee812619ff0d759936b5f4d5038352facea4d8acabf46bf53fbc1defc21e534c0924b611365456cd508b9d1dc0133b99",
      "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface TableColum {\n  label: string;\n  def: string;\n  dataKey: string;\n  templateActions?: TemplateRef<any>;\n  width?: number;\n}\n\nexport interface TableConfig {\n  isSelectable?: boolean;\n  isPaginable?: boolean;\n  isExpandible?: boolean;\n  showActions?: boolean;\n}\n",
      "properties": [
        {
          "name": "isExpandible",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 14
        },
        {
          "name": "isPaginable",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "isSelectable",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 12
        },
        {
          "name": "showActions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 15
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Target",
      "id": "interface-Target-f2c3d13fcf4fd6183ec16ed094945329f06423ca7483317bd35b40b174de58d51ac8b2c617a6cf24a3f7aca7974b78604de4aff3d3f914fbfd2720c5feb49d40",
      "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'bmb-dot-paginator',\n  standalone: true,\n  styleUrl: './bmb-dot-paginator.component.scss',\n  imports: [CommonModule],\n  templateUrl: './bmb-dot-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDotPaginatorComponent {\n  @Input() activeDotIndex?: number = 0;\n  @Input() totalDots?: number = 0;\n  @Input() targets: Target[] = [];\n  @Input() appearance: string = '';\n  @Output() onDotPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getDotsArray(): number[] {\n    return new Array(this.totalDots ?? 0).fill(0).map((_, i) => i);\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_dot_paginator'];\n\n    if (this.appearance) {\n      classes.push('bmb_dot_paginator-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  onDotClicked(index: number): void {\n    this.activeDotIndex = index;\n    this.onDotPress.emit(index);\n  }\n}\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Target",
      "id": "interface-Target-ffb933431ea34d481e15828994488a1d5d39586edbb796a4b01be09ea01819c25f1cb7b81646b06e5328e519194ae622d8ae95ddc06888bdb97851a760eb7f9a-1",
      "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { BmbDotPaginatorComponent } from './bmb-dot-paginator.component';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport default {\n  title: 'Micro Componentes/Dot Paginator',\n  component: BmbDotPaginatorComponent,\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbDotPaginatorComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbDotPaginatorComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\nexport class Component {\n  myActiveDotIndex: number = 0;\n  myTotalDots: number = 5;\n  myTargets: Target[] = [\n    { target: '#item1', index: 0 },\n    { target: '#item2', index: 1 },\n  ];\n\n  handleDotPress(index: number): void {\n    this.myActiveDotIndex = index;\n  }\n}\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    appearance: {\n      name: 'Appearance',\n      control: {\n        type: 'radio',\n      },\n      options: ['primary', 'secondary'],\n      description:\n        'The style of the dot paginator. Is not neccesary to add the \"primary\" style.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'primary' },\n        type: { summary: 'string' },\n      },\n    },\n    activeDotIndex: {\n      name: 'Active dot index',\n      control: 'number',\n      description: 'Index of the active dot.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 0 },\n        type: { summary: 'number' },\n      },\n    },\n    totalDots: {\n      name: 'Total Dots',\n      control: 'number',\n      description: 'Total number of dots.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 5 },\n        type: { summary: 'number' },\n      },\n    },\n    targets: {\n      name: 'Targets',\n      control: 'object',\n      description: 'Target objects for each dot.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'optional' },\n        type: { summary: 'Target[]' },\n      },\n    },\n    onDotPress: {\n      name: 'On Dot Press',\n      control: {\n        type: '',\n      },\n      description:\n        'This handler can be used to perform a specific interaction with each dot.',\n      table: {\n        category: 'Events',\n        type: { summary: '(onDotPress)=\"yourFunction($event)\"' },\n      },\n    },\n  },\n\n  args: {\n    activeDotIndex: 0,\n    totalDots: 5,\n    targets: [\n      { target: '#item1', index: 0 },\n      { target: '#item2', index: 1 },\n    ],\n    onDotPress: (index: number) => {\n      window.alert(index);\n    },\n  },\n} as Meta<typeof BmbDotPaginatorComponent>;\n\ntype Story = StoryObj<BmbDotPaginatorComponent>;\n\nexport const Default: Story = {};\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "Target-1"
    },
    {
      "name": "Target",
      "id": "interface-Target-0be329acc963ff455ffdf9172d95c844a313ba429c49a8f0645bca85aef6b06ecb11a573d85443a1730e1fcc45ddd93688a6b7591932b2eff126b81c31779683-2",
      "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeStepIndex?: number;\n  totalSteps?: number;\n  targets?: Target[];\n  onStepsPress: EventEmitter<number>;\n}\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 2,
      "duplicateName": "Target-2"
    }
  ],
  "injectables": [
    {
      "name": "DsNgService",
      "id": "injectable-DsNgService-e91991127dd8fe0ec548387ab65070beb0485803fcea2c2869027f1a009bf961c6c901a5d51eefbd74b583d360590acefd38ec0295336e71094b3cedf4ed89af",
      "file": "projects/ds-ng/src/lib/ds-ng.service.ts",
      "properties": [],
      "methods": [],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DsNgService {\n  constructor() {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 6
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "ThemeService",
      "id": "injectable-ThemeService-bff929e947fb3c49f173a9f36fb05e1d9621b68c21c10945c53740b74547f7fc2fe0a3448b3091564176b3ec291f156623b699d1fea0097acd8fdae5c30db116",
      "file": "projects/ds-ng/src/lib/services/theme.service.ts",
      "properties": [
        {
          "name": "theme$",
          "defaultValue": "this.themeSubject.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "themeSubject",
          "defaultValue": "new BehaviorSubject<string>(\n    localStorage.getItem('theme') || 'light',\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "setTheme",
          "args": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private themeSubject = new BehaviorSubject<string>(\n    localStorage.getItem('theme') || 'light',\n  );\n  theme$ = this.themeSubject.asObservable();\n\n  setTheme(theme: string): void {\n    this.themeSubject.next(theme);\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "ToastService",
      "id": "injectable-ToastService-d15917c926925fffde10fc52717e682a9543cc1913fbe4a085ce0513851e78b90b31268ef81ee30f9089a24f17f0bf8b2e018bf27fb5b9edd8d9c5636ead3938",
      "file": "projects/ds-ng/src/lib/services/toast.service.ts",
      "properties": [
        {
          "name": "isOpen$",
          "defaultValue": "this.isOpenSubject.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "isOpenSubject",
          "defaultValue": "new BehaviorSubject<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "closeToast",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openToast",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  private isOpenSubject = new BehaviorSubject<boolean>(false);\n  isOpen$ = this.isOpenSubject.asObservable();\n\n  openToast() {\n    this.isOpenSubject.next(true);\n  }\n\n  closeToast() {\n    this.isOpenSubject.next(false);\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [
    {
      "name": "BmbButtonDirective",
      "id": "directive-BmbButtonDirective-4f8f86b6552158ae43fa3f033182d193109501d898367eed5368aa5a847ec69f9d3964626d4b10e051707c2002b9aba036ef2387fe8e2f75cb34eb97be18348c",
      "file": "projects/ds-ng/src/lib/directives/button.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\n  Directive,\n  Input,\n  ElementRef,\n  HostBinding,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  OnInit,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { BmbIconComponent } from '../components/bmb-icon/bmb-icon.component';\n\n@Directive({\n  selector: '[bmbButton]',\n  standalone: true,\n})\nexport class BmbButtonDirective implements OnInit, OnChanges {\n  @Input() icon: string = '';\n  @Input() position: 'left' | 'right' = 'left';\n  @Input() case: boolean = false;\n  @Input() appearance:\n    | 'primary'\n    | 'secondary-filled'\n    | 'secondary-outlined'\n    | 'destructive' = 'primary';\n  @Input() size: 'small' | 'large' = 'small';\n\n  private providedInputs: Set<string> = new Set();\n\n  constructor(\n    private el: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngOnInit(): void {\n    this.addContent();\n    this.applyAttributes();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    Object.keys(changes).forEach((input) => {\n      this.providedInputs.add(input);\n    });\n\n    this.applyAttributes();\n    this.addContent();\n    this.cdr.markForCheck();\n  }\n\n  private applyAttributes() {\n    if (this.providedInputs.has('case')) {\n      if (this.case) {\n        this.renderer.setAttribute(this.el.nativeElement, 'case', 'true');\n      } else {\n        this.renderer.removeAttribute(this.el.nativeElement, 'case');\n      }\n    }\n\n    if (this.providedInputs.has('size') && this.size) {\n      this.renderer.setAttribute(this.el.nativeElement, 'size', this.size);\n    }\n\n    if (this.providedInputs.has('position')) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'position',\n        this.position,\n      );\n    }\n  }\n\n  @HostBinding('class') get elementClass(): string {\n    return `bmb_btn-${this.appearance}`;\n  }\n\n  private addContent() {\n    this.viewContainerRef.clear();\n\n    if (this.icon) {\n      const iconComponentRef =\n        this.viewContainerRef.createComponent(BmbIconComponent); // Crear una instancia del componente\n      const iconComponent = iconComponentRef.instance;\n      iconComponent.icon = this.icon;\n\n      if (this.position === 'right') {\n        this.el.nativeElement.insertBefore(\n          iconComponentRef.location.nativeElement,\n          this.el.nativeElement.lastChild.nextSibling,\n        );\n      } else {\n        this.el.nativeElement.insertBefore(\n          iconComponentRef.location.nativeElement,\n          this.el.nativeElement.firstChild,\n        );\n      }\n    }\n  }\n}\n",
      "selector": "[bmbButton]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "\"primary\" | \"secondary-filled\" | \"secondary-outlined\" | \"destructive\"",
          "decorators": []
        },
        {
          "name": "case",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "position",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "\"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'small'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "\"small\" | \"large\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "string",
          "decorators": []
        }
      ],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "providedInputs",
          "defaultValue": "new Set()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Set<string>",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "addContent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 80,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "applyAttributes",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "extends": [],
      "implements": ["OnInit", "OnChanges"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 30,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "elementClass": {
          "name": "elementClass",
          "getSignature": {
            "name": "elementClass",
            "type": "string",
            "returnType": "string",
            "line": 76
          }
        }
      }
    },
    {
      "name": "BmbLayoutDirective",
      "id": "directive-BmbLayoutDirective-25c94c210dd767746bef659dccb23cd592afc14f602ae514176704a55ebc7f3575b6e3afae52655e86c7632fc155d07f4765c8b49aac7b3a6eb5046419ee6f67",
      "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { SizeNames } from '../../types';\n\n@Directive({\n  selector: '[bmbLayout]',\n  standalone: true,\n})\nexport class BmbLayoutDirective {\n  @Input() gapSise: SizeNames = 'm';\n  @Input() margin: SizeNames = 'm';\n  @Input() dinamycCols: boolean = false;\n\n  constructor() {}\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classes = ['bmb_layout'];\n    classes.push(`bmb_gap-${this.gapSise}`);\n    if (this.dinamycCols) classes.push('bmb_layout-smart');\n    return classes;\n  }\n}\n",
      "selector": "[bmbLayout]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [
        {
          "name": "dinamycCols",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "gapSise",
          "defaultValue": "'m'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "SizeNames",
          "decorators": []
        },
        {
          "name": "margin",
          "defaultValue": "'m'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "SizeNames",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string[]",
          "decorators": []
        }
      ],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "extends": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 11
      },
      "accessors": {
        "elementClass": {
          "name": "elementClass",
          "getSignature": {
            "name": "elementClass",
            "type": "[]",
            "returnType": "string[]",
            "line": 15
          }
        }
      }
    },
    {
      "name": "BmbLayoutItemDirective",
      "id": "directive-BmbLayoutItemDirective-d91398d383373488ff19e4f9a16fa32c7a5a2ba82c8ab3736394041f52e310896972620035bc5ec213a2332e73e6b567e30e39eb5c5c39e0ebae41762f8b1632",
      "file": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\n\ninterface IMargin {\n  sm: number;\n  lg?: number;\n}\n\n@Directive({\n  selector: '[bmbLayoutItem]',\n  standalone: true,\n})\nexport class BmbLayoutItemDirective {\n  @Input() colSm: number = 0;\n  @Input() colLg: number = 0;\n  @Input() marginLeft: IMargin | null = null;\n  @Input() marginRight: IMargin | null = null;\n  @Input() colGrow: number = 0;\n\n  constructor() {}\n\n  @HostBinding('class') get elementClass(): string[] {\n    const classes = [];\n\n    if (this.colSm) classes.push(`bmb_col-sm-${this.colSm}`);\n    if (this.colLg) classes.push(`bmb_col-lg-${this.colLg}`);\n    if (this.marginLeft) {\n      classes.push(`bmb_space-sm-left-${this.marginLeft?.sm}`);\n\n      if (this.marginLeft.lg)\n        classes.push(`bmb_space-lg-left-${this.marginLeft?.lg}`);\n    }\n    if (this.marginRight) {\n      classes.push(`bmb_space-sm-right-${this.marginRight?.sm}`);\n\n      if (this.marginRight.lg)\n        classes.push(`bmb_space-lg-right-${this.marginRight?.lg}`);\n    }\n    return classes;\n  }\n\n  @HostBinding('style.flex-grow') get flexGrow(): string {\n    return this.colGrow.toString();\n  }\n}\n",
      "selector": "[bmbLayoutItem]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [
        {
          "name": "colGrow",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "number",
          "decorators": []
        },
        {
          "name": "colLg",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "number",
          "decorators": []
        },
        {
          "name": "colSm",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "number",
          "decorators": []
        },
        {
          "name": "marginLeft",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "IMargin | null",
          "decorators": []
        },
        {
          "name": "marginRight",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "IMargin | null",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string[]",
          "decorators": []
        },
        {
          "name": "style.flex-grow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string",
          "decorators": []
        }
      ],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "extends": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 17
      },
      "accessors": {
        "elementClass": {
          "name": "elementClass",
          "getSignature": {
            "name": "elementClass",
            "type": "[]",
            "returnType": "string[]",
            "line": 21
          }
        },
        "flexGrow": {
          "name": "flexGrow",
          "getSignature": {
            "name": "flexGrow",
            "type": "string",
            "returnType": "string",
            "line": 41
          }
        }
      }
    }
  ],
  "components": [
    {
      "name": "BmbBadgeComponent",
      "id": "component-BmbBadgeComponent-3dc226e617fcf56a6c8e687c7b5ca989948a2b956a67d1efdf6c24d87a37b089af8fd7f0934263d65ee1a6a1f53b0b7c56453a3ff4f8c8f6f4cca7209c25d0fd",
      "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-badge",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-badge.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "grouped",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-badge',\n  styleUrl: './bmb-badge.component.scss',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-badge.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbBadgeComponent implements AfterViewInit {\n  @Input() appearance: string = '';\n  @Input() text: string = '';\n  @Input() grouped: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector('.bmb_badge-grouped');\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_badge-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_badge'];\n\n    if (this.appearance) {\n      classes.push('bmb_badge-' + this.appearance);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-badge.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["AfterViewInit"],
      "templateData": "<div [ngClass]=\"getClasses()\">\n  <span>{{ text }}</span>\n</div>\n"
    },
    {
      "name": "BmbButtonGroupComponent",
      "id": "component-BmbButtonGroupComponent-e59df06ef14490fd2234b360eb702193ebc9c1100e22d4baa319441a58134ab7220cabe03c97b1a4a5b5ef36db2e0e62e6d6a33fd4b04316e1209cd9e325a007",
      "file": "projects/ds-ng/src/lib/components/bmb-button-group/bmb-button-group.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-button-group",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-button-group.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bmb-button-group',\n  standalone: true,\n  imports: [],\n  templateUrl: './bmb-button-group.component.html',\n  styleUrl: './bmb-button-group.component.scss',\n})\nexport class BmbButtonGroupComponent {}\n",
      "styleUrl": "./bmb-button-group.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<p>button group</p>\n"
    },
    {
      "name": "BmbCalendarComponent",
      "id": "component-BmbCalendarComponent-0a6268267a124e80d6bd2da818b17959a0e627534c7276079a78869a8fef8353075ea3e93e76a34910ecad4f6181c8ccd49a692adf739c2e0fdd4747e0de1761",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-calendar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "calendarTimezone",
          "defaultValue": "Intl.DateTimeFormat().resolvedOptions().timeZone",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "string",
          "decorators": []
        },
        {
          "name": "clientTimezone",
          "defaultValue": "Intl.DateTimeFormat().resolvedOptions().timeZone",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "string",
          "decorators": []
        },
        {
          "name": "currentDate",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "string",
          "decorators": []
        },
        {
          "name": "events",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "IBmbCalendarEvent[]",
          "decorators": []
        },
        {
          "name": "height",
          "defaultValue": "700",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55,
          "type": "number | string",
          "decorators": []
        },
        {
          "name": "hourFormat",
          "defaultValue": "'12'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "IBmbCalendarHourFormat",
          "decorators": []
        },
        {
          "name": "isLoading",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "lang",
          "defaultValue": "'es-MX'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "string",
          "decorators": []
        },
        {
          "name": "view",
          "defaultValue": "'week'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "IBmbCalendarView",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onDateChange",
          "defaultValue": "new EventEmitter<any>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "now",
          "defaultValue": "this.currentDate === ''\n      ? DateTime.now()\n      : DateTime.fromISO(this.currentDate)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "renderWeekDays",
          "defaultValue": "getWeekDays(this.now)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DateTime[]",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "selectedEvent",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type | null",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "weekNumber",
          "defaultValue": "this.now.weekNumber",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 63
        }
      ],
      "methodsClass": [
        {
          "name": "getHeight",
          "args": [
            {
              "name": "height",
              "type": "string | number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 109,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "height",
              "type": "string | number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleCurrentDateChange",
          "args": [
            {
              "name": "newDate",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 95,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "newDate",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleDateChange",
          "args": [
            {
              "name": "range",
              "type": "IBmbCalendarView",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "now",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "range",
              "type": "IBmbCalendarView",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "now",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleSelectEvent",
          "args": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick | null",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 101,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isAnEventSelected",
          "args": [
            {
              "name": "event",
              "type": "IBmbCalendarEventClick | null",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 105,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "IBmbCalendarEventClick | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbCalendarTemplateDayComponent",
          "type": "component"
        },
        {
          "name": "BmbCalendarTemplateWeekComponent",
          "type": "component"
        },
        {
          "name": "BmbCalendarTemplateMonthComponent",
          "type": "component"
        },
        {
          "name": "BmbLoaderComponent",
          "type": "component"
        },
        {
          "name": "BmbCalendarHeaderComponent",
          "type": "component"
        },
        {
          "name": "BmbCalendarTemplateEventComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DateTime } from 'luxon';\nimport { BmbCalendarTemplateWeekComponent } from './common/bmb-calendar-template-week/bmb-calendar-template-week.component';\nimport { BmbCalendarTemplateDayComponent } from './common/bmb-calendar-template-day/bmb-calendar-template-day.component';\nimport { BmbCalendarTemplateMonthComponent } from './common/bmb-calendar-template-month/bmb-calendar-template-month.component';\nimport { BmbLoaderComponent } from '../bmb-loader/bmb-loader.component';\nimport { BmbCalendarHeaderComponent } from './common/bmb-calendar-header/bmb-calendar-header.component';\nimport {\n  IBmbCalendarEvent,\n  IBmbCalendarEventClick,\n  IBmbCalendarHourFormat,\n  IBmbCalendarView,\n} from './types';\nimport { getWeekDays, getMonthDays } from './utils';\nimport { BmbCalendarTemplateEventComponent } from './common/bmb-calendar-template-event/bmb-calendar-template-event.component';\n\nexport { IBmbCalendarEvent, IBmbCalendarEventClick } from './types';\n\n@Component({\n  selector: 'bmb-calendar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarTemplateDayComponent,\n    BmbCalendarTemplateWeekComponent,\n    BmbCalendarTemplateMonthComponent,\n    BmbLoaderComponent,\n    BmbCalendarHeaderComponent,\n    BmbCalendarTemplateEventComponent,\n  ],\n  styleUrl: './bmb-calendar.component.scss',\n  templateUrl: './bmb-calendar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarComponent {\n  @Input() events: IBmbCalendarEvent[] = [];\n  @Input() view: IBmbCalendarView = 'week';\n  @Input() isLoading: boolean = false;\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() calendarTimezone: string =\n    Intl.DateTimeFormat().resolvedOptions().timeZone;\n  @Input() clientTimezone: string =\n    Intl.DateTimeFormat().resolvedOptions().timeZone;\n  @Input() lang: string = 'es-MX';\n  @Input() currentDate: string = '';\n  @Input() height: number | string = 700;\n\n  @Output() onDateChange: EventEmitter<any> = new EventEmitter<any>();\n\n  now =\n    this.currentDate === ''\n      ? DateTime.now()\n      : DateTime.fromISO(this.currentDate);\n  weekNumber = this.now.weekNumber;\n  renderWeekDays: DateTime[] = getWeekDays(this.now);\n  selectedEvent: { event: IBmbCalendarEvent; position: any } | null = null;\n\n  handleDateChange(range: IBmbCalendarView, now: DateTime): void {\n    this.view = range;\n    let visibleDates: (string | null)[] = [];\n\n    switch (range) {\n      case 'day':\n        visibleDates = [now.toISO()];\n        break;\n\n      case 'week':\n        visibleDates = getWeekDays(now).map((date) => date.toISO());\n        break;\n\n      case 'month':\n        visibleDates = getMonthDays(now).map((date) => date.toISO());\n        break;\n\n      default:\n        break;\n    }\n\n    this.onDateChange.emit({\n      range,\n      now: now.toISO(),\n      visibleDates,\n    });\n  }\n\n  handleCurrentDateChange(newDate: DateTime): void {\n    this.now = newDate;\n    this.weekNumber = newDate.weekNumber;\n    this.renderWeekDays = getWeekDays(newDate);\n  }\n\n  handleSelectEvent(newEvent: IBmbCalendarEventClick | null): void {\n    this.selectedEvent = newEvent;\n  }\n\n  isAnEventSelected(event: IBmbCalendarEventClick | null): boolean {\n    return !!event;\n  }\n\n  getHeight(height: string | number): string {\n    if (typeof height === 'number') return `${height}px`;\n\n    return height;\n  }\n}\n",
      "styleUrl": "./bmb-calendar.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_calendar\" [ngStyle]=\"{ height: getHeight(height) }\">\n  <bmb-calendar-header\n    [weekDays]=\"renderWeekDays\"\n    [lang]=\"lang\"\n    [view]=\"view\"\n    [currentDate]=\"now\"\n    (onRangeChange)=\"handleDateChange($event, now)\"\n    (onCurrentDateChange)=\"handleCurrentDateChange($event)\"\n  />\n  @switch (view) {\n    @case (\"day\") {\n      <bmb-bmb-calendar-template-day\n        [now]=\"now\"\n        [events]=\"events\"\n        (onSelectEvent)=\"handleSelectEvent($event)\"\n      />\n    }\n    @case (\"week\") {\n      <bmb-calendar-template-week\n        [weekDays]=\"renderWeekDays\"\n        [lang]=\"lang\"\n        [hourFormat]=\"hourFormat\"\n        [now]=\"now\"\n        [events]=\"events\"\n        (onSelectEvent)=\"handleSelectEvent($event)\"\n      />\n    }\n    @case (\"month\") {\n      <bmb-calendar-template-month\n        [now]=\"now\"\n        [events]=\"events\"\n        (onSelectEvent)=\"handleSelectEvent($event)\"\n      />\n    }\n    @default {\n      <bmb-calendar-template-week\n        [weekDays]=\"renderWeekDays\"\n        [lang]=\"lang\"\n        [hourFormat]=\"hourFormat\"\n        [now]=\"now\"\n        [events]=\"events\"\n      />\n    }\n  }\n\n  @if (selectedEvent) {\n    <bmb-calendar-template-event\n      [event]=\"selectedEvent\"\n      (closeModal)=\"handleSelectEvent($event)\"\n    />\n  }\n\n  @if (isLoading) {\n    <section class=\"bmb_calendar-loader\">\n      <bmb-loader />\n    </section>\n  }\n</div>\n\n<!-- [handleChangeRange]=\"handleDateChange()\"; -->\n"
    },
    {
      "name": "BmbCalendarHeaderComponent",
      "id": "component-BmbCalendarHeaderComponent-e7191b75700c8ba817e837a6bd2b31cd10eeebda8f4653abf626e0084eac50967fc7801a3285e581fbf92559868cce22bf604c6f58ccc48a339212a2fc85ebf3",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-header/bmb-calendar-header.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-calendar-header",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar-header.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "currentDate",
          "defaultValue": "DateTime.now()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "DateTime",
          "decorators": []
        },
        {
          "name": "lang",
          "defaultValue": "'es-MX'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "view",
          "defaultValue": "'week'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "IBmbCalendarView",
          "decorators": []
        },
        {
          "name": "weekDays",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "DateTime[]",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onCurrentDateChange",
          "defaultValue": "new EventEmitter<DateTime>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "EventEmitter<DateTime>"
        },
        {
          "name": "onRangeChange",
          "defaultValue": "new EventEmitter<any>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getTitle",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleChangeDate",
          "args": [
            {
              "name": "event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 69,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleRangeChange",
          "args": [
            {
              "name": "event",
              "type": "IBmbCalendarView",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "IBmbCalendarView",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { BmbButtonDirective } from '../../../../directives/button.directive';\nimport { BmbIconComponent } from '../../../bmb-icon/bmb-icon.component';\nimport { DateTime } from 'luxon';\nimport { IBmbCalendarView } from '../../types';\n\n@Component({\n  selector: 'bmb-calendar-header',\n  standalone: true,\n  imports: [CommonModule, BmbButtonDirective, BmbIconComponent],\n  templateUrl: './bmb-calendar-header.component.html',\n  styleUrl: './bmb-calendar-header.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarHeaderComponent {\n  @Input() weekDays: DateTime[] = [];\n  @Input() lang: string = 'es-MX';\n  @Input() view: IBmbCalendarView = 'week';\n  @Input() currentDate: DateTime = DateTime.now();\n\n  @Output() onRangeChange: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onCurrentDateChange: EventEmitter<DateTime> =\n    new EventEmitter<DateTime>();\n\n  getTitle(): string {\n    if (this.view === 'week') {\n      return `${this.weekDays[0].toLocaleString({\n        month: 'short',\n        day: 'numeric',\n      })} - ${this.weekDays[6].toLocaleString({\n        month: 'short',\n        day: 'numeric',\n      })}, ${this.currentDate.toLocaleString({ year: 'numeric' })}`;\n    }\n\n    if (this.view === 'day') {\n      return this.currentDate.toLocaleString({\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n      });\n    }\n\n    return this.currentDate.toLocaleString({ month: 'long', year: 'numeric' });\n  }\n\n  handleRangeChange(event: IBmbCalendarView): void {\n    if (event === 'month') {\n      const newDate = DateTime.fromObject({\n        month: this.currentDate.month,\n        year: this.currentDate.year,\n        day: 1,\n      });\n\n      this.onCurrentDateChange.emit(newDate);\n    }\n    this.onRangeChange.emit(event);\n  }\n\n  handleChangeDate(event: string): void {\n    const modifyDate = ({ config, date }: any) => {\n      if (event === '+') {\n        this.onCurrentDateChange.emit(date.plus(config));\n      } else {\n        this.onCurrentDateChange.emit(date.minus(config));\n      }\n    };\n\n    switch (this.view) {\n      case 'day':\n        modifyDate({ config: { days: 1 }, date: this.currentDate });\n        break;\n\n      case 'week':\n        modifyDate({ config: { days: 7 }, date: this.currentDate });\n        break;\n      case 'month':\n        const newDate = DateTime.fromObject({\n          month: this.currentDate.month,\n          year: this.currentDate.year,\n          day: 1,\n        });\n\n        modifyDate({ config: { month: 1 }, date: newDate });\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n",
      "styleUrl": "./bmb-calendar-header.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<section class=\"bmb_calendar-header\">\n  <div class=\"bmb_calendar-header-button-container\">\n    <button\n      bmbButton\n      appearance=\"secondary-filled\"\n      size=\"small\"\n      (click)=\"handleChangeDate('-')\"\n    >\n      <bmb-icon [icon]=\"'arrow_back_ios'\" />\n    </button>\n    <button\n      bmbButton\n      appearance=\"secondary-filled\"\n      size=\"small\"\n      (click)=\"handleChangeDate('+')\"\n    >\n      <bmb-icon [icon]=\"'arrow_forward_ios'\" />\n    </button>\n  </div>\n  <h1 class=\"bmb_calendar-header-title\">\n    {{ getTitle() }}\n  </h1>\n  <div class=\"bmb_calendar-header-button-container\">\n    <button\n      bmbButton\n      appearance=\"secondary-filled\"\n      size=\"small\"\n      (click)=\"handleRangeChange('day')\"\n      [disabled]=\"view === 'day'\"\n    >\n      Day\n    </button>\n    <button\n      bmbButton\n      appearance=\"secondary-filled\"\n      size=\"small\"\n      (click)=\"handleRangeChange('week')\"\n      [disabled]=\"view === 'week'\"\n    >\n      Week\n    </button>\n    <button\n      bmbButton\n      appearance=\"secondary-filled\"\n      size=\"small\"\n      (click)=\"handleRangeChange('month')\"\n      [disabled]=\"view === 'month'\"\n    >\n      Month\n    </button>\n  </div>\n</section>\n"
    },
    {
      "name": "BmbCalendarHourViewComponent",
      "id": "component-BmbCalendarHourViewComponent-c97501f9c6558bf60281e3f8da4a59519df3c7cf46d94219360e61bd34b5de83bd12b940573d572f32f10f578500d245f1342064791e3a6afd019f1ae9bf6a42",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-hour-view/bmb-calendar-hour-view.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-calendar-hour-view",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar-hour-view.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "events",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "IBmbCalendarEvent[]",
          "decorators": []
        },
        {
          "name": "hourFormat",
          "defaultValue": "'12'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "IBmbCalendarHourFormat",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "hours",
          "defaultValue": "this.createHoursRows()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [
        {
          "name": "createHoursRows",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnchanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IBmbCalendarEvent, IBmbCalendarHourFormat } from '../../types';\n\n@Component({\n  selector: 'bmb-calendar-hour-view',\n  standalone: true,\n  imports: [],\n  templateUrl: './bmb-calendar-hour-view.component.html',\n  styleUrl: './bmb-calendar-hour-view.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarHourViewComponent {\n  @Input() events: IBmbCalendarEvent[] = [];\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n\n  createHoursRows() {\n    const placeholderArray = new Array(24).fill(0);\n    let hour = 0;\n    return placeholderArray.map((_, index) => {\n      if (this.hourFormat === '12' && hour === 12) {\n        hour = 0;\n      }\n      if (this.hourFormat === '12' && !index) return '12 am';\n      if (!index) return 0;\n\n      hour++;\n\n      return this.hourFormat === '24'\n        ? hour\n        : `${hour} ${index < 12 ? 'am' : 'pm'}`;\n    });\n  }\n\n  hours = this.createHoursRows();\n\n  ngOnchanges(): void {\n    this.hours = this.createHoursRows();\n  }\n}\n",
      "styleUrl": "./bmb-calendar-hour-view.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_calendar-hours\">\n  <header class=\"bmb_calendar-detail-header\">\n    <h2>-</h2>\n  </header>\n  <div class=\"bmb_calendar-hours-row\">All-day</div>\n  @for (item of hours; track $index) {\n    <div class=\"bmb_calendar-hours-row\">\n      {{ item }}\n    </div>\n  }\n</div>\n"
    },
    {
      "name": "BmbCalendarScheduleCardsComponent",
      "id": "component-BmbCalendarScheduleCardsComponent-50c02b325ea7be621fbcb0d9253f3b29f51070191713710da92d8f5783cb74325310971f8769b8b8af670e6c3d6763d5bdae1de3bccb5ee39ed20a402ee01fc8",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-calendar-schedule-cards",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar-schedule-cards.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "event",
          "defaultValue": "{\n    title: '',\n    detail: '',\n    start: new Date().toISOString(),\n    end: new Date().toISOString(),\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "IBmbCalendarEvent",
          "decorators": []
        },
        {
          "name": "isPositionAbsolute",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onSelectEvent",
          "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "EventEmitter<IBmbCalendarEventClick>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClassNames",
          "args": [
            {
              "name": "date",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "isPositionAbsolute",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "isPositionAbsolute",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPosition",
          "args": [
            {
              "name": "date",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "isPositionAbsolute",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "isPositionAbsolute",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleSelectEvent",
          "args": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "domEvent",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "domEvent",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleTimeRange",
          "args": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { IBmbCalendarEvent, IBmbCalendarEventClick } from '../../types';\nimport { DateTime } from 'luxon';\nimport { getTimeRange } from '../../utils';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-calendar-schedule-cards',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-calendar-schedule-cards.component.html',\n  styleUrl: './bmb-calendar-schedule-cards.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarScheduleCardsComponent {\n  @Input() event: IBmbCalendarEvent = {\n    title: '',\n    detail: '',\n    start: new Date().toISOString(),\n    end: new Date().toISOString(),\n  };\n  @Input() isPositionAbsolute: boolean = true;\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  getPosition(date: IBmbCalendarEvent, isPositionAbsolute: boolean): string {\n    if (!isPositionAbsolute) return '';\n\n    const start = DateTime.fromISO(date.start);\n    const end = DateTime.fromISO(date.end);\n    const startMin = start.hour * 60 + start.minute;\n    const endMin = end.hour * 60 + end.minute - startMin;\n\n    return `top: ${startMin + 60}px; height: ${endMin}px`;\n  }\n\n  getClassNames(\n    date: IBmbCalendarEvent,\n    isPositionAbsolute: boolean,\n  ): string[] {\n    let newClasses = [];\n    if (isPositionAbsolute) newClasses.push('bmb_calendar-event-absolute');\n    const start = DateTime.fromISO(date.start);\n    const end = DateTime.fromISO(date.end);\n    const diff = end.hour * 60 + end.minute - (start.hour * 60 + start.minute);\n\n    if (diff < 60) {\n      newClasses.push('bmb_calendar-event-grid-reduced');\n    } else {\n      newClasses.push('bmb_calendar-event-grid-full');\n    }\n\n    return newClasses;\n  }\n\n  handleSelectEvent(event: IBmbCalendarEvent, domEvent: any) {\n    this.onSelectEvent.emit({\n      event: event,\n      position: domEvent.target.getBoundingClientRect().y,\n    });\n  }\n\n  handleTimeRange(event: IBmbCalendarEvent): string {\n    return getTimeRange(event);\n  }\n}\n",
      "styleUrl": "./bmb-calendar-schedule-cards.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div\n  class=\"bmb_calendar-event\"\n  [ngClass]=\"getClassNames(event, isPositionAbsolute)\"\n  [style]=\"getPosition(event, isPositionAbsolute)\"\n  (click)=\"handleSelectEvent(event, $event)\"\n  title=\"{{ event.title }} - {{ event.detail }}\"\n>\n  <div class=\"bmb_calendar-event-indicator\"></div>\n  <h3 class=\"bmb_calendar-event-title\">\n    {{ event.title }}\n  </h3>\n  @if (isPositionAbsolute) {\n    <p class=\"bmb_calendar-event-content\">{{ event.detail }}</p>\n    <span class=\"bmb_calendar-event-time\">{{ handleTimeRange(event) }}</span>\n  }\n</div>\n"
    },
    {
      "name": "BmbCalendarTemplateDayComponent",
      "id": "component-BmbCalendarTemplateDayComponent-4f927304a17370a67f2c86a9e391c486819f07aafbbb8b5b24fd6b3b5bbbeb02e509f4f8da69e876d5f00f87043f8dc43df97120b4b70d22bf89c51086fcc596",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-day/bmb-calendar-template-day.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-bmb-calendar-template-day",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar-template-day.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "events",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "IBmbCalendarEvent[]",
          "decorators": []
        },
        {
          "name": "hourFormat",
          "defaultValue": "'12'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "IBmbCalendarHourFormat",
          "decorators": []
        },
        {
          "name": "lang",
          "defaultValue": "'es-MX'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "string",
          "decorators": []
        },
        {
          "name": "now",
          "defaultValue": "DateTime.now()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "DateTime",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onSelectEvent",
          "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "EventEmitter<IBmbCalendarEventClick>"
        }
      ],
      "propertiesClass": [
        {
          "name": "rows",
          "defaultValue": "new Array(25).fill(0)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        }
      ],
      "methodsClass": [
        {
          "name": "getNameDay",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleEventSelection",
          "args": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isNow",
          "args": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "renderEvents",
          "args": [
            {
              "name": "events",
              "type": "IBmbCalendarRenderEvents",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any[]",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "events",
              "type": "IBmbCalendarRenderEvents",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbCalendarHourViewComponent",
          "type": "component"
        },
        {
          "name": "BmbCalendarScheduleCardsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { BmbCalendarHourViewComponent } from '../bmb-calendar-hour-view/bmb-calendar-hour-view.component';\nimport { CommonModule } from '@angular/common';\nimport {\n  IBmbCalendarHourFormat,\n  IBmbCalendarEvent,\n  IBmbCalendarRenderEvents,\n  IBmbCalendarEventClick,\n} from '../../types';\nimport { DateTime } from 'luxon';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\nimport { eventsInDate } from '../../utils';\n\n@Component({\n  selector: 'bmb-bmb-calendar-template-day',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarHourViewComponent,\n    BmbCalendarScheduleCardsComponent,\n  ],\n  templateUrl: './bmb-calendar-template-day.component.html',\n  styleUrl: './bmb-calendar-template-day.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateDayComponent {\n  @Input() lang: string = 'es-MX';\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() now: DateTime = DateTime.now();\n  @Input() events: IBmbCalendarEvent[] = [];\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  rows = new Array(25).fill(0);\n\n  getNameDay(): string {\n    return this.now.toFormat('cccc', { locale: this.lang });\n  }\n\n  renderEvents(events: IBmbCalendarRenderEvents): any[] {\n    return eventsInDate(events);\n  }\n\n  handleEventSelection(newEvent: IBmbCalendarEventClick) {\n    this.onSelectEvent.emit(newEvent);\n  }\n\n  isNow(date: DateTime): boolean {\n    const diff = date.diffNow('day').days;\n    return diff < 0 && diff > -1;\n  }\n}\n",
      "styleUrl": "./bmb-calendar-template-day.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_calendar-day-view\">\n  <bmb-calendar-hour-view [hourFormat]=\"hourFormat\" />\n  <section\n    class=\"bmb_calendar-col\"\n    [ngClass]=\"{ 'bmb_calendar-col-today': isNow(now) }\"\n  >\n    <header class=\"bmb_calendar-detail-header\">\n      <h2>{{ getNameDay() }}</h2>\n      <span>{{ now.month }}/{{ now.day }}</span>\n    </header>\n    <div class=\"bmb_calendar-body\">\n      @for (row of rows; track $index) {\n        <div class=\"bmb_calendar-row-body\"></div>\n      }\n      @for (event of renderEvents({ date: now, events }); track $index) {\n        <bmb-calendar-schedule-cards\n          [event]=\"event\"\n          (onSelectEvent)=\"handleEventSelection($event)\"\n          >Event</bmb-calendar-schedule-cards\n        >\n      }\n    </div>\n  </section>\n</div>\n"
    },
    {
      "name": "BmbCalendarTemplateEventComponent",
      "id": "component-BmbCalendarTemplateEventComponent-8b624194e863a899f10dbf724809d052c7ca66afcb7078a41f2e122ed6b68163c7c1d26daaebf5031c5c110119ec5eeaaa28f08d5f124a94735a2641f23a66b0",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-event/bmb-calendar-template-event.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-calendar-template-event",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar-template-event.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "event",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "IBmbCalendarEventClick | null",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "closeModal",
          "defaultValue": "new EventEmitter<null>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter<>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getDateString",
          "args": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent | null | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent | null | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPosition",
          "args": [
            {
              "name": "position",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "position",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleCloseModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleTimeRange",
          "args": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent | null | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "IBmbCalendarEvent | null | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "BmbBadgeComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { IBmbCalendarEventClick, IBmbCalendarEvent } from '../../types';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from '../../../../directives/button.directive';\nimport { BmbIconComponent } from '../../../bmb-icon/bmb-icon.component';\nimport { DateTime } from 'luxon';\nimport { BmbBadgeComponent } from '../../../bmb-badge/bmb-badge.component';\nimport { getTimeRange } from '../../utils';\n\n@Component({\n  selector: 'bmb-calendar-template-event',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbButtonDirective,\n    BmbIconComponent,\n    BmbBadgeComponent,\n  ],\n  templateUrl: './bmb-calendar-template-event.component.html',\n  styleUrl: './bmb-calendar-template-event.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateEventComponent {\n  @Input() event: IBmbCalendarEventClick | null = null;\n\n  @Output() closeModal: EventEmitter<null> = new EventEmitter<null>();\n\n  getPosition(position: any): string {\n    return `top: ${position}px`;\n  }\n\n  getDateString(event: IBmbCalendarEvent | null | undefined): string {\n    if (!event) return '00:00';\n    const start = DateTime.fromISO(event.start);\n\n    return start.toFormat('hh:mm');\n  }\n\n  handleTimeRange(event: IBmbCalendarEvent | null | undefined): string {\n    if (!event) return '';\n    return getTimeRange(event);\n  }\n\n  handleCloseModal() {\n    this.closeModal.emit(null);\n  }\n}\n",
      "styleUrl": "./bmb-calendar-template-event.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<dialog open class=\"bmb_calendar-event-modal\">\n  <div class=\"bmb_calendar-event-modal-body\">\n    <header class=\"bmb_calendar-event-modal-header\">\n      <span class=\"bmb_calendar-event-modal-header-time\">\n        {{ getDateString(event?.event) }}\n      </span>\n      <h1 class=\"bmb_calendar-event-modal-header-title\">\n        {{ event?.event?.title }}\n      </h1>\n      <button bmbButton (click)=\"handleCloseModal()\">\n        <bmb-icon [icon]=\"'close'\" />\n      </button>\n    </header>\n    <p class=\"bmb_calendar-event-modal-content\">{{ event?.event?.detail }}</p>\n    <footer class=\"bmb_calendar-event-modal-footer\">\n      <bmb-badge appearance=\"strong\" text=\"In progress\" />\n      <span class=\"bmb_calendar-event-modal-footer-time\">\n        {{ handleTimeRange(event?.event) }}\n      </span>\n    </footer>\n  </div>\n</dialog>\n"
    },
    {
      "name": "BmbCalendarTemplateMonthComponent",
      "id": "component-BmbCalendarTemplateMonthComponent-b5114511e6097eac8623026edc9cce416c78cf6a3d293043e995027a7fbfad4b233f5165d0b83d89c981862b9d57e60c8127dc58a19f676df034acb720301517",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-month/bmb-calendar-template-month.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-calendar-template-month",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar-template-month.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "events",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "IBmbCalendarEvent[]",
          "decorators": []
        },
        {
          "name": "hourFormat",
          "defaultValue": "'12'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "IBmbCalendarHourFormat",
          "decorators": []
        },
        {
          "name": "lang",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string",
          "decorators": []
        },
        {
          "name": "now",
          "defaultValue": "DateTime.now()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "DateTime",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onSelectEvent",
          "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "EventEmitter<IBmbCalendarEventClick>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getDayName",
          "args": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getWeeksAndDays",
          "args": [],
          "optional": false,
          "returnType": "DateTime[]",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleEventSelection",
          "args": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isNow",
          "args": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 60,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "renderEvents",
          "args": [
            {
              "name": "events",
              "type": "IBmbCalendarRenderEvents",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any[]",
          "typeParameters": [],
          "line": 69,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "events",
              "type": "IBmbCalendarRenderEvents",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbCalendarHourViewComponent",
          "type": "component"
        },
        {
          "name": "BmbCalendarScheduleCardsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { BmbCalendarHourViewComponent } from '../bmb-calendar-hour-view/bmb-calendar-hour-view.component';\nimport {\n  IBmbCalendarHourFormat,\n  IBmbCalendarEvent,\n  IBmbCalendarEventClick,\n  IBmbCalendarRenderEvents,\n} from '../../types';\nimport { DateTime, Info } from 'luxon';\nimport { getWeekDays, eventsInDate } from '../../utils';\nimport { CommonModule } from '@angular/common';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\n\n@Component({\n  selector: 'bmb-calendar-template-month',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarHourViewComponent,\n    BmbCalendarScheduleCardsComponent,\n  ],\n  templateUrl: './bmb-calendar-template-month.component.html',\n  styleUrl: './bmb-calendar-template-month.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateMonthComponent {\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() now: DateTime = DateTime.now();\n  @Input() lang: string = '';\n  @Input() events: IBmbCalendarEvent[] = [];\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  getWeeksAndDays(): DateTime[] {\n    const calculateFirstDay = getWeekDays(this.now);\n\n    let weekDays = [];\n\n    for (let day = 0; day <= 34; day++) {\n      weekDays.push(calculateFirstDay[0].plus({ days: day }));\n    }\n\n    return weekDays;\n  }\n\n  getDayName(date: DateTime): string {\n    const defaultDayOrder = Info.weekdays('short', { locale: this.lang });\n    return defaultDayOrder[date.weekday - 1];\n  }\n\n  isNow(date: DateTime): boolean {\n    const diff = date.diffNow('day').days;\n    return diff < 0 && diff > -1;\n  }\n\n  handleEventSelection(newEvent: IBmbCalendarEventClick) {\n    this.onSelectEvent.emit(newEvent);\n  }\n\n  renderEvents(events: IBmbCalendarRenderEvents): any[] {\n    return eventsInDate(events);\n  }\n}\n",
      "styleUrl": "./bmb-calendar-template-month.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_calendar-month-view\">\n  @for (day of getWeeksAndDays(); track $index) {\n    <div\n      class=\"bmb_calendar-month-view-day\"\n      [ngClass]=\"{ 'bmb_calendar-col-today': isNow(day) }\"\n    >\n      <span class=\"bmb_calendar-month-view-day-legend\">\n        <span class=\"bmb_calendar-month-view-day-name\">{{\n          getDayName(day)\n        }}</span>\n        {{ day.month }}/{{ day.day }}\n      </span>\n      @for (event of renderEvents({ date: day, events }); track $index) {\n        <bmb-calendar-schedule-cards\n          [event]=\"event\"\n          (onSelectEvent)=\"handleEventSelection($event)\"\n          [isPositionAbsolute]=\"false\"\n          >Event</bmb-calendar-schedule-cards\n        >\n      }\n    </div>\n  }\n</div>\n"
    },
    {
      "name": "BmbCalendarTemplateWeekComponent",
      "id": "component-BmbCalendarTemplateWeekComponent-d23a7eb3802735e45aecebab5a83a19bc8f7bfc582cc28ad3bfe85bc85f16d6ec36cf7fc46f68c62f3ca3e706ed1cf14b0aed45d7cee779cce478d40ba4b8b24",
      "file": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-week/bmb-calendar-template-week.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-calendar-template-week",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-calendar-template-week.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "events",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "IBmbCalendarEvent[]",
          "decorators": []
        },
        {
          "name": "hourFormat",
          "defaultValue": "'12'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "IBmbCalendarHourFormat",
          "decorators": []
        },
        {
          "name": "lang",
          "defaultValue": "'es-MX'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "string",
          "decorators": []
        },
        {
          "name": "now",
          "defaultValue": "DateTime.now()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "DateTime",
          "decorators": []
        },
        {
          "name": "weekDays",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "any[]",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onSelectEvent",
          "defaultValue": "new EventEmitter<IBmbCalendarEventClick>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "EventEmitter<IBmbCalendarEventClick>"
        }
      ],
      "propertiesClass": [
        {
          "name": "dayNames",
          "defaultValue": "orderDayNames(this.defaultDayOrder)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "defaultDayOrder",
          "defaultValue": "Info.weekdays('short', { locale: this.lang })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "rows",
          "defaultValue": "new Array(25).fill(0)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        }
      ],
      "methodsClass": [
        {
          "name": "handleEventSelection",
          "args": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "newEvent",
              "type": "IBmbCalendarEventClick",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isNow",
          "args": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "DateTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "renderEvents",
          "args": [
            {
              "name": "events",
              "type": "IBmbCalendarRenderEvents",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any[]",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "events",
              "type": "IBmbCalendarRenderEvents",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbCalendarHourViewComponent",
          "type": "component"
        },
        {
          "name": "BmbCalendarScheduleCardsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Info, DateTime } from 'luxon';\nimport {\n  IBmbCalendarHourFormat,\n  IBmbCalendarEvent,\n  IBmbCalendarEventClick,\n  IBmbCalendarRenderEvents,\n} from '../../types';\nimport { BmbCalendarHourViewComponent } from '../bmb-calendar-hour-view/bmb-calendar-hour-view.component';\nimport { orderDayNames, eventsInDate } from '../../utils';\nimport { BmbCalendarScheduleCardsComponent } from '../bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component';\n\n@Component({\n  selector: 'bmb-calendar-template-week',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbCalendarHourViewComponent,\n    BmbCalendarScheduleCardsComponent,\n  ],\n  templateUrl: './bmb-calendar-template-week.component.html',\n  styleUrl: './bmb-calendar-template-week.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCalendarTemplateWeekComponent {\n  @Input() weekDays: any[] = [];\n  @Input() lang: string = 'es-MX';\n  @Input() hourFormat: IBmbCalendarHourFormat = '12';\n  @Input() now: DateTime = DateTime.now();\n  @Input() events: IBmbCalendarEvent[] = [];\n\n  @Output() onSelectEvent: EventEmitter<IBmbCalendarEventClick> =\n    new EventEmitter<IBmbCalendarEventClick>();\n\n  defaultDayOrder = Info.weekdays('short', { locale: this.lang });\n\n  dayNames = orderDayNames(this.defaultDayOrder);\n\n  rows = new Array(25).fill(0);\n\n  isNow(date: DateTime): boolean {\n    const diff = date?.diffNow('day')?.days;\n    return diff < 0 && diff > -1;\n  }\n\n  renderEvents(events: IBmbCalendarRenderEvents): any[] {\n    return eventsInDate(events);\n  }\n\n  handleEventSelection(newEvent: IBmbCalendarEventClick) {\n    this.onSelectEvent.emit(newEvent);\n  }\n}\n",
      "styleUrl": "./bmb-calendar-template-week.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_calendar-week-view\">\n  <bmb-calendar-hour-view [hourFormat]=\"hourFormat\" />\n  @for (day of dayNames; track $index) {\n    <section\n      class=\"bmb_calendar-col\"\n      [ngClass]=\"{ 'bmb_calendar-col-today': isNow(weekDays[$index]) }\"\n    >\n      <header class=\"bmb_calendar-detail-header\">\n        <h2>{{ day }}</h2>\n        <span>{{ weekDays[$index].month }}/{{ weekDays[$index].day }}</span>\n      </header>\n      <div class=\"bmb_calendar-body\">\n        @for (row of rows; track $index) {\n          <div class=\"bmb_calendar-row-body\"></div>\n        }\n        @for (\n          event of renderEvents({ date: weekDays[$index], events });\n          track $index\n        ) {\n          <bmb-calendar-schedule-cards\n            [event]=\"event\"\n            (onSelectEvent)=\"handleEventSelection($event)\"\n            >Event</bmb-calendar-schedule-cards\n          >\n        }\n      </div>\n    </section>\n  }\n</div>\n"
    },
    {
      "name": "BmbCardComponent",
      "id": "component-BmbCardComponent-9bf010e2d508f7b60159885f86dda63932a4ffdee0ee5e3095c0e7522aba364b98576e0f7d4fb621e18fde6c9ba0a09c5d4b0100f085271ad678e1b65efb77f2",
      "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-card",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-card.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "borderRadius",
          "defaultValue": "'m'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "SizeNames | SizeNames[]",
          "decorators": []
        },
        {
          "name": "margin",
          "defaultValue": "'m'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "SizeNames | SizeNames[]",
          "decorators": []
        },
        {
          "name": "padding",
          "defaultValue": "'m'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "SizeNames | SizeNames[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "footerContent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": true,
          "description": "",
          "line": 31,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "'footer'"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "headerContent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": true,
          "description": "",
          "line": 30,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "'header'"
            }
          ],
          "modifierKind": [170]
        }
      ],
      "methodsClass": [
        {
          "name": "calculateSize",
          "args": [
            {
              "name": "pixels",
              "type": "string[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 69,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "pixels",
              "type": "string[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getContentClasses",
          "args": [],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getContentStyles",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getStyles",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SizeNames } from '../../types';\n\n@Component({\n  selector: 'bmb-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-card.component.html',\n  styleUrl: './bmb-card.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCardComponent {\n  @Input() borderRadius: SizeNames | SizeNames[] = 'm';\n  @Input() padding: SizeNames | SizeNames[] = 'm';\n  @Input() margin: SizeNames | SizeNames[] = 'm';\n\n  @ContentChild('header') headerContent?: TemplateRef<any>;\n  @ContentChild('footer') footerContent?: TemplateRef<any>;\n\n  getClasses() {\n    const classNames = [];\n    if (typeof this.borderRadius === 'string')\n      classNames.push(`bmb_border-radius-${this.borderRadius}`);\n    if (typeof this.margin === 'string')\n      classNames.push(`bmb_margin-${this.margin}`);\n\n    return classNames;\n  }\n\n  getStyles() {\n    const styles: any = {};\n    if (typeof this.borderRadius !== 'string')\n      styles['border-radius'] = this.calculateSize(this.borderRadius);\n    if (typeof this.margin !== 'string')\n      styles.margin = this.calculateSize(this.margin);\n\n    return styles;\n  }\n\n  getContentClasses() {\n    const classNames = [];\n    if (typeof this.padding === 'string')\n      classNames.push(`bmb_padding-${this.padding}`);\n\n    return classNames;\n  }\n\n  getContentStyles() {\n    const styles: any = {};\n    if (typeof this.padding !== 'string')\n      styles.padding = this.calculateSize(this.padding);\n\n    return styles;\n  }\n\n  calculateSize(pixels: string[]): string {\n    return pixels\n      .map((size) => {\n        switch (size) {\n          case 'xs':\n            return '0.25rem';\n          case 's':\n            return '0.5rem';\n          case 'm':\n            return '1rem';\n          case 'l':\n            return '1.5rem';\n          case 'xl':\n            return '2rem';\n          case 'none':\n            return '0';\n          case 'auto':\n            return 'auto';\n          default:\n            return '1rem';\n        }\n      })\n      .join(' ');\n  }\n}\n",
      "styleUrl": "./bmb-card.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<section class=\"bmb_card\" [ngClass]=\"getClasses()\" [ngStyle]=\"getStyles()\">\n  @if (!!headerContent) {\n    <header\n      class=\"bmb_card-header\"\n      [ngClass]=\"getContentClasses()\"\n      [ngStyle]=\"getContentStyles()\"\n    >\n      <ng-container [ngTemplateOutlet]=\"headerContent\"></ng-container>\n    </header>\n  }\n  <div\n    class=\"bmb_card-content\"\n    [ngClass]=\"getContentClasses()\"\n    [ngStyle]=\"getContentStyles()\"\n  >\n    <ng-content></ng-content>\n  </div>\n  @if (!!footerContent) {\n    <footer\n      class=\"bmb_card-footer\"\n      [ngClass]=\"getContentClasses()\"\n      [ngStyle]=\"getContentStyles()\"\n    >\n      <ng-container [ngTemplateOutlet]=\"footerContent\"></ng-container>\n    </footer>\n  }\n</section>\n"
    },
    {
      "name": "BmbCheckboxComponent",
      "id": "component-BmbCheckboxComponent-9560ee90693508ae9d051a6040000185ff25a4c5b175345e6861b3a4ae011b4f6d6704768aded56e3cf23a11da8ab1638feac45bec5ae18338053d67df44609d",
      "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-checkbox",
      "styleUrls": ["./bmb-checkbox.component.scss"],
      "styles": [],
      "templateUrl": ["./bmb-checkbox.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "ariaDescribedby",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "ariaLabel",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "string",
          "decorators": []
        },
        {
          "name": "ariaLabelledby",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "string",
          "decorators": []
        },
        {
          "name": "checked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "id",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        },
        {
          "name": "indeterminate",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string",
          "decorators": []
        },
        {
          "name": "labelPosition",
          "defaultValue": "'after'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "\"before\" | \"after\"",
          "decorators": []
        },
        {
          "name": "name",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "decorators": []
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter<Event>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleChange",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleKeyDown",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-checkbox',\n  templateUrl: './bmb-checkbox.component.html',\n  styleUrls: ['./bmb-checkbox.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCheckboxComponent {\n  @Input() id: string = '';\n  @Input() checked: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() indeterminate: boolean = false;\n  @Input() required: boolean = false;\n  @Input() value: string = '';\n  @Input() name: string = '';\n  @Input() label: string = '';\n  @Input() labelPosition: 'before' | 'after' = 'after';\n  @Input() ariaDescribedby: string = '';\n  @Input() ariaLabel: string = '';\n  @Input() ariaLabelledby: string = '';\n\n  @Output() change: EventEmitter<Event> = new EventEmitter<Event>();\n\n  handleChange(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.checked = target.checked;\n    this.change.emit(event);\n    event.stopPropagation();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.checked = true;\n      } else {\n        this.checked = !this.checked;\n      }\n\n      event.preventDefault();\n      this.change.emit(event);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_checkbox {\n  align-items: center;\n  display: flex;\n  gap: rem.rem_calc(8);\n  position: relative;\n  width: fit-content;\n\n  input[type=\"checkbox\"] {\n    cursor: pointer;\n    height: rem.rem_calc(42);\n    margin: 0;\n    opacity: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n\n    &:hover {\n      + .bmb_checkbox-box {\n        background-color: RGBA(var(--color-blue-primary), 0.1);\n      }\n    }\n\n    &:focus {\n      + .bmb_checkbox-box {\n        background-color: RGBA(var(--color-blue-primary), 0.2);\n      }\n    }\n\n    &:checked {\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          background-color: RGBA(var(--color-blue-primary));\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            border: solid RGBA(var(--color-white-primary));\n            border-width: rem.rem_calc(0 2 2 0);\n            display: block;\n            height: rem.rem_calc(10);\n            left: rem.rem_calc(4);\n            transform: rotate(45deg);\n            width: rem.rem_calc(4);\n          }\n        }\n      }\n    }\n\n    &:indeterminate {\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          background-color: RGBA(var(--color-blue-primary));\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            background-color: RGBA(var(--color-white-primary));\n            bottom: 0;\n            display: block;\n            height: rem.rem_calc(2);\n            left: 0;\n            margin: auto;\n            right: 0;\n            top: 0;\n            width: rem.rem_calc(10);\n          }\n        }\n      }\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          opacity: 0.5;\n        }\n      }\n      &:hover {\n        + .bmb_checkbox-box {\n          background-color: transparent;\n        }\n      }\n    }\n  }\n\n  &-required {\n    .bmb_checkbox-mark {\n      border-color: RGBA(var(--color-mitec-red));\n    }\n  }\n\n  &-box {\n    align-items: center;\n    border-radius: 100%;\n    display: flex;\n    height: rem.rem_calc(42);\n    justify-content: center;\n    width: rem.rem_calc(42);\n  }\n\n  &-mark {\n    background-color: transparent;\n    border: rem.rem_calc(2) solid RGBA(var(--color-charade-700));\n    border-radius: rem.rem_calc(4);\n    display: inline-block;\n    height: rem.rem_calc(18);\n    position: relative;\n    width: rem.rem_calc(18);\n\n    &::after {\n      content: \"\";\n      display: none;\n      position: absolute;\n    }\n  }\n\n  &-label {\n    color: RGBA(var(--color-charade-950));\n    flex: 1;\n    overflow: hidden;\n    padding-right: rem.rem_calc(10);\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    @include fonts.font(4, medium);\n  }\n\n  &-before {\n    .bmb_checkbox-label {\n      order: 1;\n    }\n    .bmb_checkbox-box {\n      order: 2;\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_checkbox {\n    input[type=\"checkbox\"] {\n      &:hover {\n        + .bmb_checkbox-box {\n          background-color: RGBA(var(--color-green-light), 0.1);\n        }\n      }\n\n      &:focus {\n        + .bmb_checkbox-box {\n          background-color: RGBA(var(--color-green-light), 0.2);\n        }\n      }\n\n      &:checked {\n        + .bmb_checkbox-box {\n          .bmb_checkbox-mark {\n            background-color: RGBA(var(--color-green-light));\n            border-color: RGBA(var(--color-green-light));\n          }\n        }\n      }\n\n      &:indeterminate {\n        + .bmb_checkbox-box {\n          .bmb_checkbox-mark {\n            background-color: RGBA(var(--color-green-light));\n            border-color: RGBA(var(--color-green-light));\n          }\n        }\n      }\n    }\n\n    &-mark {\n      border-color: RGBA(var(--color-charade-200));\n    }\n\n    &-label {\n      color: RGBA(var(--color-charade-50));\n    }\n  }\n}\n",
          "styleUrl": "./bmb-checkbox.component.scss"
        }
      ],
      "stylesData": "",
      "extends": [],
      "templateData": "<label\n  [attr.for]=\"id\"\n  class=\"bmb_checkbox\"\n  [class.bmb_checkbox-before]=\"labelPosition === 'before'\"\n  [class.bmb_checkbox-after]=\"labelPosition === 'after'\"\n  [class.bmb_checkbox-required]=\"required\"\n>\n  <input\n    type=\"checkbox\"\n    [id]=\"id\"\n    [attr.aria-describedby]=\"ariaDescribedby\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.name]=\"name\"\n    [attr.value]=\"value\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [indeterminate]=\"indeterminate\"\n    (change)=\"handleChange($event)\"\n    (keydown)=\"handleKeyDown($event)\"\n  />\n  <div class=\"bmb_checkbox-box\">\n    <span class=\"bmb_checkbox-mark\"></span>\n  </div>\n  @if (label) {\n    <span class=\"bmb_checkbox-label\">{{ label }}</span>\n  }\n</label>\n"
    },
    {
      "name": "BmbChevronTitleSelectorComponent",
      "id": "component-BmbChevronTitleSelectorComponent-012b52964cbd5aba9fc538aa89e2295abff2315a3c271decfe4074080642fc8dc352450b81275cb1651ceddcfb51ad6a814e439b5311594ee483a9798a5a5217",
      "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-chevron-title-selector",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-chevron-title-selector.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "leadingIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "trailingIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onLeadingClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "EventEmitter<void>"
        },
        {
          "name": "onTrailingClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleLeadingClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleTrailingClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-chevron-title-selector',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-chevron-title-selector.component.scss',\n  templateUrl: './bmb-chevron-title-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbChevronTitleSelectorComponent {\n  @Input() title: string = '';\n  @Input() leadingIcon: string = '';\n  @Input() trailingIcon: string = '';\n\n  @Output() onLeadingClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onTrailingClick: EventEmitter<void> = new EventEmitter<void>();\n\n  handleLeadingClick() {\n    this.onLeadingClick.emit();\n  }\n\n  handleTrailingClick() {\n    this.onTrailingClick.emit();\n  }\n}\n",
      "styleUrl": "./bmb-chevron-title-selector.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_chevron\">\n  <button\n    class=\"bmb_chevron-button\"\n    *ngIf=\"leadingIcon\"\n    (click)=\"handleLeadingClick()\"\n  >\n    <bmb-icon [icon]=\"leadingIcon\" class=\"bmb_chevron-icon\" />\n  </button>\n\n  <span class=\"bmb_chevron-title\">{{ title }}</span>\n  <button\n    class=\"bmb_chevron-button\"\n    *ngIf=\"trailingIcon\"\n    (click)=\"handleTrailingClick()\"\n  >\n    <bmb-icon [icon]=\"trailingIcon\" class=\"bmb_chevron-icon\" />\n  </button>\n</div>\n"
    },
    {
      "name": "BmbContainerButtonComponent",
      "id": "component-BmbContainerButtonComponent-4e02d5c42340f7375fc5a2fef059faaa13cdc70fbf9b44478fbf2ee30e8d7aa98c301ef2c69b93832f3c8e72cc34d788dca37957a40eef471c7b9f3ec8fdb835",
      "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-container-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-container-button.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "iconLeft",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconRight",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "score",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "square",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "subtitle",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n@Component({\n  selector: 'bmb-container-button',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-container-button.component.scss',\n  templateUrl: './bmb-container-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbContainerButtonComponent {\n  @Input() title: string = '';\n  @Input() score: string = '';\n  @Input() square: boolean = false;\n  @Input() target: string = '';\n  @Input() link: string = '';\n  @Input() subtitle: string = '';\n  @Input() iconLeft: string = '';\n  @Input() iconRight: string = '';\n}\n",
      "styleUrl": "./bmb-container-button.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<a\n  class=\"bmb_container_button\"\n  [ngClass]=\"{\n    'bmb_container_button-small': subtitle || score,\n    'bmb_container_button-square': square\n  }\"\n  [href]=\"link\"\n  [target]=\"target\"\n>\n  <bmb-icon\n    [icon]=\"iconLeft\"\n    class=\"bmb_container_button-left\"\n    *ngIf=\"iconLeft && !score\"\n  />\n  <div class=\"bmb_container_button-score\" *ngIf=\"score && !square\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"48\"\n      height=\"40\"\n      viewBox=\"0 0 40 48\"\n      fill=\"currentColor\"\n    >\n      <mask id=\"path-1-inside-1_3664_9005\" fill=\"currentColor\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M0 11.9719L20 0L40 11.9719V20.2667V27.7333V36.0281L20 48L0 36.0281V27.7333V20.2667V11.9719Z\"\n        />\n      </mask>\n      <path\n        d=\"M20 0L20.5136 -0.858025L20 -1.16547L19.4864 -0.858025L20 0ZM0 11.9719L-0.513607 11.1138L-1 11.405V11.9719H0ZM40 11.9719H41V11.405L40.5136 11.1138L40 11.9719ZM40 36.0281L40.5136 36.8862L41 36.595V36.0281H40ZM20 48L19.4864 48.858L20 49.1655L20.5136 48.858L20 48ZM0 36.0281H-1V36.595L-0.513607 36.8862L0 36.0281ZM19.4864 -0.858025L-0.513607 11.1138L0.513607 12.8299L20.5136 0.858025L19.4864 -0.858025ZM40.5136 11.1138L20.5136 -0.858025L19.4864 0.858025L39.4864 12.8299L40.5136 11.1138ZM41 20.2667V11.9719H39V20.2667H41ZM39 20.2667V27.7333H41V20.2667H39ZM39 27.7333V36.0281H41V27.7333H39ZM39.4864 35.1701L19.4864 47.142L20.5136 48.858L40.5136 36.8862L39.4864 35.1701ZM20.5136 47.142L0.513607 35.1701L-0.513607 36.8862L19.4864 48.858L20.5136 47.142ZM1 36.0281V27.7333H-1V36.0281H1ZM1 27.7333V20.2667H-1V27.7333H1ZM-1 11.9719V20.2667H1V11.9719H-1Z\"\n        fill=\"currentColor\"\n        mask=\"url(#path-1-inside-1_3664_9005)\"\n      />\n    </svg>\n    <span>{{ score }}</span>\n  </div>\n  <div class=\"bmb_container_button-text\">\n    <span class=\"bmb_container_button-title\">{{ title }}</span>\n    <span class=\"bmb_container_button-subtitle\" *ngIf=\"subtitle && !square\">{{\n      subtitle\n    }}</span>\n  </div>\n  <bmb-icon\n    [icon]=\"iconRight\"\n    class=\"bmb_container_button-right\"\n    *ngIf=\"iconRight && !square\"\n  />\n</a>\n"
    },
    {
      "name": "BmbContainerComponent",
      "id": "component-BmbContainerComponent-4eab7c60c59ad0123a3d7e46d1b65770c478da8592b6c44be9f1429016f30acf1ae14c83ffb889466c8ae704b66589fb22b21cf38ebf52d87869dafbffd3c0b9",
      "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-container",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-container.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-container',\n  standalone: true,\n  imports: [CommonModule],\n  styleUrl: './bmb-container.component.scss',\n  templateUrl: './bmb-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbContainerComponent {\n  @Input() appearance: string = '';\n\n  constructor() {}\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_container'];\n\n    if (this.appearance) {\n      classes.push('bmb_container-' + this.appearance);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-container.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 19
      },
      "extends": [],
      "templateData": "<div [ngClass]=\"getClasses()\">\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "BmbDividerComponent",
      "id": "component-BmbDividerComponent-c01b5cdc7f09a37bd606ee023ef3bbf2215642f932d456b2a9473097b66705b6c7057115fec3144a2da5330861f7beebf0ff811103b0f64b401fd20eff1adb56",
      "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-divider",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-divider.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "type",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-divider',\n  styleUrl: './bmb-divider.component.scss',\n  templateUrl: './bmb-divider.component.html',\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDividerComponent {\n  @Input() type: string = '';\n\n  constructor() {}\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_divider'];\n\n    if (this.type) {\n      classes.push('bmb_divider-' + this.type);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-divider.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 18
      },
      "extends": [],
      "templateData": "<div class=\"bmb_divider\" [ngClass]=\"getClasses()\"></div>\n"
    },
    {
      "name": "BmbDotPaginatorComponent",
      "id": "component-BmbDotPaginatorComponent-f2c3d13fcf4fd6183ec16ed094945329f06423ca7483317bd35b40b174de58d51ac8b2c617a6cf24a3f7aca7974b78604de4aff3d3f914fbfd2720c5feb49d40",
      "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-dot-paginator",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-dot-paginator.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "activeDotIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "number",
          "decorators": []
        },
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "targets",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "Target[]",
          "decorators": []
        },
        {
          "name": "totalDots",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onDotPress",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "EventEmitter<number>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getDotsArray",
          "args": [],
          "optional": false,
          "returnType": "number[]",
          "typeParameters": [],
          "line": 32,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onDotClicked",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'bmb-dot-paginator',\n  standalone: true,\n  styleUrl: './bmb-dot-paginator.component.scss',\n  imports: [CommonModule],\n  templateUrl: './bmb-dot-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDotPaginatorComponent {\n  @Input() activeDotIndex?: number = 0;\n  @Input() totalDots?: number = 0;\n  @Input() targets: Target[] = [];\n  @Input() appearance: string = '';\n  @Output() onDotPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getDotsArray(): number[] {\n    return new Array(this.totalDots ?? 0).fill(0).map((_, i) => i);\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_dot_paginator'];\n\n    if (this.appearance) {\n      classes.push('bmb_dot_paginator-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  onDotClicked(index: number): void {\n    this.activeDotIndex = index;\n    this.onDotPress.emit(index);\n  }\n}\n",
      "styleUrl": "./bmb-dot-paginator.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<ol [ngClass]=\"getClasses()\">\n  <li\n    *ngFor=\"let i of getDotsArray()\"\n    [attr.data-bs-target]=\"targets && targets[i] ? targets[i].target : ''\"\n    [attr.data-bs-slide-to]=\"i\"\n    [ngClass]=\"{ dot: true, active: activeDotIndex === i }\"\n    (click)=\"onDotClicked(i)\"\n  ></li>\n</ol>\n"
    },
    {
      "name": "BmbFabComponent",
      "id": "component-BmbFabComponent-7381630d50d521a105de0b6447141c8449c46f5458631927b9b7ffd9ca675da2d141da14c657f10883f3c26dcad2a433049f0c9a002bacac6db18323254bc8bb",
      "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-fab",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-fab.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "FabSize",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string | null",
          "decorators": []
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "FabType",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "active",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "closeIcon",
          "defaultValue": "'close'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "fabStyle",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [
        {
          "name": "myClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'click'"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setStyles",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "click",
          "args": [],
          "argsDecorator": [],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31
        }
      ],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  HostListener,\n  Input,\n  ViewEncapsulation,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { FabSize, FabType } from './bmb-fab-.interface';\n@Component({\n  selector: 'bmb-fab',\n  styleUrl: './bmb-fab.component.scss',\n  templateUrl: './bmb-fab.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbFabComponent {\n  @Input() icon = '';\n  @Input() text?: string | null = '';\n  @Input() size?: FabSize;\n  @Input() type?: FabType;\n\n  active: boolean = false;\n\n  closeIcon = 'close';\n\n  fabStyle = '';\n\n  @HostListener('click') myClick() {\n    if (this.type == 'normal') {\n      this.active = !this.active;\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    this.fabStyle = this.setStyles();\n  }\n\n  setStyles() {\n    let style = 'bmb_fab';\n\n    if (this.size == 'small') {\n      style = `${style}-small`;\n    } else {\n      style = `${style}-large`;\n    }\n\n    if (this.type === 'extended') {\n      style = `${style}-extended`;\n    } else {\n      style = `${style}-normal`;\n    }\n    return style;\n  }\n}\n",
      "styleUrl": "./bmb-fab.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 35
      },
      "extends": [],
      "templateData": "<button [ngClass]=\"this.fabStyle\" type=\"button\">\n  <span *ngIf=\"type == 'extended'\">{{ text }}</span>\n  <bmb-icon *ngIf=\"!active\" icon=\"{{ icon }}\" />\n  <bmb-icon *ngIf=\"type == 'normal' && active\" icon=\"close\" />\n</button>\n"
    },
    {
      "name": "BmbFocusElementComponent",
      "id": "component-BmbFocusElementComponent-54cbc6668ffb0724b9733afb69dbfea43e25f5bc7a3858a936b09d1f2f1f28fc50a5b193c40b8bd47dff40f66d550826a1a4ae7759b60ac89f30850432176731",
      "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-focus-element",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-focus-element.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "number",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "number",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-focus-element',\n  styleUrl: './bmb-focus-element.component.scss',\n  templateUrl: './bmb-focus-element.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbFocusElementComponent {\n  @Input() icon: string = '';\n  @Input() number: number = 0;\n  @Input() title: string = '';\n}\n",
      "styleUrl": "./bmb-focus-element.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_focus_element\">\n  <div class=\"bmb_focus_element-circle\">\n    @if (icon && !number) {\n      <bmb-icon class=\"bmb_focus_element-icon\" icon=\"{{ icon }}\" />\n    }\n    @if (number && !icon) {\n      <span class=\"bmb_focus_element-number\">{{ number }}</span>\n    }\n  </div>\n  @if (title) {\n    <p class=\"bmb_focus_element-title\">{{ title }}</p>\n  }\n</div>\n"
    },
    {
      "name": "BmbHeaderMobileComponent",
      "id": "component-BmbHeaderMobileComponent-d3f4bb98ed5796e99af7b6b94f25ad3cf4fcf7c665f7f83048d8c5fc6eed4dd73f3b52e4c3e2783337ff932375c7fca9730e4b95e7ce070f064c6d1850bae3a9",
      "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-header-mobile",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-header-mobile.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "altLogo",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconLeft",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconRight",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconRight2",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string",
          "decorators": []
        },
        {
          "name": "logo",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string",
          "decorators": []
        },
        {
          "name": "logoLink",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string",
          "decorators": []
        },
        {
          "name": "logoTarget",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userAltImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userLink",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userTarget",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onIconLeftClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "EventEmitter<void>"
        },
        {
          "name": "onIconRight2Click",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "EventEmitter<void>"
        },
        {
          "name": "onIconRightClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleIconLeftClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleIconRight2Click",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleIconRightClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "BmbLogoComponent",
          "type": "component"
        },
        {
          "name": "BmbContainerComponent",
          "type": "component"
        },
        {
          "name": "BmbUserImageComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\nimport { BmbLogoComponent } from '../bmb-logo/bmb-logo.component';\nimport { BmbUserImageComponent } from '../bmb-user-image/bmb-user-image.component';\n@Component({\n  selector: 'bmb-header-mobile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbLogoComponent,\n    BmbContainerComponent,\n    BmbUserImageComponent,\n  ],\n  styleUrl: './bmb-header-mobile.component.scss',\n  templateUrl: './bmb-header-mobile.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbHeaderMobileComponent {\n  @Input() text: string = '';\n\n  @Input() userImage: string = '';\n  @Input() userAltImage: string = '';\n  @Input() userLink: string = '';\n  @Input() userTarget: string = '';\n\n  @Input() logo: string = '';\n  @Input() altLogo: string = '';\n  @Input() logoLink: string = '';\n  @Input() logoTarget: string = '';\n\n  @Input() iconLeft: string = '';\n  @Input() iconRight: string = '';\n  @Input() iconRight2: string = '';\n\n  // Event handlers\n  @Output() onIconLeftClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onIconRightClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onIconRight2Click: EventEmitter<void> = new EventEmitter<void>();\n\n  handleIconLeftClick() {\n    this.onIconLeftClick.emit();\n  }\n\n  handleIconRightClick() {\n    this.onIconRightClick.emit();\n  }\n\n  handleIconRight2Click() {\n    this.onIconRight2Click.emit();\n  }\n}\n",
      "styleUrl": "./bmb-header-mobile.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_header_mobile\">\n  <bmb-container appearance=\"primary-header\">\n    <div class=\"bmb_header_mobile-left\">\n      <bmb-logo\n        size=\"small\"\n        [image]=\"logo\"\n        [altImage]=\"altLogo\"\n        [link]=\"logoLink\"\n        [target]=\"logoTarget\"\n        *ngIf=\"logo && !iconLeft\"\n      />\n      <button *ngIf=\"iconLeft\" (click)=\"handleIconLeftClick()\">\n        <bmb-icon [icon]=\"iconLeft\" />\n      </button>\n    </div>\n    <span class=\"bmb_header_mobile-text\">{{ text }}</span>\n    <div class=\"bmb_header_mobile-right\">\n      <button *ngIf=\"iconRight && !userImage\" (click)=\"handleIconRightClick()\">\n        <bmb-icon [icon]=\"iconRight\" />\n      </button>\n      <button\n        *ngIf=\"iconRight2 && !userImage\"\n        (click)=\"handleIconRight2Click()\"\n      >\n        <bmb-icon [icon]=\"iconRight2\" />\n      </button>\n      <bmb-user-image\n        size=\"mobile-small\"\n        [image]=\"userImage\"\n        [altImage]=\"userAltImage\"\n        [link]=\"userLink\"\n        [target]=\"userTarget\"\n        *ngIf=\"userImage\"\n      />\n    </div>\n  </bmb-container>\n</div>\n"
    },
    {
      "name": "BmbHomeSectionComponent",
      "id": "component-BmbHomeSectionComponent-f7e6b27d1fd4d675ac417ed36601e533485d366a7b5270682da06c97d3a783dbc64ce51026aa00356bdd4cb05675f7ca8edf6524b265be9620f7e8f86d649229",
      "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-home-section",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-home-section.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbContainerComponent",
          "type": "component"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\n\n@Component({\n  selector: 'bmb-home-section',\n  standalone: true,\n  imports: [CommonModule, BmbContainerComponent, BmbIconComponent],\n  styleUrl: './bmb-home-section.component.scss',\n  templateUrl: './bmb-home-section.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbHomeSectionComponent {\n  @Input() title: string = '';\n  @Input() icon: string = '';\n  @Input() target: string = '';\n  @Input() link: string = '';\n\n  constructor() {}\n}\n",
      "styleUrl": "./bmb-home-section.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 24
      },
      "extends": [],
      "templateData": "<div class=\"bmb_home_section\">\n  <bmb-container appearance=\"primary-home\">\n    <div class=\"bmb_home_section-header\">\n      <span class=\"bmb_home_section-title\">{{ title }}</span>\n      <a class=\"bmb_home_section-link\" [href]=\"link\" [target]=\"target\">\n        <bmb-icon [icon]=\"icon\" class=\"bmb_home_section-icon\" />\n      </a>\n    </div>\n    <ng-content></ng-content>\n  </bmb-container>\n</div>\n"
    },
    {
      "name": "BmbIconComponent",
      "id": "component-BmbIconComponent-b51f7a7ec9582e29454788cdbcb11d7dd2d073f67b0990c38e6e62436d0060121683e5a44b251a29fc4b969c27a63d126f6b29746bfdb6bc017f1a96f7437099",
      "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-icon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-icon.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "'face'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string",
          "decorators": []
        },
        {
          "name": "materialIcon",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'bmb-icon',\n  standalone: true,\n  templateUrl: './bmb-icon.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbIconComponent {\n  @Input() icon: string = 'face';\n  @Input() materialIcon: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "@if (materialIcon) {\n  <i class=\"material-icons\">{{ icon }}</i>\n} @else {\n  <i class=\"material-symbols-outlined\">{{ icon }}</i>\n}\n"
    },
    {
      "name": "BmbInputComponent",
      "id": "component-BmbInputComponent-f87e70f915b89e3414eaf8d5fe02e8bc64fcaa178a4bce8c10fed09043dc723236cd8561e9d73fa43ae964f605d61703e8977b9f93635f9a598698a0552f3026",
      "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BmbInputComponent), multi: true,\n}",
          "type": "component"
        },
        {
          "name": "{\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => BmbInputComponent), multi: true,\n}",
          "type": "component"
        }
      ],
      "selector": "bmb-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-input.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "'normal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "InputType",
          "decorators": []
        },
        {
          "name": "errorMessage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "string",
          "decorators": []
        },
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "FormControl | undefined",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isClearable",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isDisabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isRequired",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isValid",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 61,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57,
          "type": "string",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "string | undefined",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "handleBlur",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleFocus",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleMouseover",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "iconColor",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 78
        },
        {
          "name": "input",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgModel | undefined",
          "optional": false,
          "description": "",
          "line": 55,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'input', {static: false}"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "inputModel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | undefined",
          "optional": false,
          "description": "",
          "line": 74,
          "modifierKind": [125]
        },
        {
          "name": "inputWrapper",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef | undefined",
          "optional": false,
          "description": "",
          "line": 53,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'inputWrapper', {read: ElementRef, static: false}"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "onTouch",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function | undefined",
          "optional": false,
          "description": "",
          "line": 76
        },
        {
          "name": "style",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 77
        }
      ],
      "methodsClass": [
        {
          "name": "getComponent",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 119,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getValue",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 123,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 95,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 147,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onChange",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 155,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 105,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 135,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 140,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onMouseover",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 151,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onParentClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 131,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 161,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 165,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "state",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 169,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "state",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setValidation",
          "args": [
            {
              "name": "validation",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 127,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "validation",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setValue",
          "args": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 184,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "validate",
          "args": [
            {
              "name": "form",
              "type": "FormControl",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ invalid: boolean; }",
          "typeParameters": [],
          "line": 175,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "form",
              "type": "FormControl",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 157,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "FormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  Output,\n  EventEmitter,\n  forwardRef,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  FormControl,\n  NgModel,\n  FormsModule,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { InputType } from './bmb-input.interface';\n@Component({\n  selector: 'bmb-input',\n  styleUrl: './bmb-input.component.scss',\n  templateUrl: './bmb-input.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent, FormsModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BmbInputComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => BmbInputComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInputComponent\n  implements ControlValueAccessor, AfterViewInit, OnChanges\n{\n  @ViewChild('inputWrapper', { read: ElementRef, static: false })\n  inputWrapper: ElementRef | undefined;\n  @ViewChild('input', { static: false })\n  input: NgModel | undefined;\n\n  @Input() label: string = '';\n  @Input() placeholder: string = '';\n  @Input() icon: string = '';\n  @Input() errorMessage: string = '';\n  @Input() isValid: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() value: string | undefined;\n  @Input() isClearable: boolean = false;\n  @Input() appearance: InputType = 'normal';\n\n  @Output() handleClick: EventEmitter<any> = new EventEmitter();\n  @Output() handleFocus: EventEmitter<any> = new EventEmitter();\n  @Output() handleBlur: EventEmitter<any> = new EventEmitter();\n  @Output() handleMouseover: EventEmitter<any> = new EventEmitter();\n  @Output() handleChange: EventEmitter<any> = new EventEmitter();\n\n  public inputModel: string | undefined;\n  @Input() formControl: FormControl | undefined;\n  onTouch: Function | undefined;\n  style = '';\n  iconColor = '';\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    if (this.isDisabled && this.formControl) {\n      this.formControl.disable();\n    }\n    setTimeout(() => {\n      if (this.value && this.inputModel !== undefined) {\n        this.value = undefined;\n      }\n    }, 0);\n    this.style = `bmb_field-input-${this.appearance}`;\n    this.iconColor = `bmb_field-icon-${this.appearance}`;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.formControl && changes?.['isDisabled'] !== undefined) {\n      if (this.formControl.disabled !== changes?.['isDisabled']?.currentValue) {\n        changes?.['isDisabled']?.currentValue\n          ? this.formControl.disable()\n          : this.formControl.enable();\n      }\n    }\n  }\n\n  onClear() {\n    this.inputModel = undefined;\n    this.value = undefined;\n    this.inputWrapper?.nativeElement.querySelector('.bmb_field-input').focus();\n\n    if (this.isClearable && this.formControl) {\n      this.formControl.reset();\n    }\n\n    this.cdr.detectChanges();\n\n    this.handleChange.emit(this.getValue());\n  }\n\n  getComponent() {\n    return this.input;\n  }\n\n  getValue() {\n    return this.input?.['viewModel'];\n  }\n\n  setValidation(validation: any) {\n    this.isValid = validation;\n  }\n\n  onParentClick() {\n    this.inputWrapper?.nativeElement.querySelector('.bmb_field-input').focus();\n  }\n\n  onClick() {\n    this.handleChange.emit(this.getValue());\n    this.handleClick.emit(this.getValue());\n  }\n\n  onFocus() {\n    this.handleFocus.emit(this.getValue());\n    if (this.onTouch) {\n      this.onTouch();\n    }\n  }\n\n  onBlur() {\n    this.handleBlur.emit(this.getValue());\n  }\n\n  onMouseover() {\n    this.handleMouseover.emit(this.getValue());\n  }\n\n  onChange(value: any): void {}\n\n  writeValue(value: string): void {\n    this.inputModel = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState(state: boolean): void {\n    if (this.formControl) {\n      this.isDisabled = state;\n    }\n  }\n\n  validate(form: FormControl) {\n    this.formControl = form;\n    if (!form?.value && this.isRequired === true) {\n      return { invalid: true };\n    } else {\n      return null;\n    }\n  }\n\n  setValue(value: string) {\n    this.onChange(value);\n    if (this.input?.['viewModel'] === '') {\n      this.inputModel = undefined;\n      this.value = undefined;\n      this.cdr.detectChanges();\n    }\n    this.handleChange.emit(this.getValue());\n    if (this.onTouch) {\n      this.onTouch();\n    }\n  }\n}\n",
      "styleUrl": "./bmb-input.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 78,
        "jsdoctags": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["ControlValueAccessor", "AfterViewInit", "OnChanges"],
      "templateData": "<div class=\"bmb_field\">\n  <div class=\"bmb_field-container-label\" *ngIf=\"label\">\n    <label for=\"\" class=\"bmb_field-label\">{{ label }}</label>\n    <span *ngIf=\"isRequired\" class=\"bmb_field-label-required\"> *</span>\n  </div>\n  <div class=\"bmb_field-wrapper\" (click)=\"onParentClick()\" #inputWrapper>\n    <ng-container *ngIf=\"icon\">\n      <bmb-icon [icon]=\"icon\" class=\"bmb_field-icon\" [ngClass]=\"iconColor\" />\n    </ng-container>\n    <input\n      type=\"text\"\n      class=\"bmb_field-input\"\n      [ngClass]=\"this.style\"\n      [ngClass]=\"[!isValid ? 'bmb_field-error' : '']\"\n      (ngModelChange)=\"setValue(input.viewModel)\"\n      (click)=\"onClick()\"\n      (focus)=\"onFocus()\"\n      (blur)=\"onBlur()\"\n      (mouseover)=\"onMouseover()\"\n      [(ngModel)]=\"value || inputModel\"\n      [required]=\"isRequired\"\n      [disabled]=\"isDisabled\"\n      [placeholder]=\"placeholder ? placeholder : ''\"\n      #input=\"ngModel\"\n    />\n  </div>\n  <p\n    class=\"bmb_field-helper\"\n    [ngClass]=\"[!inputModel ? 'bmb_field-error' : '']\"\n  >\n    {{ errorMessage }}\n  </p>\n</div>\n"
    },
    {
      "name": "BmbInteractiveIconComponent",
      "id": "component-BmbInteractiveIconComponent-a8bbcc0c5d036285932132f1885cfcecfdc74c3e92e1ab49c89a4a7191e11c007353a7a4afb2de0c17b08fe66f87f5015588b30a1988662122ba6aa497147b15",
      "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-interactive-icon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-interactive-icon.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "grouped",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "horizontal",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "'face'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-interactive-icon',\n  styleUrl: './bmb-interactive-icon.component.scss',\n  templateUrl: './bmb-interactive-icon.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInteractiveIconComponent implements AfterViewInit {\n  @Input() appearance: string = '';\n  @Input() title: string = '';\n  @Input() description: string = '';\n  @Input() icon: string = 'face';\n  @Input() grouped: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() target: string = '';\n  @Input() link: string = '';\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector(\n        '.bmb_interactive_icon-grouped',\n      );\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_interactive_icon-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_interactive_icon'];\n\n    if (this.appearance) {\n      classes.push('bmb_interactive_icon-' + this.appearance);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-interactive-icon.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 30,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["AfterViewInit"],
      "templateData": "<a\n  [ngClass]=\"getClasses()\"\n  [class.bmb_interactive_icon-horizontal]=\"horizontal\"\n  [href]=\"link\"\n  [target]=\"target\"\n>\n  <div class=\"bmb_interactive_icon-box\">\n    <bmb-icon\n      class=\"bmb_interactive_icon-icon\"\n      icon=\"{{ icon }}\"\n      *ngIf=\"icon\"\n    />\n  </div>\n  <div class=\"bmb_interactive_icon-text\">\n    <span class=\"bmb_interactive_icon-title\" *ngIf=\"title\">{{ title }}</span>\n    <span\n      class=\"bmb_interactive_icon-description\"\n      *ngIf=\"description && horizontal\"\n      >{{ description }}</span\n    >\n  </div>\n</a>\n"
    },
    {
      "name": "BmbLegendComponent",
      "id": "component-BmbLegendComponent-5631d295b0433146b2615196afe1ca7aad0c45bbbe417456c39edff959caf952ddcf562cd6aad7561807c9720cf4b3a02cd7ace05f8c4a6dd48896e4e3745203",
      "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-legend",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-legend.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "indicatorAppearance",
          "defaultValue": "'normal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "IBmbLegendVariations",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type IBmbLegendVariations =\n  | 'normal'\n  | 'strong'\n  | 'success'\n  | 'info'\n  | 'warning'\n  | 'error'\n  | 'brand';\n\n@Component({\n  selector: 'bmb-legend',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-legend.component.html',\n  styleUrl: './bmb-legend.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbLegendComponent {\n  @Input() label: string = '';\n  @Input() value: string = '';\n  @Input() indicatorAppearance: IBmbLegendVariations = 'normal';\n}\n",
      "styleUrl": "./bmb-legend.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_legend\">\n  <span class=\"bmb_legend-indicator\">\n    <span\n      [class]=\"'bmb_legend-bullet bmb_legend-bullet-' + indicatorAppearance\"\n    ></span>\n  </span>\n  <h3 class=\"bmb_legend-label\">{{ label }}</h3>\n  <span class=\"bmb_legend-value\">{{ value }}</span>\n</div>\n"
    },
    {
      "name": "BmbLoaderComponent",
      "id": "component-BmbLoaderComponent-acff4cf581ffb3bcadb33254f10ad67cc431f1abbd77c2c30b42328a9e32638968ad59d3debb67c1211600e9119dbbee154e94d7660797b9b87e6333e7d6e824",
      "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-loader",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-loader.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "status",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "subtitle",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-loader',\n  styleUrl: './bmb-loader.component.scss',\n  templateUrl: './bmb-loader.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbLoaderComponent {\n  @Input() status: string = '';\n  @Input() title: string = '';\n  @Input() subtitle: string = '';\n}\n",
      "styleUrl": "./bmb-loader.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_loader\">\n  <div *ngIf=\"status != 'noConnection'\" class=\"bmb_loader-loading\">\n    <bmb-icon icon=\"progress_activity\"></bmb-icon>\n  </div>\n  <div *ngIf=\"status === 'noConnection'\" class=\"bmb_loader-connection\">\n    <bmb-icon icon=\"wifi_off\"></bmb-icon>\n  </div>\n  <div *ngIf=\"title\" class=\"bmb_loader-title\">{{ title }}</div>\n  <div *ngIf=\"subtitle\" class=\"bmb_loader-subtitle\">{{ subtitle }}</div>\n</div>\n"
    },
    {
      "name": "BmbLogoComponent",
      "id": "component-BmbLogoComponent-204e434183aff1f6d4a8e860762d868cd2cfd515bec3c8f8a741cf9f3781ae18f6b7a994fc79dc97b759ae3d2e8067a03287b1929ee674dd40e88c881d95b601",
      "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-logo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-logo.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "altImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "image",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-logo',\n  styleUrl: './bmb-logo.component.scss',\n  templateUrl: './bmb-logo.component.html',\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbLogoComponent {\n  @Input() size: string = '';\n  @Input() image: string = '';\n  @Input() altImage: string = '';\n  @Input() link: string = '';\n  @Input() target: string = '';\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_logo'];\n\n    if (this.size) {\n      classes.push('bmb_logo-' + this.size);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-logo.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<a [ngClass]=\"getClasses()\" [href]=\"link\" [target]=\"target\">\n  <img [src]=\"image\" [alt]=\"altImage\" />\n</a>\n"
    },
    {
      "name": "BmbProgressBarComponent",
      "id": "component-BmbProgressBarComponent-ea5cb449c40602108ff18d56013d4f31ff0aa9b1bce72e674402972e20df0ea77d8564c017cea10b1cd94a01ed28ee688445beea9d80fe6dbffcdf7dc0484dab",
      "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-progress-bar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-progress-bar.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "progress",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "verifyPercentage",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnChanges,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-progress-bar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-progress-bar.component.html',\n  styleUrl: './bmb-progress-bar.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbProgressBarComponent implements OnChanges {\n  @Input() progress: number = 0;\n\n  ngOnChanges() {\n    this.verifyPercentage();\n  }\n\n  verifyPercentage(): void {\n    if (this.progress < 0) {\n      this.progress = 0;\n    }\n\n    if (this.progress > 100) {\n      this.progress = 100;\n    }\n  }\n}\n",
      "styleUrl": "./bmb-progress-bar.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<div class=\"bmb_progress-bar\">\n  <div class=\"bmb_progress-bar-track\">\n    <div class=\"bmb_progress-bar-active\" [style.width.%]=\"progress\"></div>\n  </div>\n</div>\n"
    },
    {
      "name": "BmbProgressCircleComponent",
      "id": "component-BmbProgressCircleComponent-a8c4b9df052f798f5e0944294a9bd925427f6259c7abf1d7f4204e9363bd7ccfd828a65bb118f3488cf17f1ff1d2b3bd922dad31d326698743725dd864cdd434",
      "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-progress-circle",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-progress-circle.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "percentValue",
          "defaultValue": "50",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "number | null",
          "decorators": []
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string | null",
          "decorators": []
        },
        {
          "name": "valueLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number | null",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "circunference",
          "defaultValue": "2 * Math.PI * this.radius",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "dashoffset",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "radius",
          "defaultValue": "74",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "symbol",
          "defaultValue": "'%'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "progress",
          "args": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-progress-circle',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-progress-circle.component.html',\n  styleUrl: './bmb-progress-circle.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbProgressCircleComponent implements OnChanges {\n  @Input() percentValue: number | null = 50;\n  @Input() title?: string | null;\n  @Input() valueLabel?: number | null;\n\n  radius = 74;\n  circunference = 2 * Math.PI * this.radius;\n  dashoffset = 0;\n  symbol = '%';\n\n  constructor() {\n    this.progress(0);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['percentValue']) {\n      if (changes['percentValue'].currentValue > 100) {\n        this.progress(100);\n      } else {\n        this.progress(changes['percentValue'].currentValue);\n      }\n    }\n  }\n\n  progress(value: number) {\n    const progress = value / 100;\n    this.dashoffset = -this.circunference * (1 - progress);\n  }\n}\n",
      "styleUrl": "./bmb-progress-circle.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 28
      },
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<div class=\"bmb_progress_circle\">\n  <svg\n    class=\"bmb_progress_circle-svg\"\n    width=\"170\"\n    height=\"170\"\n    viewBox=\"0 0 170 170\"\n  >\n    <circle\n      class=\"bmb_progress_circle-svg-meter\"\n      cx=\"84\"\n      cy=\"84\"\n      [attr.r]=\"radius\"\n      stroke-width=\"5\"\n    />\n    <circle\n      class=\"bmb_progress_circle-svg-value\"\n      [style.strokeDasharray]=\"circunference\"\n      [style.strokeDashoffset]=\"dashoffset\"\n      cx=\"84\"\n      cy=\"84\"\n      [attr.r]=\"radius\"\n      stroke-width=\"5\"\n    />\n  </svg>\n\n  <div class=\"bmb_progress_circle-info\">\n    @if (title) {\n      <div class=\"bmb_progress_circle-info-title\">\n        <ng-container>{{ title }}</ng-container>\n      </div>\n    }\n    <div\n      class=\"bmb_progress_circle-info-value\"\n      [ngClass]=\"{\n        'bmb_progress_circle-info-value-alone': this.title !== undefined\n      }\"\n    >\n      {{ valueLabel }}\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "BmbRadialComponent",
      "id": "component-BmbRadialComponent-371aff7326f329b0ce55715b63f0938a641a086f80cae3769fbc81ab36a71bc64295142d7b4f087141d7edc4216b8d41cb27b2183e79da4127a7b7bf4e07f8c7",
      "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-radial",
      "styleUrls": ["./bmb-radial.component.scss"],
      "styles": [],
      "templateUrl": ["./bmb-radial.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "ariaDescribedby",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string",
          "decorators": []
        },
        {
          "name": "ariaLabel",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "ariaLabelledby",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "checked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "id",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "labelPosition",
          "defaultValue": "'after'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "\"before\" | \"after\"",
          "decorators": []
        },
        {
          "name": "name",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<HTMLInputElement>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "EventEmitter<HTMLInputElement>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleChange",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleKeyDown",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-radial',\n  templateUrl: './bmb-radial.component.html',\n  styleUrls: ['./bmb-radial.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbRadialComponent {\n  @Input() id: string = '';\n  @Input() checked: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() value: string = '';\n  @Input() name: string = '';\n  @Input() label: string = '';\n  @Input() labelPosition: 'before' | 'after' = 'after';\n  @Input() ariaDescribedby: string = '';\n  @Input() ariaLabel: string = '';\n  @Input() ariaLabelledby: string = '';\n  @Input() required: boolean = false;\n\n  @Output() change: EventEmitter<HTMLInputElement> =\n    new EventEmitter<HTMLInputElement>();\n\n  handleChange(event: Event) {\n    const target = event.target as HTMLInputElement | null;\n    if (target && target.checked) {\n      this.change.emit(target);\n    }\n    event.stopPropagation();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const target = event.target as HTMLInputElement | null;\n\n    if (event.key === 'Enter' && target && !target.checked) {\n      target.checked = true;\n      this.change.emit(target);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_radial {\n  align-items: center;\n  display: flex;\n  gap: rem.rem_calc(8);\n  position: relative;\n  width: fit-content;\n\n  input[type=\"radio\"] {\n    cursor: pointer;\n    height: rem.rem_calc(42);\n    margin: 0;\n    opacity: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n\n    &:hover {\n      + .bmb_radial-box {\n        background-color: RGBA(var(--color-blue-primary), 0.1);\n      }\n    }\n\n    &:focus {\n      + .bmb_radial-box {\n        background-color: RGBA(var(--color-blue-primary), 0.2);\n      }\n    }\n\n    &:checked {\n      + .bmb_radial-box {\n        .bmb_radial-mark {\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            background-color: RGBA(var(--color-blue-primary));\n            border-radius: 100%;\n            bottom: 0;\n            display: block;\n            height: rem.rem_calc(8);\n            left: 0;\n            right: 0;\n            top: 0;\n            margin: auto;\n            width: rem.rem_calc(8);\n          }\n        }\n      }\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n\n      + .bmb_radial-box {\n        .bmb_radial-mark {\n          opacity: 0.5;\n        }\n      }\n      &:hover {\n        + .bmb_radial-box {\n          background-color: transparent;\n        }\n      }\n    }\n  }\n\n  &-required {\n    .bmb_radial-mark {\n      border-color: RGBA(var(--color-mitec-red));\n    }\n  }\n\n  &-box {\n    align-items: center;\n    border-radius: 100%;\n    display: flex;\n    height: rem.rem_calc(42);\n    justify-content: center;\n    width: rem.rem_calc(42);\n  }\n\n  &-mark {\n    background-color: transparent;\n    border: rem.rem_calc(2) solid RGBA(var(--color-charade-700));\n    border-radius: 100%;\n    display: inline-block;\n    height: rem.rem_calc(18);\n    position: relative;\n    width: rem.rem_calc(18);\n\n    &::after {\n      content: \"\";\n      display: none;\n      position: absolute;\n    }\n  }\n\n  &-label {\n    color: RGBA(var(--color-charade-950));\n    flex: 1;\n    overflow: hidden;\n    padding-right: rem.rem_calc(10);\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    @include fonts.font(4, medium);\n  }\n\n  &-before {\n    .bmb_radial-label {\n      order: 1;\n    }\n    .bmb_radial-box {\n      order: 2;\n    }\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_radial {\n    input[type=\"radio\"] {\n      &:hover {\n        + .bmb_radial-box {\n          background-color: RGBA(var(--color-green-light), 0.1);\n        }\n      }\n\n      &:focus {\n        + .bmb_radial-box {\n          background-color: RGBA(var(--color-green-light), 0.2);\n        }\n      }\n\n      &:checked {\n        + .bmb_radial-box {\n          .bmb_radial-mark {\n            border-color: RGBA(var(--color-green-light));\n\n            &::after {\n              background-color: RGBA(var(--color-green-light));\n              border-radius: 100%;\n              bottom: 0;\n              display: block;\n              height: rem.rem_calc(8);\n              left: 0;\n              right: 0;\n              top: 0;\n              margin: auto;\n              width: rem.rem_calc(8);\n            }\n          }\n        }\n      }\n    }\n\n    &-mark {\n      border-color: RGBA(var(--color-charade-200));\n    }\n\n    &-label {\n      color: RGBA(var(--color-charade-50));\n    }\n  }\n}\n",
          "styleUrl": "./bmb-radial.component.scss"
        }
      ],
      "stylesData": "",
      "extends": [],
      "templateData": "<label\n  [attr.for]=\"id\"\n  class=\"bmb_radial\"\n  [class.bmb_radial-before]=\"labelPosition === 'before'\"\n  [class.bmb_radial-after]=\"labelPosition === 'after'\"\n  [class.bmb_radial-required]=\"required\"\n>\n  <input\n    type=\"radio\"\n    [id]=\"id\"\n    [attr.aria-describedby]=\"ariaDescribedby\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.name]=\"name\"\n    [attr.value]=\"value\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    (change)=\"handleChange($event)\"\n    (keydown)=\"handleKeyDown($event)\"\n  />\n  <div class=\"bmb_radial-box\">\n    <span class=\"bmb_radial-mark\"></span>\n  </div>\n  @if (label) {\n    <span class=\"bmb_radial-label\">{{ label }}</span>\n  }\n</label>\n"
    },
    {
      "name": "BmbSearchInputComponent",
      "id": "component-BmbSearchInputComponent-071f7c8fa2b8943a6e2640b7c68f2c012c04f0723d661392860da658b990390bfa4591bb0f2259a1a6a11bc19830381c239a7a3141502fe88b772bd23a6e354a",
      "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-search-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-search-input.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "data",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string[]",
          "decorators": []
        },
        {
          "name": "isLoading",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isServerSideFilter",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string",
          "decorators": []
        },
        {
          "name": "serverSideFilteredData",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string[]",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onServerSideFilterEvent",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "EventEmitter<string>"
        },
        {
          "name": "onValueChange",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "EventEmitter<string>"
        }
      ],
      "propertiesClass": [
        {
          "name": "childNodes",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 73,
          "modifierKind": [123]
        },
        {
          "name": "filterControl",
          "defaultValue": "new FormControl()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "filteredData",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "filterField",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef | null",
          "optional": false,
          "description": "",
          "line": 47,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'filterInput'"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "isDialogOpen",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "uid",
          "defaultValue": "Date.now().toString(36) + (Math.floor(Math.random() * 90) + 10)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 67
        }
      ],
      "methodsClass": [
        {
          "name": "clearFilter",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 107,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "filteredValue",
          "args": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 91,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getDialogOpen",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 114,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleItemClick",
          "args": [
            {
              "name": "event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 122,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 79,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'document:click', ['$event']"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 61
        }
      ],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        },
        {
          "name": "BmbLoaderComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  SimpleChanges,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { BmbLoaderComponent } from '../bmb-loader/bmb-loader.component';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'bmb-search-input',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbButtonDirective,\n    BmbLoaderComponent,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './bmb-search-input.component.html',\n  styleUrl: './bmb-search-input.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbSearchInputComponent {\n  @Input() data: string[] = [];\n  @Input() isLoading: boolean = false;\n  @Input() isServerSideFilter: boolean = false;\n  @Input() placeholder: string = '';\n  @Input() serverSideFilteredData: string[] = [];\n\n  @Output() onValueChange: EventEmitter<string> = new EventEmitter<string>();\n  @Output() onServerSideFilterEvent: EventEmitter<string> =\n    new EventEmitter<string>();\n\n  @ViewChild('filterInput') filterField: ElementRef | null = null;\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n  ) {\n    this.filterControl.valueChanges\n      .pipe(debounceTime(300))\n      .subscribe((value) => {\n        this.filteredValue(value);\n      });\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    if (!this.childNodes?.contains(event.target)) {\n      this.isDialogOpen = false;\n    }\n  }\n\n  value: string = '';\n  filteredData: string[] = [];\n  uid: string = Date.now().toString(36) + (Math.floor(Math.random() * 90) + 10);\n  isDialogOpen: boolean = false;\n  filterControl = new FormControl();\n\n  private childNodes: any = null;\n\n  ngAfterViewInit() {\n    this.childNodes = this.elementRef.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['serverSideFilteredData']) {\n      this.filteredData = changes['serverSideFilteredData'].currentValue;\n    }\n\n    if (changes['serverSideFilteredData'] || changes['isLoading']) {\n      this.isDialogOpen =\n        changes['serverSideFilteredData']?.currentValue?.length ||\n        changes['isLoading']?.currentValue;\n    }\n  }\n\n  filteredValue(value: string): void {\n    if (value.length >= 3) {\n      if (this.isServerSideFilter) {\n        this.onServerSideFilterEvent.emit(value);\n      } else {\n        this.filteredData = this.data.filter((item) =>\n          item.toLowerCase().includes(value.toLowerCase()),\n        );\n        this.isDialogOpen = true;\n      }\n    } else {\n      this.filteredData = [];\n    }\n    this.cdr.detectChanges();\n  }\n\n  clearFilter(): void {\n    if (this.filterField?.nativeElement) {\n      this.filterField.nativeElement.value = '';\n      this.filteredData = [];\n    }\n  }\n\n  getDialogOpen(): string {\n    if (this.isDialogOpen) {\n      return 'bmb_search-input-dialog-open';\n    }\n\n    return '';\n  }\n\n  handleItemClick(event: string): void {\n    this.onValueChange.emit(event);\n    this.isDialogOpen = false;\n    if (this.filterField?.nativeElement) {\n      this.filterField.nativeElement.value = event;\n    }\n  }\n}\n",
      "styleUrl": "./bmb-search-input.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 47,
        "jsdoctags": [
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<section class=\"bmb_search-input\">\n  <div class=\"bmb_search-input-field\">\n    <label class=\"bmb_search-input-field-label\" [for]=\"'filter-' + uid\">\n      <bmb-icon icon=\"search\" />\n    </label>\n    <input\n      class=\"bmb_search-input-field-input\"\n      [disabled]=\"isLoading\"\n      type=\"text\"\n      #filterInput\n      [id]=\"'filter-' + uid\"\n      [name]=\"'filter-' + uid\"\n      [formControl]=\"filterControl\"\n      [placeholder]=\"placeholder\"\n    />\n    <button\n      class=\"bmb_search-input-field-clear\"\n      [disabled]=\"isLoading\"\n      bmbButton\n      (click)=\"clearFilter()\"\n    >\n      <bmb-icon icon=\"close\" />\n    </button>\n  </div>\n  <section\n    role=\"dialog\"\n    class=\"bmb_search-input-dialog\"\n    [ngClass]=\"getDialogOpen()\"\n  >\n    @if (isLoading) {\n      <bmb-loader />\n    } @else {\n      <ul class=\"bmb_search-input-dialog-list\">\n        @for (item of filteredData; track $index) {\n          <li class=\"bmb_search-input-dialog-list-item\">\n            <button\n              class=\"bmb_search-input-dialog-list-item-button\"\n              (click)=\"handleItemClick(item)\"\n            >\n              {{ item }}\n            </button>\n          </li>\n        }\n      </ul>\n    }\n  </section>\n</section>\n"
    },
    {
      "name": "BmbSelectComponent",
      "id": "component-BmbSelectComponent-eaf54061347b8de1a2d922b019e78e0383ad2830d22e6351d78af0bfa4cf4b26521c618529887f5cc62067246cae4feed26fba7ea96398ab6a4b71fc2b486ad9",
      "file": "projects/ds-ng/src/lib/components/bmb-select/bmb-select.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-select",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-select.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "value",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onLangChange",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "EventEmitter<string>"
        }
      ],
      "propertiesClass": [
        {
          "name": "childNodes",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 63,
          "modifierKind": [123]
        },
        {
          "name": "customTemplate",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "isExpanded",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 56
        }
      ],
      "methodsClass": [
        {
          "name": "getClassName",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 58,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 48,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'document:click', ['$event']"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "showPlaceholder",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31
        }
      ],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  HostListener,\n  ElementRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-select',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-select.component.html',\n  styleUrl: './bmb-select.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbSelectComponent {\n  @Input() value: unknown = null;\n\n  @Output() onLangChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    if (this.childNodes?.contains(event.target)) {\n      const targetElement = event.target as HTMLElement;\n      const value = targetElement\n        .closest('bmb-select-item')\n        ?.getAttribute('value');\n      if (value) {\n        this.onLangChange.emit(value);\n      }\n      this.isExpanded = !this.isExpanded;\n    } else {\n      this.isExpanded = false;\n    }\n  }\n\n  customTemplate = false;\n\n  ngAfterViewInit() {\n    this.childNodes = this.elementRef.nativeElement;\n  }\n\n  showPlaceholder() {\n    this.customTemplate = true;\n  }\n\n  isExpanded: boolean = false;\n\n  getClassName(): string {\n    if (this.isExpanded) return 'bmb_select-list-open';\n    return '';\n  }\n\n  private childNodes: any = null;\n}\n",
      "styleUrl": "./bmb-select.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<section\n  class=\"bmb_select\"\n  role=\"combobox\"\n  aria-autocomplete=\"none\"\n  aria-haspopup=\"listbox\"\n  tabindex=\"0\"\n  aria-expanded=\"true\"\n>\n  <span class=\"bmb_select-input\">\n    <button class=\"bmb_select-input-button\">\n      <ng-content select=\"[selectTemplate]\"></ng-content>\n    </button>\n    <bmb-icon icon=\"expand_more\" />\n  </span>\n  <ul class=\"bmb_select-list\" [ngClass]=\"getClassName()\">\n    <ng-content></ng-content>\n  </ul>\n</section>\n"
    },
    {
      "name": "BmbSelectItemComponent",
      "id": "component-BmbSelectItemComponent-b7574137dc67b69b5c9e68026b9b21c3545b0c84522489689aebb78d949069d87b38051308018dd5a6f4c6252c446b744164869e26d3fe0d7ccd478a589f437b",
      "file": "projects/ds-ng/src/lib/components/bmb-select/bmb-select-item/bmb-select-item.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-select-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-select-item.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string | number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-select-item',\n  standalone: true,\n  imports: [],\n  templateUrl: './bmb-select-item.component.html',\n  styleUrl: './bmb-select-item.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbSelectItemComponent {\n  @Input() value: string | number = '';\n}\n",
      "styleUrl": "./bmb-select-item.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<li class=\"bmb_select-item\">\n  <button>\n    <ng-content></ng-content>\n  </button>\n</li>\n"
    },
    {
      "name": "BmbSidebarComponent",
      "id": "component-BmbSidebarComponent-9a9cb468b1cf06ffb323a998c1509b9024c1e3b1a1dc6ac1a92d476443b4a24403598c6b6d0aefb18e37e650428dbf7dc3948feecd424fb76f9334e3f284d46c",
      "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-sidebar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-sidebar.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "elements",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "SidebarElements[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentChoice",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "getActive",
          "args": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setActive",
          "args": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { CommonModule } from '@angular/common';\nimport { SidebarElements } from './bmb-sidebar.interface';\n\n@Component({\n  selector: 'bmb-sidebar',\n  standalone: true,\n  imports: [BmbIconComponent, CommonModule],\n  templateUrl: './bmb-sidebar.component.html',\n  styleUrl: './bmb-sidebar.component.scss',\n})\nexport class BmbSidebarComponent {\n  @Input() elements: SidebarElements[] = [];\n\n  currentChoice: string = '';\n\n  ngOnInit() {\n    this.currentChoice = this.elements[0]?.title;\n  }\n\n  setActive(choice: string) {\n    this.currentChoice = choice;\n  }\n\n  getActive(choice: string): string {\n    if (this.currentChoice == choice) {\n      return 'active';\n    } else {\n      return 'not';\n    }\n  }\n}\n",
      "styleUrl": "./bmb-sidebar.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<nav class=\"bmb_sidebar\">\n  <ul class=\"bmb_sidebar-container\">\n    @for (element of elements; track element) {\n      <li class=\"bmb_sidebar-item\" (click)=\"setActive(element.title)\">\n        <div\n          class=\"bmb_sidebar-item-container\"\n          [ngClass]=\"getActive(element.title)\"\n        >\n          <bmb-icon\n            class=\"bmb_sidebar-item-container-icon\"\n            [ngClass]=\"getActive(element.title) + '-icon'\"\n            [icon]=\"element.icon\"\n          />\n          <a\n            class=\"bmb_sidebar-item-container-link\"\n            [ngClass]=\"'bmb-' + getActive(element.title) + '-link'\"\n            href=\"{{ element.link }}\"\n          >\n            {{ element.title }}\n          </a>\n        </div>\n      </li>\n    }\n  </ul>\n</nav>\n"
    },
    {
      "name": "BmbStatCounterComponent",
      "id": "component-BmbStatCounterComponent-1bdde546f9a2286e251035e1643025af76bfae47f1a03dd00ae808179f5c81bbf2083be04ca3eb2c545e49b7c59153c2892f33f8051c8092e0cee6b00669ebb6",
      "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-stat-counter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-stat-counter.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "activeStep",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "number",
          "decorators": []
        },
        {
          "name": "totalSteps",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onStepPress",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "EventEmitter<number>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getStepsArray",
          "args": [],
          "optional": false,
          "returnType": "number[]",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onStepClicked",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-stat-counter.component.scss',\n  selector: 'bmb-stat-counter',\n  templateUrl: './bmb-stat-counter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbStatCounterComponent {\n  @Input() activeStep: number = 0;\n  @Input() totalSteps?: number = 0;\n  @Output() onStepPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getStepsArray(): number[] {\n    return new Array(this.totalSteps || 0).fill(0).map((_, i) => i);\n  }\n\n  onStepClicked(index: number): void {\n    this.activeStep = index;\n    this.onStepPress.emit(index);\n  }\n}\n",
      "styleUrl": "./bmb-stat-counter.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_stat_counter\">\n  <div\n    class=\"bmb_stat_counter-item\"\n    *ngFor=\"let i of getStepsArray()\"\n    [attr.data-bs-slide-to]=\"i\"\n    [ngClass]=\"{ active: activeStep === i, completed: activeStep > i }\"\n    (click)=\"onStepClicked(i)\"\n  >\n    <div\n      class=\"bmb_stat_counter-step\"\n      [ngClass]=\"{ active: activeStep === i, completed: activeStep > i }\"\n    >\n      <span *ngIf=\"activeStep == i || activeStep < i\">{{ i + 1 }}</span>\n      @if (activeStep > i) {\n        <bmb-icon [icon]=\"'done'\" class=\"material-icons\" />\n      }\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "BmbSwitchComponent",
      "id": "component-BmbSwitchComponent-4df2aa8233fc1deb7889d6d34198cd4904639a9e918e01f20c4a800a53fdc07832c3ddf8c900b4b6a19c142952ec7d8171743ffd0cb9d3c0c2101cf7e942e2eb",
      "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-switch",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-switch.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "defaultValue": "'Describe the button function here'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "id",
          "defaultValue": "`bmb-switch-${BmbSwitchComponent.nextId++}`",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isChecked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "leftIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "leftText",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        },
        {
          "name": "rightIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "decorators": []
        },
        {
          "name": "rightText",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "EventEmitter<boolean>"
        }
      ],
      "propertiesClass": [
        {
          "name": "nextId",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [123, 126]
        }
      ],
      "methodsClass": [
        {
          "name": "toggleSwitch",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-switch',\n  templateUrl: './bmb-switch.component.html',\n  styleUrl: './bmb-switch.component.scss',\n  standalone: true,\n  imports: [CommonModule, FormsModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbSwitchComponent {\n  private static nextId = 0;\n  @Input() leftText: string = '';\n  @Input() leftIcon: string = '';\n  @Input() rightText: string = '';\n  @Input() rightIcon: string = '';\n  @Input() isChecked: boolean = false;\n  @Input() ariaLabel: string = 'Describe the button function here';\n  @Input() id: string = `bmb-switch-${BmbSwitchComponent.nextId++}`;\n  @Input() disabled: boolean = false;\n\n  @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  toggleSwitch(): void {\n    if (!this.disabled) {\n      this.isChecked = !this.isChecked;\n      this.change.emit(this.isChecked);\n    }\n  }\n}\n",
      "styleUrl": "./bmb-switch.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<button\n  [ngClass]=\"{ bmb_switch: true, 'bmb_switch-checked': isChecked }\"\n  (click)=\"toggleSwitch()\"\n  role=\"switch\"\n  [attr.aria-checked]=\"isChecked ? 'true' : 'false'\"\n  [attr.id]=\"id\"\n  [attr.aria-disabled]=\"disabled ? 'true' : 'false'\"\n  [disabled]=\"disabled\"\n  [attr.aria-label]=\"ariaLabel\"\n>\n  <div class=\"bmb_switch-left\" *ngIf=\"leftText || leftIcon\">\n    <span *ngIf=\"leftText && !leftIcon\" class=\"bmb_switch-text\">{{\n      leftText\n    }}</span>\n    <bmb-icon *ngIf=\"leftIcon && !leftText\" [icon]=\"leftIcon\"></bmb-icon>\n  </div>\n\n  <label class=\"bmb_switch-label\" for=\"bmbSwitch\">\n    <span class=\"bmb_switch-inner\"></span>\n    <span class=\"bmb_switch-switch\"></span>\n  </label>\n\n  <div class=\"bmb_switch-right\" *ngIf=\"rightText || rightIcon\">\n    <span *ngIf=\"rightText && !rightIcon\" class=\"bmb_switch-text\">{{\n      rightText\n    }}</span>\n    <bmb-icon *ngIf=\"rightIcon && !rightText\" [icon]=\"rightIcon\"></bmb-icon>\n  </div>\n</button>\n"
    },
    {
      "name": "BmbTablesComponent",
      "id": "component-BmbTablesComponent-12c6b740f0c6ec4cafce9429cce6531f1d73c01348508954dbe675b449bf33060d65fa624cbf614289ddf4fbf4562b804888e14efdccfb5b62aa59f77f04703a",
      "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-table",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-tables.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "actionTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 105,
          "type": "TemplateRef<any> | null",
          "decorators": []
        },
        {
          "name": "columns",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 96,
          "type": "TableColum[]",
          "decorators": []
        },
        {
          "name": "config",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 101,
          "type": "TableConfig",
          "decorators": []
        },
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 92,
          "type": "Array<any>",
          "decorators": []
        },
        {
          "name": "detailTemplate",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 107,
          "type": "TemplateRef<any> | null",
          "decorators": []
        },
        {
          "name": "pageSize",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 88,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "select",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 109,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "currentResizeIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 81
        },
        {
          "name": "dataSource",
          "defaultValue": "new MatTableDataSource()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MatTableDataSource<Array<any>>",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "expandedElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 74
        },
        {
          "name": "isResizingRight",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 84
        },
        {
          "name": "matTableRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": true,
          "description": "",
          "line": 113,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "MatTable, {read: ElementRef}"
            }
          ],
          "modifierKind": [170, 123]
        },
        {
          "name": "paginator",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MatPaginator",
          "optional": false,
          "description": "",
          "line": 111,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "MatPaginator"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "paginatorSize",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number | undefined",
          "optional": false,
          "description": "",
          "line": 77
        },
        {
          "name": "pressed",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 80
        },
        {
          "name": "resizableMousemove",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": true,
          "description": "",
          "line": 85
        },
        {
          "name": "resizableMouseup",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": true,
          "description": "",
          "line": 86
        },
        {
          "name": "selection",
          "defaultValue": "new SelectionModel<any>(true, [])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 75
        },
        {
          "name": "startWidth",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 83
        },
        {
          "name": "startX",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 82
        },
        {
          "name": "tableColumns",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TableColum[]",
          "optional": false,
          "description": "",
          "line": 73
        },
        {
          "name": "tableConfig",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TableConfig | undefined",
          "optional": false,
          "description": "",
          "line": 76
        },
        {
          "name": "tableDisplayColumns",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 72
        }
      ],
      "methodsClass": [
        {
          "name": "checkboxLabel",
          "args": [
            {
              "name": "row",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 268,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nThe label for the checkbox on the passed row",
          "description": "<p>The label for the checkbox on the passed row</p>\n",
          "jsdoctags": [
            {
              "name": "row",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "checkResizing",
          "args": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 198,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getCellData",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 211,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isAllSelected",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 249,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nWhether the number of selected elements matches the total number of rows.",
          "description": "<p>Whether the number of selected elements matches the total number of rows.</p>\n"
        },
        {
          "name": "mouseMove",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 168,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 124,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 122,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onResize",
          "args": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 116,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'window:resize', ['$event']"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onResizeColumn",
          "args": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 218,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onSelect",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 228,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setColumnWidth",
          "args": [
            {
              "name": "column",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 144,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "column",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setColumnWidthChanges",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "width",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 153,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "width",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setConfig",
          "args": [
            {
              "name": "config",
              "type": "TableConfig",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 232,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "config",
              "type": "TableConfig",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setTableResize",
          "args": [
            {
              "name": "tableWidth",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 129,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "tableWidth",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleAllRows",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 256,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nSelects all rows if they are not all selected; otherwise clear selection.",
          "description": "<p>Selects all rows if they are not all selected; otherwise clear selection.</p>\n"
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "window:resize",
          "args": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 116
        }
      ],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "BmbCheckboxComponent",
          "type": "component"
        },
        {
          "name": "MatPaginatorModule",
          "type": "module"
        },
        {
          "name": "MatTableModule",
          "type": "module"
        },
        {
          "name": "MatCheckboxModule",
          "type": "module"
        },
        {
          "name": "MatIconModule",
          "type": "module"
        },
        {
          "name": "MatButtonModule",
          "type": "module"
        },
        {
          "name": "MatFormFieldModule",
          "type": "module"
        },
        {
          "name": "MatInputModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  OnInit,\n  Output,\n  EventEmitter,\n  ElementRef,\n  TemplateRef,\n  HostListener,\n  Renderer2,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport {\n  MatTableDataSource,\n  MatTableModule,\n  MatTable,\n} from '@angular/material/table';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbCheckboxComponent } from '../bmb-checkbox/bmb-checkbox.component';\nimport { TableColum, TableConfig } from './bmb-tables.interface';\n\n@Component({\n  selector: 'bmb-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbCheckboxComponent,\n    MatPaginatorModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  templateUrl: './bmb-tables.component.html',\n  styleUrl: './bmb-tables.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed,void', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class BmbTablesComponent implements AfterViewInit, OnInit {\n  dataSource: MatTableDataSource<Array<any>> = new MatTableDataSource();\n  tableDisplayColumns: string[] = [];\n  tableColumns: TableColum[] = [];\n  expandedElement: any;\n  selection = new SelectionModel<any>(true, []);\n  tableConfig: TableConfig | undefined;\n  paginatorSize: number | undefined;\n\n  // Resize Columns\n  pressed = false;\n  currentResizeIndex?: number;\n  startX?: number;\n  startWidth?: number;\n  isResizingRight?: boolean;\n  resizableMousemove?: () => void;\n  resizableMouseup?: () => void;\n\n  @Input() set pageSize(size: number) {\n    this.paginatorSize = size;\n  }\n\n  @Input() set data(data: Array<any>) {\n    this.dataSource = new MatTableDataSource(data);\n  }\n\n  @Input() set columns(columns: TableColum[]) {\n    this.tableColumns = columns;\n    this.tableDisplayColumns = this.tableColumns.map((col) => col.def);\n  }\n\n  @Input() set config(config: TableConfig) {\n    this.setConfig(config);\n  }\n\n  @Input() actionTemplate?: TemplateRef<any> | null;\n\n  @Input() detailTemplate: TemplateRef<any> | null = null;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  @ViewChild(MatTable, { read: ElementRef }) private matTableRef?: ElementRef;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.setTableResize(this.matTableRef!.nativeElement.clientWidth);\n  }\n\n  constructor(private renderer: Renderer2) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.setTableResize(this.matTableRef!.nativeElement.clientWidth);\n  }\n\n  setTableResize(tableWidth: number) {\n    let totWidth = 0;\n    this.tableColumns.forEach((column) => {\n      if (column.width == undefined) {\n        column.width = 50;\n      }\n      totWidth += column.width!;\n    });\n    const scale = (tableWidth - 5) / totWidth;\n    this.tableColumns.forEach((column) => {\n      column!.width! *= scale;\n      this.setColumnWidth(column);\n    });\n  }\n\n  setColumnWidth(column: any) {\n    const columnEls = Array.from(\n      document.getElementsByClassName('mat-column-' + column.def),\n    );\n    columnEls.forEach((el: any) => {\n      el.style.width = column.width + 'px';\n    });\n  }\n\n  setColumnWidthChanges(index: number, width: number) {\n    const orgWidth = this.tableColumns[index].width;\n    const dx = width - orgWidth!;\n    if (dx !== 0) {\n      const j = this.isResizingRight ? index + 1 : index - 1;\n      const newWidth = this.tableColumns[j].width! - dx;\n      if (newWidth > 50) {\n        this.tableColumns[index].width = width;\n        this.setColumnWidth(this.tableColumns[index]);\n        this.tableColumns[j].width = newWidth;\n        this.setColumnWidth(this.tableColumns[j]);\n      }\n    }\n  }\n\n  mouseMove(index: number) {\n    this.resizableMousemove = this.renderer.listen(\n      'document',\n      'mousemove',\n      (event) => {\n        if (this.pressed && event.buttons) {\n          const dx = this.isResizingRight\n            ? event.pageX - this.startX!\n            : -event.pageX + this.startX!;\n          const width = this.startWidth! + dx;\n          if (this.currentResizeIndex === index && width > 50) {\n            this.setColumnWidthChanges(index, width);\n          }\n        }\n      },\n    );\n    this.resizableMouseup = this.renderer.listen(\n      'document',\n      'mouseup',\n      (event) => {\n        if (this.pressed) {\n          this.pressed = false;\n          this.currentResizeIndex = -1;\n          this.resizableMousemove!();\n          this.resizableMouseup!();\n        }\n      },\n    );\n  }\n\n  private checkResizing(event: any, index: any) {\n    const cellData = this.getCellData(index);\n    if (\n      index === 0 ||\n      (Math.abs(event.pageX - cellData.right) < cellData.width / 2 &&\n        index !== this.tableColumns.length - 1)\n    ) {\n      this.isResizingRight = true;\n    } else {\n      this.isResizingRight = false;\n    }\n  }\n\n  private getCellData(index: number) {\n    const headerRow =\n      this.matTableRef!.nativeElement.children[0].querySelector('tr');\n    const cell = headerRow.children[index];\n    return cell.getBoundingClientRect();\n  }\n\n  onResizeColumn(event: any, index: number) {\n    this.checkResizing(event, index);\n    this.currentResizeIndex = index;\n    this.pressed = true;\n    this.startX = event.pageX;\n    this.startWidth = event.target.parentElement.clientWidth;\n    event.preventDefault();\n    this.mouseMove(index);\n  }\n\n  onSelect() {\n    this.select.emit(this.selection.selected);\n  }\n\n  setConfig(config: TableConfig) {\n    this.tableConfig = config;\n\n    if (this.tableConfig.isExpandible) {\n      this.tableDisplayColumns?.unshift('expand');\n    }\n\n    if (this.tableConfig.isSelectable) {\n      this.tableDisplayColumns?.unshift('select');\n    }\n\n    if (this.tableConfig.showActions) {\n      this.tableDisplayColumns?.push('actions');\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  toggleAllRows() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      this.onSelect();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n    this.onSelect();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n}\n",
      "styleUrl": "./bmb-tables.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 118,
        "jsdoctags": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["AfterViewInit", "OnInit"],
      "accessors": {
        "pageSize": {
          "name": "pageSize",
          "setSignature": {
            "name": "pageSize",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "size",
                "type": "number",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 88,
            "jsdoctags": [
              {
                "name": "size",
                "type": "number",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "data": {
          "name": "data",
          "setSignature": {
            "name": "data",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "data",
                "type": "Array<any>",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 92,
            "jsdoctags": [
              {
                "name": "data",
                "type": "Array<any>",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "columns": {
          "name": "columns",
          "setSignature": {
            "name": "columns",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "columns",
                "type": "TableColum[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 96,
            "jsdoctags": [
              {
                "name": "columns",
                "type": "TableColum[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "config": {
          "name": "config",
          "setSignature": {
            "name": "config",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "config",
                "type": "TableConfig",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 101,
            "jsdoctags": [
              {
                "name": "config",
                "type": "TableConfig",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div class=\"bmb_container-table\">\n  <table\n    mat-table\n    [dataSource]=\"dataSource\"\n    class=\"bmb_table\"\n    multiTemplateDataRows\n  >\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"select\">\n      <th\n        mat-header-cell\n        *matHeaderCellDef\n        class=\"bmb_table-headers-checkbox bmb_table-th\"\n      >\n        <bmb-checkbox\n          (change)=\"$event ? toggleAllRows() : null\"\n          [checked]=\"selection.hasValue() && isAllSelected()\"\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n          [ariaLabel]=\"checkboxLabel()\"\n        />\n      </th>\n      <td mat-cell *matCellDef=\"let row\">\n        <bmb-checkbox\n          (change)=\"$event ? selection.toggle(row) : null; onSelect()\"\n          [checked]=\"selection.isSelected(row)\"\n          [ariaLabel]=\"checkboxLabel(row)\"\n          onkeypress=\"$event.stopPropagation()\"\n        />\n        {{ row.documentos }}\n      </td>\n    </ng-container>\n\n    <!--Expand -->\n    <ng-container matColumnDef=\"expand\">\n      <th\n        mat-header-cell\n        *matHeaderCellDef\n        class=\"bmb_table-th\"\n        aria-label=\"row actions\"\n        style=\"width: 30px\"\n      >\n        &nbsp;\n      </th>\n      <td mat-cell *matCellDef=\"let row\" class=\"bmb-table-expand-cell\">\n        <button\n          mat-icon-button\n          aria-label=\"expand row\"\n          (click)=\"\n            expandedElement = expandedElement === row ? null : row;\n            $event.stopPropagation()\n          \"\n        >\n          @if (expandedElement === row) {\n            <bmb-icon class=\"bmb_table-expand-btn\" [icon]=\"'expand_less'\" />\n          } @else {\n            <bmb-icon class=\"bmb_table-expand-btn\" [icon]=\"'expand_more'\" />\n          }\n        </button>\n      </td>\n    </ng-container>\n\n    <!-- Display Columns -->\n    @for (column of tableColumns; track $index) {\n      <ng-container [matColumnDef]=\"column.def\">\n        <th\n          mat-header-cell\n          *matHeaderCellDef\n          class=\"bmb_table-headers bmb_table-th\"\n        >\n          {{ column.label }}\n          <span\n            class=\"bmb_table-resize-handle\"\n            (mousedown)=\"onResizeColumn($event, $index)\"\n          ></span>\n        </th>\n        <td mat-cell *matCellDef=\"let row; let i = index\" class=\"bmb_table-td\">\n          {{ row[column.dataKey] }}\n        </td>\n      </ng-container>\n    }\n\n    <!-- Actions Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th\n        mat-header-cell\n        *matHeaderCellDef\n        class=\"bmb_table-headers bmb_table-th\"\n      >\n        Actions\n      </th>\n      <td mat-cell *matCellDef=\"let row\" class=\"\">\n        <ng-template [ngTemplateOutlet]=\"actionTemplate!\"> </ng-template>\n      </td>\n    </ng-container>\n\n    <!-- Row to expand -->\n    <ng-container matColumnDef=\"expandedDetail\">\n      <td\n        mat-cell\n        *matCellDef=\"let row\"\n        class=\"bmb_table-td\"\n        [attr.colspan]=\"tableDisplayColumns.length\"\n      >\n        <div\n          class=\"bmb_table-element-detail bmb_table-td\"\n          [@detailExpand]=\"row == expandedElement ? 'expanded' : 'collapsed'\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"detailTemplate; context: { row }\"\n          ></ng-container>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- Rows -->\n    <tr mat-header-row *matHeaderRowDef=\"tableDisplayColumns\"></tr>\n    <tr\n      mat-row\n      *matRowDef=\"let row; columns: tableDisplayColumns; let i = dataIndex\"\n      class=\"bmb_table-element-row\"\n      [class.bmb_table-expanded-row]=\"expandedElement === row\"\n      [ngClass]=\"{\n        'bmb_table-no-border': this.tableConfig?.isExpandible,\n        'bmb_table-stripe': i % 2 === 0\n      }\"\n    ></tr>\n\n    @if (tableConfig?.isExpandible) {\n      <ng-container>\n        <tr\n          mat-row\n          *matRowDef=\"let row; columns: ['expandedDetail']; let i = dataIndex\"\n          class=\"bmb_table-detail-row\"\n          [ngClass]=\"{ 'bmb_table-stripe': i % 2 === 0 }\"\n        ></tr>\n      </ng-container>\n    }\n  </table>\n\n  <!-- Paginator -->\n  @if (tableConfig?.isPaginable) {\n    <ng-container>\n      <mat-paginator\n        class=\"bmb_table-paginator\"\n        [pageSize]=\"this.paginatorSize\"\n        [hidePageSize]=\"true\"\n        aria-label=\"Select page\"\n      >\n      </mat-paginator>\n    </ng-container>\n  }\n</div>\n"
    },
    {
      "name": "BmbTabsComponent",
      "id": "component-BmbTabsComponent-e22424fdf9598cf03b961dd0141f369e6120e27a4349c7b05e538b035826a2d35f1e245303899d07289e77678b696672191f5a185aac3cdc59fbc275fc1f5461",
      "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-tabs",
      "styleUrls": ["./bmb-tabs.component.scss"],
      "styles": [],
      "templateUrl": ["./bmb-tabs.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "format",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "string",
          "decorators": []
        },
        {
          "name": "tabs",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "IBmbTab[]",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "selected",
          "defaultValue": "new EventEmitter<IBmbTab>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "activeTabIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "tabsItems",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 37,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'tabsItems'"
            }
          ],
          "modifierKind": [170]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "selectTab",
          "args": [
            {
              "name": "selectedId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "selectedId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "showActiveTab",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface IBmbTab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-tabs',\n  templateUrl: './bmb-tabs.component.html',\n  styleUrls: ['./bmb-tabs.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTabsComponent implements OnInit, AfterViewInit {\n  @Input() format: string = '';\n  @Input() tabs: IBmbTab[] = [];\n  @Output() selected = new EventEmitter<IBmbTab>();\n\n  activeTabIndex: number = 0;\n  @ViewChild('tabsItems') tabsItems!: ElementRef;\n\n  ngOnInit(): void {\n    const initialActiveTab = this.tabs.findIndex((tab) => tab.isActive);\n    this.activeTabIndex = initialActiveTab !== -1 ? initialActiveTab : 0;\n    this.tabs.forEach(\n      (tab, index) => (tab.isActive = index === this.activeTabIndex),\n    );\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.showActiveTab(), 100);\n  }\n\n  selectTab(selectedId: number): void {\n    const tabIndex = this.tabs.findIndex((tab) => tab.id === selectedId);\n    if (tabIndex !== -1) {\n      this.tabs.forEach((tab) => (tab.isActive = false));\n      this.tabs[tabIndex].isActive = true;\n      this.activeTabIndex = tabIndex;\n      const activeTab = this.tabs[tabIndex];\n      this.selected.emit(activeTab);\n      setTimeout(() => this.showActiveTab(), 0);\n    }\n  }\n\n  showActiveTab(): void {\n    requestAnimationFrame(() => {\n      const tabsElement = this.tabsItems.nativeElement;\n      const activeTabElement = tabsElement.children[this.activeTabIndex];\n\n      if (activeTabElement) {\n        const containerWidth = tabsElement.offsetWidth;\n        const activeTabWidth = activeTabElement.offsetWidth;\n        const activeTabOffsetLeft = activeTabElement.offsetLeft;\n\n        const scrollOffset =\n          activeTabOffsetLeft - (containerWidth - activeTabWidth) / 2;\n\n        tabsElement.scrollTo({\n          left: scrollOffset,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_tabs {\n  &-tab {\n    display: flex;\n    flex-flow: row nowrap;\n    gap: rem.rem_calc(32);\n    -webkit-overflow-scrolling: touch;\n    overflow-x: auto;\n    scroll-behavior: smooth;\n    scroll-snap-type: x mandatory;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  &-item {\n    align-items: center;\n    border-bottom-color: transparent;\n    border-bottom-style: solid;\n    border-bottom-width: rem.rem_calc(2);\n    color: RGBA(var(--color-charade-500));\n    display: flex;\n    flex: 0 0 auto;\n    gap: rem.rem_calc(8);\n    height: rem.rem_calc(40);\n    justify-content: center;\n    min-width: rem.rem_calc(120);\n    padding: rem.rem_calc(8);\n    scroll-behavior: smooth;\n    scroll-snap-align: start;\n    text-align: center;\n    @include fonts.font(5, medium);\n\n    &-active {\n      border-bottom-color: RGBA(var(--color-mariner-700));\n      color: RGBA(var(--color-charade-950));\n    }\n\n    &-uppercase {\n      text-transform: uppercase;\n      @include fonts.font(3, regular);\n    }\n  }\n\n  &-badge {\n    align-items: center;\n    background-color: RGBA(var(--color-mariner-700));\n    border-radius: 100%;\n    color: RGBA(var(--color-white-primary));\n    display: flex;\n    height: rem.rem_calc(22);\n    justify-content: center;\n    width: rem.rem_calc(20);\n    @include fonts.font(3, regular);\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_tabs {\n    &-item {\n      &-active {\n        border-bottom-color: RGBA(var(--color-charade-50));\n        color: RGBA(var(--color-charade-50));\n      }\n    }\n  }\n}\n",
          "styleUrl": "./bmb-tabs.component.scss"
        }
      ],
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit", "AfterViewInit"],
      "templateData": "<div class=\"bmb_tabs\">\n  <div class=\"bmb_tabs-tab\" #tabsItems>\n    <button\n      role=\"tab\"\n      [attr.aria-selected]=\"tab.isActive ? 'true' : 'false'\"\n      [attr.tabindex]=\"tab.isActive ? 0 : -1\"\n      class=\"bmb_tabs-item\"\n      *ngFor=\"let tab of tabs; let i = index\"\n      (click)=\"selectTab(tab.id)\"\n      [ngClass]=\"{\n        'bmb_tabs-item-active': tab.isActive,\n        'bmb_tabs-item-uppercase': format === 'uppercase'\n      }\"\n    >\n      <span>\n        {{ tab.title }}\n      </span>\n      <span class=\"bmb_tabs-badge\" *ngIf=\"tab.badge\">{{ tab.badge }}</span>\n    </button>\n  </div>\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "BmbTagComponent",
      "id": "component-BmbTagComponent-eb5267f9efa5cf6d536deb72a1631e7004e33951d164a9e5875c30e1246301914bffdbdad0983c68d5fa3bc2e8d8e6debdc5a5be8099f932d4d71147eec981f2",
      "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-tag",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-tags.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "dissmisable",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "grouped",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "closeTag",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n@Component({\n  selector: 'bmb-tag',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-tags.component.scss',\n  templateUrl: './bmb-tags.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTagComponent implements AfterViewInit {\n  @Input() appearance: string = '';\n  @Input() text: string = '';\n  @Input() grouped: boolean = false;\n  @Input() dissmisable: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector('.bmb_tag-grouped');\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_tag-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_tag'];\n\n    if (this.appearance) {\n      classes.push('bmb_tag-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  closeTag() {\n    this.el.nativeElement.remove();\n  }\n}\n",
      "styleUrl": "./bmb-tags.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 25,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["AfterViewInit"],
      "templateData": "<div class=\"bmb_tag\">\n  <span class=\"bmb_tag-text\">{{ text }}</span>\n  <button *ngIf=\"this.dissmisable\" class=\"bmb_tag-btn\" (click)=\"closeTag()\">\n    <bmb-icon [icon]=\"'close'\" />\n  </button>\n</div>\n"
    },
    {
      "name": "BmbThemeComponent",
      "id": "component-BmbThemeComponent-bc7f10ac36f0f4e00f358ceffd480a665e780b446beda308e0d0b68c5c55548ca747d914a1910be9e875b5d65a25dfd221683205d37ef85f028ee9bb74b5d7ef",
      "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ThemeService",
          "type": "injectable"
        }
      ],
      "selector": "bmb-theme",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-theme.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "selectedTheme",
          "defaultValue": "'light'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "service",
          "defaultValue": "inject(ThemeService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "applyTheme",
          "args": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onThemeChange",
          "args": [
            {
              "name": "isChecked",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isChecked",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbSwitchComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit, inject, ViewEncapsulation } from '@angular/core';\nimport { ThemeService } from '../../services';\nimport { CommonModule } from '@angular/common';\nimport { BmbSwitchComponent } from '../bmb-switch/bmb-switch.component';\n\n@Component({\n  selector: 'bmb-theme',\n  standalone: true,\n  imports: [CommonModule, BmbSwitchComponent],\n  providers: [ThemeService],\n  templateUrl: './bmb-theme.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbThemeComponent implements OnInit {\n  selectedTheme: string = 'light';\n\n  private service = inject(ThemeService);\n\n  ngOnInit(): void {\n    const savedTheme = localStorage.getItem('theme') || 'light';\n    this.selectedTheme = savedTheme;\n    this.applyTheme(savedTheme);\n\n    this.service.theme$.subscribe((theme: any) => {\n      this.applyTheme(theme);\n    });\n  }\n\n  applyTheme(theme: string): void {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }\n\n  onThemeChange(isChecked: boolean): void {\n    this.selectedTheme = isChecked ? 'dark' : 'light';\n    localStorage.setItem('theme', this.selectedTheme);\n    this.service.setTheme(this.selectedTheme);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<bmb-switch\n  [isChecked]=\"selectedTheme === 'dark'\"\n  leftIcon=\"light_mode\"\n  rightIcon=\"dark_mode\"\n  (change)=\"onThemeChange($event)\"\n></bmb-switch>\n"
    },
    {
      "name": "BmbToastComponent",
      "id": "component-BmbToastComponent-b8ea2ef35d6c99a5e75d694f7bc5ad5348fdbb48ba8428adfd4a4017696424df9bbd0874919f8aa5b1537e7ecbc8cb3c32b26e8ab8b520ec4961330938ce9767",
      "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ToastService",
          "type": "injectable"
        }
      ],
      "selector": "bmb-toast",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-toast.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "duration",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "number",
          "decorators": []
        },
        {
          "name": "message",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "position",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "\"top\" | \"bottom\" | \"middle\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isOpen$",
          "defaultValue": "this.toastService.isOpen$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "isOpenSubscription",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription | undefined",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openToast",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [125]
        },
        {
          "name": "setAutoClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { ToastService } from '../../services';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  standalone: true,\n  selector: 'bmb-toast',\n  styleUrl: './bmb-toast.component.scss',\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-toast.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ToastService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbToastComponent implements OnInit, OnDestroy {\n  @Input() appearance: string = '';\n  @Input() message: string = '';\n  @Input() duration?: number;\n  @Input() position?: 'top' | 'bottom' | 'middle';\n\n  isOpen$ = this.toastService.isOpen$;\n\n  private isOpenSubscription: Subscription | undefined;\n\n  constructor(private toastService: ToastService) {}\n\n  ngOnInit(): void {\n    this.isOpenSubscription = this.isOpen$.subscribe((isOpen) => {\n      if (isOpen && this.duration) {\n        this.setAutoClose();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.isOpenSubscription) {\n      this.isOpenSubscription.unsubscribe();\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_toast'];\n\n    if (this.appearance) {\n      classes.push('bmb_toast-' + this.appearance);\n    }\n\n    if (this.position) {\n      classes.push('bmb_toast-' + this.position);\n    }\n\n    return classes;\n  }\n\n  private setAutoClose(): void {\n    setTimeout(() => {\n      this.toastService.closeToast();\n    }, this.duration);\n  }\n\n  public openToast() {\n    this.toastService.openToast();\n  }\n}\n",
      "styleUrl": "./bmb-toast.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "toastService",
            "type": "ToastService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 32,
        "jsdoctags": [
          {
            "name": "toastService",
            "type": "ToastService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div *ngIf=\"isOpen$ | async\" [ngClass]=\"getClasses()\">\n  <bmb-icon icon=\"info\" />\n  <span>{{ message }}</span>\n</div>\n"
    },
    {
      "name": "BmbTopBarComponent",
      "id": "component-BmbTopBarComponent-5cba8416543e66de5076f00db6e676ebdcc3bc3f069286cb46ad1fae7107c40140296c4bdc72832ff5b6937ac1151aede0c4cef8991b458f61f7c72ed3c42000",
      "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-top-bar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-top-bar.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appName",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string",
          "decorators": []
        },
        {
          "name": "appSubTitle",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string",
          "decorators": []
        },
        {
          "name": "hasLogoutButton",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "image",
          "defaultValue": "'assets/images/tec-logo.svg'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string",
          "decorators": []
        },
        {
          "name": "lang",
          "defaultValue": "'es'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string",
          "decorators": []
        },
        {
          "name": "mobileImage",
          "defaultValue": "'assets/images/tec-logo-mob.svg'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string",
          "decorators": []
        },
        {
          "name": "positionButtonMenu",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "IPositionButtonMenu",
          "decorators": []
        },
        {
          "name": "showLang",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "userInformation",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "IUserInformation | null",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "logOut",
          "defaultValue": "new EventEmitter<any>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onLangChange",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "EventEmitter<string>"
        }
      ],
      "propertiesClass": [
        {
          "name": "contentTemplate",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<> | null",
          "optional": false,
          "description": "",
          "line": 51,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "TemplateRef"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "isMobileMenuOpen",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 53
        }
      ],
      "methodsClass": [
        {
          "name": "getCountryName",
          "args": [
            {
              "name": "lang",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 85,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "lang",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFlag",
          "args": [
            {
              "name": "lang",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 73,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "lang",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getMenuButtonClasses",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getMenuClasses",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleLangChange",
          "args": [
            {
              "name": "lang",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 96,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "lang",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleLogOutClick",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleMobileMenuClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        },
        {
          "name": "BmbTopBarUserSectionComponent",
          "type": "component"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "BmbSelectComponent",
          "type": "component"
        },
        {
          "name": "BmbSelectItemComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { IPositionButtonMenu, IUserInformation } from './types';\nimport { BmbTopBarUserSectionComponent } from './bmb-top-bar-user-section/bmb-top-bar-user-section.component';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbSelectComponent } from '../bmb-select/bmb-select.component';\nimport { BmbSelectItemComponent } from '../bmb-select/bmb-select-item/bmb-select-item.component';\n\nexport { IPositionButtonMenu, IUserInformation } from './types';\n\n@Component({\n  selector: 'bmb-top-bar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbButtonDirective,\n    BmbTopBarUserSectionComponent,\n    BmbIconComponent,\n    BmbSelectComponent,\n    BmbSelectItemComponent,\n  ],\n  templateUrl: './bmb-top-bar.component.html',\n  styleUrl: './bmb-top-bar.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTopBarComponent {\n  @Input() positionButtonMenu: IPositionButtonMenu = 'left';\n  @Input() userInformation: IUserInformation | null = null;\n  @Input() hasLogoutButton: boolean = true;\n  @Input() image: string = 'assets/images/tec-logo.svg';\n  @Input() mobileImage: string = 'assets/images/tec-logo-mob.svg';\n  @Input() appName: string = '';\n  @Input() appSubTitle: string = '';\n  @Input() showLang: boolean = false;\n  @Input() lang: string = 'es';\n\n  @Output() logOut: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onLangChange: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild(TemplateRef) contentTemplate: TemplateRef<unknown> | null = null;\n\n  isMobileMenuOpen: boolean = false;\n\n  handleLogOutClick(event: Event) {\n    this.logOut.emit(event);\n  }\n\n  handleMobileMenuClick() {\n    this.isMobileMenuOpen = !this.isMobileMenuOpen;\n  }\n\n  getMenuClasses(): string {\n    if (this.isMobileMenuOpen) return 'bmb_top-bar-nav-open';\n    return '';\n  }\n\n  getMenuButtonClasses(): string {\n    if (this.isMobileMenuOpen) return 'bmb_top-bar-button-menu-open';\n    return '';\n  }\n\n  getFlag(lang: string): string {\n    switch (lang) {\n      case 'es':\n        return '/assets/images/lang-flags/mx.svg';\n      case 'en':\n        return `/assets/images/lang-flags/us.svg`;\n\n      default:\n        return '';\n    }\n  }\n\n  getCountryName(lang: string): string {\n    switch (lang) {\n      case 'es':\n        return 'Español';\n      case 'en':\n        return 'English';\n      default:\n        return '';\n    }\n  }\n\n  handleLangChange(lang: string): void {\n    this.onLangChange.emit(lang);\n  }\n}\n",
      "styleUrl": "./bmb-top-bar.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<header class=\"bmb_top-bar\">\n  @if (positionButtonMenu === \"left\") {\n    <div class=\"bmb_top-bar-button-section\" [ngClass]=\"getMenuButtonClasses()\">\n      <button\n        class=\"bmb_top-bar-button-menu\"\n        bmbButton\n        (click)=\"handleMobileMenuClick()\"\n      >\n        <bmb-icon icon=\"menu\" class=\"bmb_top-bar-button-menu-menu\" />\n        <bmb-icon icon=\"close\" class=\"bmb_top-bar-button-menu-close\" />\n      </button>\n    </div>\n  }\n  <figure class=\"bmb_top-bar-logo-section\">\n    <picture>\n      <source media=\"(min-width: 1000px)\" [srcset]=\"image\" />\n      <source [srcset]=\"mobileImage\" />\n      <img\n        src=\"/assets/images/tec-logo-mob.svg\"\n        alt=\"TEC de Monterrey\"\n        loading=\"lazy\"\n      />\n    </picture>\n  </figure>\n  <nav class=\"bmb_top-bar-nav\" [ngClass]=\"getMenuClasses()\">\n    @if (appName !== \"\") {\n      <li class=\"bmb_top-bar-app-name\">\n        <h1>{{ appName }}</h1>\n        <span>{{ appSubTitle }}</span>\n      </li>\n    }\n    <ul class=\"bmb_top-bar-nav-content\">\n      <ng-content></ng-content>\n    </ul>\n    @if (userInformation) {\n      <li>\n        <bmb-top-bar-user-section [userInformation]=\"userInformation\" />\n      </li>\n    }\n  </nav>\n  <div class=\"bmb_top-bar-always-visible-content\">\n    @if (userInformation && hasLogoutButton) {\n      <button\n        class=\"bmb_top-bar-logoff\"\n        bmbButton\n        appearance=\"secondary-filled\"\n        (click)=\"handleLogOutClick($event)\"\n      >\n        Salir\n      </button>\n    }\n\n    @if (showLang) {\n      <bmb-select (onLangChange)=\"handleLangChange($event)\" [value]=\"lang\">\n        <div class=\"bmb_top-bar-lang\" selectTemplate>\n          <figure class=\"bmb_top-bar-lang-flag\">\n            <img [src]=\"getFlag(lang)\" [alt]=\"getCountryName(lang)\" />\n          </figure>\n          <span>{{ getCountryName(lang) }}</span>\n        </div>\n        <bmb-select-item value=\"es\">\n          <div class=\"bmb_top-bar-lang\">\n            <figure class=\"bmb_top-bar-lang-flag\">\n              <img [src]=\"getFlag('es')\" [alt]=\"getCountryName('es')\" />\n            </figure>\n            <span>{{ getCountryName(\"es\") }}</span>\n          </div>\n        </bmb-select-item>\n        <bmb-select-item value=\"en\">\n          <div class=\"bmb_top-bar-lang\">\n            <figure class=\"bmb_top-bar-lang-flag\">\n              <img [src]=\"getFlag('en')\" [alt]=\"getCountryName('en')\" />\n            </figure>\n            <span>{{ getCountryName(\"en\") }}</span>\n          </div>\n        </bmb-select-item>\n      </bmb-select>\n    }\n  </div>\n  @if (positionButtonMenu === \"right\") {\n    <div class=\"bmb_top-bar-button-section\">\n      <button\n        class=\"bmb_top-bar-button-menu\"\n        bmbButton\n        icon=\"menu\"\n        (click)=\"handleMobileMenuClick()\"\n      ></button>\n    </div>\n  }\n</header>\n"
    },
    {
      "name": "BmbTopBarItemComponent",
      "id": "component-BmbTopBarItemComponent-c3ee9188c87d02caccf2895d0adf2ef07986704e06dc8293cf7bb60eb47f5cb9c66d098dadca28ab03bccf45fffb19aefb8ca8afd9657824f28cc132052dc2d7",
      "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-item/bmb-top-bar-item.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-top-bar-item",
      "styleUrls": [],
      "styles": [],
      "template": "<li class=\"bmb_top-bar-item\" [ngClass]=\"isElementActive()\">\n  <ng-content></ng-content>\n</li>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "isActive",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "isElementActive",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-top-bar-item',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <li class=\"bmb_top-bar-item\" [ngClass]=\"isElementActive()\">\n      <ng-content></ng-content>\n    </li>\n  `,\n  styleUrl: './bmb-top-bar-item.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTopBarItemComponent {\n  @Input() isActive: boolean = false;\n\n  isElementActive(): string {\n    if (this.isActive) return 'bmb_top-bar-item-active';\n    return '';\n  }\n}\n",
      "styleUrl": "./bmb-top-bar-item.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "BmbTopBarUserSectionComponent",
      "id": "component-BmbTopBarUserSectionComponent-678d399f60d38821f058321d960482255798b0fffd251ebcc73e021adbea476b1e158ea2a5650c18e85f95f01b82fbdc8f1eeb7f3f19af116d0627f8e28add3c",
      "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-user-section/bmb-top-bar-user-section.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-top-bar-user-section",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-top-bar-user-section.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "userInformation",
          "defaultValue": "{\n    image: '',\n    name: '',\n    role: '',\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "IUserInformation",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbUserImageComponent",
          "type": "component"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { BmbUserImageComponent } from '../../bmb-user-image/bmb-user-image.component';\nimport { BmbIconComponent } from '../../bmb-icon/bmb-icon.component';\nimport { IUserInformation, IPositionButtonMenu } from '../types';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-top-bar-user-section',\n  standalone: true,\n  imports: [CommonModule, BmbUserImageComponent, BmbIconComponent],\n  templateUrl: './bmb-top-bar-user-section.component.html',\n  styleUrl: './bmb-top-bar-user-section.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTopBarUserSectionComponent {\n  @Input() userInformation: IUserInformation = {\n    image: '',\n    name: '',\n    role: '',\n  };\n}\n",
      "styleUrl": "./bmb-top-bar-user-section.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<section class=\"bmb_top-bar-user-section\">\n  <span class=\"bmb_top-bar-user-section-help\">\n    <bmb-icon icon=\"help\" />\n  </span>\n  <bmb-user-image\n    [image]=\"userInformation.image\"\n    size=\"mobile-small\"\n    class=\"bmb_top-bar-user-section-user-image\"\n  />\n  <h3 class=\"bmb_top-bar-user-section-title\">{{ userInformation.name }}</h3>\n  <span class=\"bmb_top-bar-user-section-role\">{{ userInformation.role }}</span>\n</section>\n"
    },
    {
      "name": "BmbTotpComponent",
      "id": "component-BmbTotpComponent-62bbc3b2e3f3df779e83d02109afceda577e2edce9fa8fd4572b03f61314e581270158a765a81fe3068d8f43a0314659e19d8339c50f80d6d34c2688fe2127bf",
      "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-totp",
      "styleUrls": ["./bmb-totp.component.scss"],
      "styles": [],
      "templateUrl": ["./bmb-totp.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "buttonText",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "string",
          "decorators": []
        },
        {
          "name": "codeError",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "errorMessage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "string",
          "decorators": []
        },
        {
          "name": "helperText",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "string",
          "decorators": []
        },
        {
          "name": "instanceId",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "string",
          "decorators": []
        },
        {
          "name": "maxCode",
          "defaultValue": "6",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "number",
          "decorators": []
        },
        {
          "name": "showButton",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "subtitle",
          "defaultValue": "'(Time-based One-time Password)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "'TOTP'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "handleSubmit",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "codeForm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "destroy$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [123]
        },
        {
          "name": "lastSubmitTime",
          "defaultValue": "Date.now()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "buildForm",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 66,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleKeyDown",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "idx",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 114,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'keydown', ['$event']"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "idx",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handlePaste",
          "args": [
            {
              "name": "event",
              "type": "ClipboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 129,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'paste', ['$event']"
            }
          ],
          "modifierKind": [170],
          "jsdoctags": [
            {
              "name": "event",
              "type": "ClipboardEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 169,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 62,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onKeyUp",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "idx",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 77,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "idx",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onSubmit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 155,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "keydown",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "idx",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 114
        },
        {
          "name": "paste",
          "args": [
            {
              "name": "event",
              "type": "ClipboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 129
        }
      ],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  OnInit,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  HostListener,\n} from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\n@Component({\n  selector: 'bmb-totp',\n  templateUrl: './bmb-totp.component.html',\n  styleUrls: ['./bmb-totp.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbButtonDirective,\n    ReactiveFormsModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTotpComponent implements OnInit {\n  private lastSubmitTime = Date.now();\n  private destroy$ = new Subject<void>();\n\n  @Input() title: string = 'TOTP';\n  @Input() subtitle: string = '(Time-based One-time Password)';\n  @Input() instanceId: string = '';\n  @Input() codeError: boolean = false;\n  @Input() errorMessage: string = '';\n  @Input() helperText: string = '';\n  @Input() showButton: boolean = false;\n  @Input() buttonText: string = '';\n  @Input() maxCode: number = 6;\n\n  @Output() handleSubmit = new EventEmitter<string>();\n\n  codeForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm() {\n    let group: { [key: string]: FormControl } = {};\n    for (let i = 0; i < this.maxCode; i++) {\n      group[`code${i}`] = new FormControl('', [\n        Validators.required,\n        Validators.pattern('[0-9a-zA-Z]'),\n      ]);\n    }\n    this.codeForm = this.formBuilder.group(group);\n  }\n\n  onKeyUp(event: KeyboardEvent, idx: number): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.onSubmit();\n      return;\n    }\n\n    if (\n      event.key === 'Tab' ||\n      event.key === 'Shift' ||\n      event.key === 'ArrowLeft' ||\n      event.key === 'ArrowRight' ||\n      event.key === 'Backspace'\n    ) {\n      return;\n    }\n\n    if (value && value.length === input.maxLength) {\n      if (idx < this.maxCode - 1) {\n        const nextInput = document.getElementById(\n          `code-${this.instanceId}-${idx + 1}`,\n        ) as HTMLInputElement;\n        if (nextInput) {\n          nextInput.focus();\n          nextInput.select();\n        }\n      } else if (idx === this.maxCode - 1 && !this.showButton) {\n        this.onSubmit();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent, idx: number): void {\n    const input = event.target as HTMLInputElement;\n\n    if (event.key === 'Backspace' && input.value.length === 0 && idx > 0) {\n      const previousInput = document.getElementById(\n        `code-${this.instanceId}-${idx - 1}`,\n      ) as HTMLInputElement;\n      if (previousInput) {\n        previousInput.focus();\n        previousInput.select();\n      }\n    }\n  }\n\n  @HostListener('paste', ['$event'])\n  handlePaste(event: ClipboardEvent) {\n    let pasteData = event.clipboardData?.getData('text/plain');\n    if (pasteData && pasteData.length === this.maxCode) {\n      for (let i = 0; i < this.maxCode; i++) {\n        const control = this.codeForm.get(`code${i}`);\n        if (control) {\n          control.setValue(pasteData[i]);\n        }\n      }\n\n      const lastInput = document.getElementById(\n        `code-${this.instanceId}-${this.maxCode - 1}`,\n      ) as HTMLInputElement;\n      if (lastInput) {\n        lastInput.focus();\n        lastInput.select();\n      }\n\n      if (!this.showButton) {\n        this.onSubmit();\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  onSubmit() {\n    const now = Date.now();\n    if (now - this.lastSubmitTime > 300) {\n      this.lastSubmitTime = now;\n\n      if (this.codeForm.valid) {\n        const code = Object.values(this.codeForm.value).join('');\n        this.handleSubmit.emit(code);\n      } else {\n        this.handleSubmit.emit('');\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_totp {\n  background-color: RGBA(var(--color-charade-50));\n  border-radius: rem.rem_calc(24);\n  margin: auto;\n  padding: rem.rem_calc(36 24);\n  width: rem.rem_calc(344);\n\n  &-form {\n    align-items: center;\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n  }\n\n  &-icon {\n    color: RGBA(var(--color-charade-950));\n    font-size: rem.rem_calc(48);\n    margin-bottom: rem.rem_calc(16);\n    width: rem.rem_calc(48);\n  }\n\n  &-title {\n    color: RGBA(var(--color-charade-950));\n    @include fonts.font(9, semibold);\n  }\n\n  &-subtitle {\n    color: RGBA(var(--color-charade-700));\n    margin-bottom: rem.rem_calc(16);\n    @include fonts.font(3, regular);\n  }\n\n  &-code {\n    align-items: center;\n    display: flex;\n  }\n\n  &-separator {\n    padding-right: rem.rem_calc(20);\n    position: relative;\n\n    &::after {\n      background-color: RGBA(var(--color-mariner-700));\n      border-radius: 100%;\n      content: \"\";\n      display: block;\n      height: rem.rem_calc(4);\n      position: absolute;\n      right: rem.rem_calc(8);\n      top: 45%;\n      width: rem.rem_calc(4);\n    }\n\n    &:last-child {\n      padding-right: 0;\n\n      &::after {\n        display: none;\n      }\n    }\n\n    &:focus-within {\n      &::before {\n        content: \"\";\n        border-radius: rem.rem_calc(4);\n        position: absolute;\n        left: 0;\n        bottom: rem.rem_calc(4);\n        width: rem.rem_calc(24);\n        height: rem.rem_calc(2);\n        background-color: RGBA(var(--color-mariner-500));\n        transition: background-color 0.3s;\n        left: rem.rem_calc(3.5);\n      }\n    }\n  }\n\n  &-input {\n    border: rem.rem_calc(1) solid var(--color-black-min);\n    border-radius: rem.rem_calc(4);\n    color: var(--color-black-light);\n    height: rem.rem_calc(32);\n    width: rem.rem_calc(32);\n    @include fonts.font(7, regular);\n    text-align: center;\n    outline: none;\n\n    &-error {\n      border-color: RGBA(var(--color-red-primary));\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  button {\n    margin-top: rem.rem_calc(16);\n  }\n\n  &-helper {\n    color: RGBA(var(--color-mariner-700));\n    margin: rem.rem_calc(8 0);\n    @include fonts.font(4, regular);\n  }\n\n  &-error {\n    color: RGBA(var(--color-red-primary));\n    margin: rem.rem_calc(16 0 8);\n    @include fonts.font(3, regular);\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_totp {\n    background-color: var(--color-black-tint);\n\n    &-icon,\n    &-title {\n      color: RGBA(var(--color-charade-50));\n    }\n\n    &-subtitle {\n      color: RGBA(var(--color-charade-200));\n    }\n\n    &-separator {\n      &::after {\n        background-color: RGBA(var(--color-charade-50));\n      }\n    }\n  }\n}\n",
          "styleUrl": "./bmb-totp.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 55,
        "jsdoctags": [
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<div class=\"bmb_totp\">\n  <form [formGroup]=\"codeForm\" (ngSubmit)=\"onSubmit()\" class=\"bmb_totp-form\">\n    <bmb-icon icon=\"lock\" class=\"bmb_totp-icon\" [materialIcon]=\"true\" />\n    <div class=\"bmb_totp-title\">{{ title }}</div>\n    <p class=\"bmb_totp-subtitle\">{{ subtitle }}</p>\n    <div class=\"bmb_totp-code\">\n      <div\n        *ngFor=\"let i of [].constructor(maxCode); let idx = index\"\n        class=\"bmb_totp-separator\"\n      >\n        <input\n          type=\"text\"\n          formControlName=\"code{{ idx }}\"\n          [id]=\"'code-' + instanceId + '-' + idx\"\n          autocomplete=\"off\"\n          maxlength=\"1\"\n          [ngClass]=\"{\n            'bmb_totp-input-error': codeError,\n            'bmb_totp-input': true\n          }\"\n          (keyup)=\"onKeyUp($event, idx)\"\n        />\n      </div>\n    </div>\n    @if (codeError) {\n      <p class=\"bmb_totp-error\">{{ errorMessage }}</p>\n    }\n    @if (showButton) {\n      <button bmbButton appearance=\"primary\" size=\"large\" type=\"submit\">\n        {{ buttonText }}\n      </button>\n    }\n    @if (showButton && helperText) {\n      <p class=\"bmb_totp-helper\">\n        {{ helperText }}\n      </p>\n    }\n  </form>\n</div>\n"
    },
    {
      "name": "BmbUserImageComponent",
      "id": "component-BmbUserImageComponent-2594fb33154112bd055a449c1d6d25ae01d2adb4b3decaac6e03a93b055fd4abf447062a3b045348cf57e3fb6c11e6621e34c7b9d6d17f3807f6b7b9acd292a0",
      "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-user-image",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-user-image.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "altImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "image",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-user-image',\n  styleUrl: './bmb-user-image.component.scss',\n  templateUrl: './bmb-user-image.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbUserImageComponent {\n  @Input() size: string = '';\n  @Input() image: string = '';\n  @Input() altImage: string = '';\n  @Input() link: string = '';\n  @Input() target: string = '';\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_user_image'];\n\n    if (this.size) {\n      classes.push('bmb_user_image-' + this.size);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-user-image.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<a [ngClass]=\"getClasses()\" [href]=\"link\" [target]=\"target\">\n  <img [src]=\"image\" [alt]=\"altImage\" />\n</a>\n"
    },
    {
      "name": "BmbUserSummaryComponent",
      "id": "component-BmbUserSummaryComponent-d888189967d2cbf6fa4d5abf6253270bc39f982374b7198f722222b1fcfacbebf690b2fd9375240d6886b40ea2740871c916cdd2f749de0df06813ccc1cd8309",
      "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-user-summary",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-user-summary.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "id",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "image",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isProfile",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "name",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        },
        {
          "name": "BmbUserImageComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { BmbUserImageComponent } from '../bmb-user-image/bmb-user-image.component';\n\n@Component({\n  selector: 'bmb-user-summary',\n  standalone: true,\n  imports: [CommonModule, BmbButtonDirective, BmbUserImageComponent],\n  templateUrl: './bmb-user-summary.component.html',\n  styleUrl: './bmb-user-summary.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbUserSummaryComponent {\n  @Input() isProfile: boolean = false;\n  @Input() name: string = '';\n  @Input() id: string = '';\n  @Input() image: string = '';\n\n  @Output() onClick: EventEmitter<void> = new EventEmitter<void>();\n\n  handleClick(): void {\n    this.onClick.emit();\n  }\n}\n",
      "styleUrl": "./bmb-user-summary.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<section\n  class=\"bmb_user-summary\"\n  [ngClass]=\"{ 'bmb_user-summary-is-profile': isProfile }\"\n>\n  <bmb-user-image [size]=\"'mobile-large'\" [image]=\"image\" [altImage]=\"name\" />\n  <div class=\"bmb_user-summary-content\">\n    @if (isProfile) {\n      <h3 class=\"bmb_user-summary-content-title\">{{ name }}</h3>\n    } @else {\n      <h3 class=\"bmb_user-summary-content-title\">\n        ¡Buenas tardes <br />{{ name }}!\n      </h3>\n    }\n    <span class=\"bmb_user-summary-content-id\">{{ id }}</span>\n  </div>\n  @if (isProfile) {\n    <button\n      class=\"bmb_user-summary-button\"\n      bmbButton\n      appearance=\"secondary-outlined\"\n      (click)=\"handleClick()\"\n    >\n      ID Digital\n    </button>\n  }\n</section>\n"
    },
    {
      "name": "BmbValueCounterComponent",
      "id": "component-BmbValueCounterComponent-a815caf2302db3742be9372c483fa4a532a4b788bf5397e25b9d1419321900e50baf2d7c949f4ee47ac8f3af5d4b7601dfc923b1bc55dfc190ceb488373b8f4d",
      "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-value-counter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-value-counter.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string",
          "decorators": []
        },
        {
          "name": "progress",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-value-counter',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-value-counter.component.html',\n  styleUrl: './bmb-value-counter.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbValueCounterComponent {\n  @Input() label: string = '';\n  @Input() value: string = '';\n  @Input() progress: string = '';\n}\n",
      "styleUrl": "./bmb-value-counter.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_value-counter\">\n  <h3 class=\"bmb_value-counter-label\">{{ label }}</h3>\n  <span class=\"bmb_value-counter-progress\">{{ progress }}</span>\n  <span class=\"bmb_value-counter-slash\">/</span>\n  <span class=\"bmb_value-counter-value\">{{ value }}</span>\n</div>\n"
    },
    {
      "name": "DsNgComponent",
      "id": "component-DsNgComponent-28964880d025765a36a1fde045efea0520d871433d5037a9446bd9a81dfd01c477b2c4fd6ac6010baa2228b9c378ed5244b53383869f2e60d23a20086c17df46",
      "file": "projects/ds-ng/src/lib/ds-ng.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-ds-ng",
      "styleUrls": [],
      "styles": [""],
      "template": "<p>ds-ng works!</p>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bmb-ds-ng',\n  template: ` <p>ds-ng works!</p> `,\n  styles: ``,\n})\nexport class DsNgComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": []
    },
    {
      "name": "StorybookToastWrapperComponent",
      "id": "component-StorybookToastWrapperComponent-e599e8f2c9632f98dcf383bc5c03b3a5aeece87cf26ef0c929d385e56a09f1b8dac1ab96d3f355934a559f9f94faeef947134cc64aebd12a17645dc6fe7aa5d7",
      "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-toast-wrapper",
      "styleUrls": [],
      "styles": [],
      "template": "<button\n  bmbButton\n  appearance=\"primary\"\n  icon=\"home\"\n  size=\"small\"\n  position=\"left\"\n  [case]=\"false\"\n  (click)=\"onButtonClick()\"\n>\n  Click Here\n</button>\n<bmb-toast\n  [message]=\"message\"\n  [appearance]=\"appearance\"\n  [duration]=\"duration\"\n  [position]=\"position\"\n></bmb-toast>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string",
          "decorators": []
        },
        {
          "name": "duration",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "number",
          "decorators": []
        },
        {
          "name": "message",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string",
          "decorators": []
        },
        {
          "name": "position",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "\"top\" | \"bottom\" | \"middle\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "toastComponent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "BmbToastComponent",
          "optional": false,
          "description": "",
          "line": 39,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "BmbToastComponent"
            }
          ],
          "modifierKind": [170, 123]
        }
      ],
      "methodsClass": [
        {
          "name": "onButtonClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "BmbToastComponent",
          "type": "component"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { Meta, StoryFn, moduleMetadata } from '@storybook/angular';\nimport { BmbToastComponent } from './bmb-toast.component';\nimport { ToastService } from '../../services/toast.service';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\n\n@Component({\n  standalone: true,\n  imports: [BmbToastComponent, BmbButtonDirective],\n  selector: 'storybook-toast-wrapper',\n  template: `\n    <button\n      bmbButton\n      appearance=\"primary\"\n      icon=\"home\"\n      size=\"small\"\n      position=\"left\"\n      [case]=\"false\"\n      (click)=\"onButtonClick()\"\n    >\n      Click Here\n    </button>\n    <bmb-toast\n      [message]=\"message\"\n      [appearance]=\"appearance\"\n      [duration]=\"duration\"\n      [position]=\"position\"\n    ></bmb-toast>\n  `,\n})\nclass StorybookToastWrapperComponent {\n  @Input() appearance: string = '';\n  @Input() message: string = '';\n  @Input() duration?: number;\n  @Input() position?: 'top' | 'bottom' | 'middle';\n\n  @ViewChild(BmbToastComponent)\n  private toastComponent!: BmbToastComponent;\n  onButtonClick() {\n    this.toastComponent.openToast();\n  }\n}\n\nexport default {\n  title: 'Micro Componentes/Toast',\n  component: BmbToastComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        StorybookToastWrapperComponent,\n        BmbToastComponent,\n        BmbIconComponent,\n        BmbButtonDirective,\n      ],\n      providers: [ToastService],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbButtonDirective, BmbToastComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbButtonDirective, BmbToastComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\nexport class Component {\n  title = 'my-app';\n\n  @ViewChild(BmbToastComponent)\n  private toastComponent!: BmbToastComponent;\n  onButtonClick() {\n    this.toastComponent.openToast();\n  }\n}\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    message: {\n      name: 'Message',\n      control: {\n        type: 'text',\n      },\n      description:\n        'Specifies the text displayed within the toast notification. This message should be concise and direct, providing the user with immediate feedback or information related to their actions.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    appearance: {\n      name: 'Appearance',\n      control: 'radio',\n      options: [\n        'neutral',\n        'primary',\n        'successful',\n        'warning',\n        'error',\n        'event',\n      ],\n      description:\n        'Defines the visual style of the toast, allowing it to match the context of the notification. Each option represents a different level of notification severity or type, such as informational (neutral), success (successful), warning (warning), error (error), or event (event).',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'neutral' },\n        type: { summary: 'string' },\n      },\n    },\n    duration: {\n      name: 'Duration',\n      control: {\n        type: 'number',\n      },\n      description:\n        'Determines how long the toast remains visible to the user, in milliseconds. A longer duration can be useful for more complex messages that require additional reading time, whereas shorter durations are suitable for succinct, immediate feedback',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: '5000' },\n        type: { summary: 'string' },\n      },\n    },\n    position: {\n      name: 'Position',\n      control: 'radio',\n      options: ['top', 'bottom', 'middle'],\n      description:\n        \"Controls the position of the toast on the screen, helping to ensure the notification does not obstruct important interface elements. Options include top, bottom, and middle, allowing you to choose the most appropriate placement based on your application's layout and user experience requirements.\",\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'top' },\n        type: { summary: 'string' },\n      },\n    },\n  },\n  args: {\n    message: 'Your toast text here',\n    appearance: 'neutral',\n    duration: 5000,\n    position: 'top',\n  },\n} as Meta<typeof BmbToastComponent>;\n\nfunction attributes(object: { [key: string]: any }): string {\n  return Object.entries(object)\n    .filter(([key]) => key !== 'text')\n    .map(([key, value]) => {\n      if (key === 'duration') {\n        return `[${key}]=\"${value}\"`;\n      }\n      return `${key}=\"${value}\"`;\n    })\n    .join(' ');\n}\n\nexport const Default: StoryFn<typeof BmbToastComponent> = (args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n};\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    }
  ],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "customizable",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args,\n  )}</button>`,\n})"
      },
      {
        "name": "customizable",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"storybook-colors-playground\"><div style=\"background-color: ${colors(\n    args,\n  )};\"></div> <div style=\"background: ${gradients(args)};\"></div></div>`,\n})"
      },
      {
        "name": "customizable",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div ${attributes(args)}>Typography</div>`,\n})"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "customizable()"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "customizable()"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "customizable()"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-legend.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-card [borderRadius]=\"borderRadius\" [padding]=\"padding\" [margin]=\"margin\">\n        <ng-template #header>Optional header</ng-template>\n        <div>Content</div>\n        <ng-template #footer>Optional footer</ng-template>\n      </bmb-card>\n    `,\n  }),\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "StoryFn<>",
        "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "eventsInDate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "({\n  date,\n  events,\n}: IBmbCalendarRenderEvents): any[] => {\n  const todayEvents = events.filter((event: IBmbCalendarEvent) =>\n    date.hasSame(DateTime.fromISO(event.start), 'day'),\n  );\n\n  return todayEvents;\n}"
      },
      {
        "name": "FAB_SIZE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "{\n  small: 'small',\n  large: 'large',\n} as const"
      },
      {
        "name": "FAB_TYPE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "{\n  normal: 'normal',\n  extended: 'extended',\n} as const"
      },
      {
        "name": "getMonthDays",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  let weekDays = [];\n\n  for (let day = -1; day <= 38; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
      },
      {
        "name": "getTimeRange",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(event: IBmbCalendarEvent): string => {\n  const start = DateTime.fromISO(event.start);\n  const end = DateTime.fromISO(event.end);\n\n  return `${start.toFormat('hh:mm')} - ${end.toFormat('hh:mm')}`;\n}"
      },
      {
        "name": "getWeekDays",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  let weekDays = [];\n\n  for (let day = -1; day <= 5; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
      },
      {
        "name": "INPUT_TYPE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "{\n  normal: 'normal',\n  simple: 'simple',\n} as const"
      },
      {
        "name": "orderDayNames",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(\n  days: (string | undefined)[],\n): (string | undefined)[] => {\n  const lastElement: string | undefined = days.pop();\n  days.unshift(lastElement);\n  return days;\n}"
      },
      {
        "name": "pixelToRem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(size: number) =>\n  `${fixDecimals({ value: size / 16 })}rem`"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/.storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'storybook-light-theme',\n        dark: 'storybook-dark-theme',\n      },\n      defaultTheme: 'light',\n    }),\n  ],\n}"
      }
    ],
    "functions": [
      {
        "name": "attributes",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "string",
        "jsdoctags": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "attributes",
        "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "any",
        "jsdoctags": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "attributes",
        "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "string",
        "jsdoctags": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "attributesText",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "string",
        "jsdoctags": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "colors",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "any",
        "jsdoctags": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "fixDecimals",
        "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "value",
            "type": "IFixDecimals",
            "deprecated": false,
            "deprecationMessage": "",
            "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
            "destructuredParameter": true
          },
          {
            "name": "dp",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "defaultValue": "2",
            "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
            "destructuredParameter": true
          }
        ],
        "jsdoctags": [
          {
            "name": "value",
            "type": "IFixDecimals",
            "deprecated": false,
            "deprecationMessage": "",
            "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
            "destructuredParameter": true,
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dp",
            "type": "",
            "deprecated": false,
            "deprecationMessage": "",
            "defaultValue": "2",
            "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
            "destructuredParameter": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "gradients",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "any",
        "jsdoctags": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [
      {
        "name": "FabSize",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 199
      },
      {
        "name": "FabType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 199
      },
      {
        "name": "IBmbCalendarEvent",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 187
      },
      {
        "name": "IBmbCalendarHourFormat",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"12\" | \"24\"",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "IBmbCalendarView",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"week\" | \"month\" | \"day\"",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "IBmbLegendVariations",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"normal\" | \"strong\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"brand\"",
        "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "InputType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 199
      },
      {
        "name": "IPositionButtonMenu",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"left\" | \"right\"",
        "file": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "SizeNames",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\" | \"none\" | \"auto\"",
        "file": "projects/ds-ng/src/lib/types/index.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbBadgeComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbCalendarComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbCardComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-legend.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbCheckboxComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbChevronTitleSelectorComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbContainerComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbContainerButtonComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbDividerComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbDotPaginatorComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbFabComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbFocusElementComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbHeaderMobileComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbHomeSectionComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbIconComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbInputComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbInteractiveIconComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbLegendComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbLoaderComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbLogoComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbProgressBarComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbProgressCircleComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbRadialComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbSearchInputComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbSidebarComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbStatCounterComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbSwitchComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbTablesComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbTabsComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbTagComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbThemeComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbTopBarComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbTotpComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbUserImageComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbUserSummaryComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbValueCounterComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "projects/ds-ng/src/lib/directives/button.stories.ts": [
        {
          "name": "customizable",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args,\n  )}</button>`,\n})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "customizable()"
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts": [
        {
          "name": "customizable",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"storybook-colors-playground\"><div style=\"background-color: ${colors(\n    args,\n  )};\"></div> <div style=\"background: ${gradients(args)};\"></div></div>`,\n})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "customizable()"
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts": [
        {
          "name": "customizable",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div ${attributes(args)}>Typography</div>`,\n})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "customizable()"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-card/bmb-legend.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-legend.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <bmb-card [borderRadius]=\"borderRadius\" [padding]=\"padding\" [margin]=\"margin\">\n        <ng-template #header>Optional header</ng-template>\n        <div>Content</div>\n        <ng-template #footer>Optional footer</ng-template>\n      </bmb-card>\n    `,\n  }),\n}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "StoryFn<>",
          "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts": [
        {
          "name": "eventsInDate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "({\n  date,\n  events,\n}: IBmbCalendarRenderEvents): any[] => {\n  const todayEvents = events.filter((event: IBmbCalendarEvent) =>\n    date.hasSame(DateTime.fromISO(event.start), 'day'),\n  );\n\n  return todayEvents;\n}"
        },
        {
          "name": "getMonthDays",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  let weekDays = [];\n\n  for (let day = -1; day <= 38; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
        },
        {
          "name": "getTimeRange",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(event: IBmbCalendarEvent): string => {\n  const start = DateTime.fromISO(event.start);\n  const end = DateTime.fromISO(event.end);\n\n  return `${start.toFormat('hh:mm')} - ${end.toFormat('hh:mm')}`;\n}"
        },
        {
          "name": "getWeekDays",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(date: DateTime): DateTime[] => {\n  const currentWeek = DateTime.fromObject({\n    weekYear: date.year,\n    weekNumber: date.weekNumber,\n  });\n  const firstWeekDay = currentWeek.startOf('week');\n\n  let weekDays = [];\n\n  for (let day = -1; day <= 5; day++) {\n    weekDays.push(firstWeekDay.plus({ days: day }));\n  }\n\n  return weekDays;\n}"
        },
        {
          "name": "orderDayNames",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(\n  days: (string | undefined)[],\n): (string | undefined)[] => {\n  const lastElement: string | undefined = days.pop();\n  days.unshift(lastElement);\n  return days;\n}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts": [
        {
          "name": "FAB_SIZE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "{\n  small: 'small',\n  large: 'large',\n} as const"
        },
        {
          "name": "FAB_TYPE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "{\n  normal: 'normal',\n  extended: 'extended',\n} as const"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts": [
        {
          "name": "INPUT_TYPE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "{\n  normal: 'normal',\n  simple: 'simple',\n} as const"
        }
      ],
      "projects/ds-ng/src/lib/utils/pixelToRem.ts": [
        {
          "name": "pixelToRem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(size: number) =>\n  `${fixDecimals({ value: size / 16 })}rem`"
        }
      ],
      "projects/ds-ng/.storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/.storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'storybook-light-theme',\n        dark: 'storybook-dark-theme',\n      },\n      defaultTheme: 'light',\n    }),\n  ],\n}"
        }
      ]
    },
    "groupedFunctions": {
      "projects/ds-ng/src/lib/directives/button.stories.ts": [
        {
          "name": "attributes",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "string",
          "jsdoctags": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "attributesText",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "string",
          "jsdoctags": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts": [
        {
          "name": "attributes",
          "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "any",
          "jsdoctags": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts": [
        {
          "name": "attributes",
          "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "string",
          "jsdoctags": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts": [
        {
          "name": "colors",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "any",
          "jsdoctags": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "gradients",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "any",
          "jsdoctags": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ds-ng/src/lib/utils/pixelToRem.ts": [
        {
          "name": "fixDecimals",
          "file": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "value",
              "type": "IFixDecimals",
              "deprecated": false,
              "deprecationMessage": "",
              "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
              "destructuredParameter": true
            },
            {
              "name": "dp",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "2",
              "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
              "destructuredParameter": true
            }
          ],
          "jsdoctags": [
            {
              "name": "value",
              "type": "IFixDecimals",
              "deprecated": false,
              "deprecationMessage": "",
              "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
              "destructuredParameter": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dp",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "2",
              "destrucuredGroupId": "3a40c9e9-612d-4944-9d6a-37ba6248969b",
              "destructuredParameter": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts": [
        {
          "name": "FabSize",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 199
        },
        {
          "name": "FabType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 199
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-calendar/types.ts": [
        {
          "name": "IBmbCalendarEvent",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 187
        },
        {
          "name": "IBmbCalendarHourFormat",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"12\" | \"24\"",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        },
        {
          "name": "IBmbCalendarView",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"week\" | \"month\" | \"day\"",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts": [
        {
          "name": "IBmbLegendVariations",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"normal\" | \"strong\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"brand\"",
          "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts": [
        {
          "name": "InputType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 199
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts": [
        {
          "name": "IPositionButtonMenu",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"left\" | \"right\"",
          "file": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ],
      "projects/ds-ng/src/lib/types/index.ts": [
        {
          "name": "SizeNames",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"xs\" | \"s\" | \"m\" | \"l\" | \"xl\" | \"none\" | \"auto\"",
          "file": "projects/ds-ng/src/lib/types/index.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbBadgeComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbCalendarComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-card/bmb-legend.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbCardComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-card/bmb-legend.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbCheckboxComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbChevronTitleSelectorComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbContainerComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbContainerButtonComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbDividerComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbDotPaginatorComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbFabComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbFocusElementComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbHeaderMobileComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbHomeSectionComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbIconComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbInputComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbInteractiveIconComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbLegendComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbLoaderComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbLogoComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbProgressBarComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbProgressCircleComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbRadialComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbSearchInputComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbSidebarComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbStatCounterComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbSwitchComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbTablesComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbTabsComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbTagComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbThemeComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbTopBarComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbTotpComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbUserImageComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbUserSummaryComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbValueCounterComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "projects/ds-ng/.storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbBadgeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-button-group/bmb-button-group.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbButtonGroupComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/20",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/bmb-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-header/bmb-calendar-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-hour-view/bmb-calendar-hour-view.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarHourViewComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-schedule-cards/bmb-calendar-schedule-cards.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarScheduleCardsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-day/bmb-calendar-template-day.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarTemplateDayComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-event/bmb-calendar-template-event.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarTemplateEventComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-month/bmb-calendar-template-month.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarTemplateMonthComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/common/bmb-calendar-template-week/bmb-calendar-template-week.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCalendarTemplateWeekComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBmbCalendarEventClick",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/types.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBmbCalendarRenderEvents",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "eventsInDate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "getMonthDays",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "getTimeRange",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "getWeekDays",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-calendar/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "orderDayNames",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-card/bmb-legend.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbChevronTitleSelectorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbContainerButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbContainerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbDividerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbDotPaginatorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Target",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Target",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FAB_SIZE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FAB_TYPE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbFabComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbFocusElementComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbHeaderMobileComponent",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbHomeSectionComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbInputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/42",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "INPUT_TYPE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbInteractiveIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbLegendComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbLoaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbLogoComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbProgressBarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-progress-bar/bmb-progress-bar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbProgressCircleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbRadialComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-radial/bmb-radial.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbSearchInputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/24",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-search-input/bmb-search-input.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-select/bmb-select-item/bmb-select-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbSelectItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-select/bmb-select.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbSelectComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbSidebarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SidebarElements",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbStatCounterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Props",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Target",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbSwitchComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTablesComponent",
        "coveragePercent": 7,
        "coverageCount": "3/41",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "TableColum",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "TableConfig",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tables/bmb-tables.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTabsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBmbTab",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTagComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbThemeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbToastComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "StorybookToastWrapperComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-item/bmb-top-bar-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTopBarItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar-user-section/bmb-top-bar-user-section.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTopBarUserSectionComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTopBarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/bmb-top-bar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-top-bar/types.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IUserInformation",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTotpComponent",
        "coveragePercent": 0,
        "coverageCount": "0/24",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-totp/bmb-totp.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbUserImageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbUserSummaryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbValueCounterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BmbLayoutItemDirective",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout-item.directive.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IMargin",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/bmb-layout/bmb-layout.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BmbLayoutDirective",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BmbButtonDirective",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributesText",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "customizable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/ds-ng.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DsNgComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/ds-ng.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "DsNgService",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "colors",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "gradients",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "customizable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "customizable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/services/theme.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ThemeService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/services/toast.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ToastService",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IFixDecimals",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "fixDecimals",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/utils/pixelToRem.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "pixelToRem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
