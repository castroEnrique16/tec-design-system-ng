{
    "pipes": [],
    "interfaces": [
        {
            "name": "BmbBadgeProps",
            "id": "interface-BmbBadgeProps-abef728116c53cd9ee6bf7dc106fab813e28167e52089a385d2b74293c6da4933996ce10d47bdb0fc46d3b1985d5d125141869cf3391c20e79de530cb6c0fda5",
            "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\nimport { BmbBadgeComponent } from './bmb-badge.component';\n\ninterface BmbBadgeProps {\n  text: string;\n  grouped: boolean;\n  type: string;\n}\n\nexport default {\n  title: 'Badge',\n  component: BmbBadgeComponent,\n  argTypes: {\n    text: {\n      name: 'Text',\n      control: {\n        type: 'text',\n      },\n      description:\n        'The text of the badge. Width will increase depending of the text.',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    grouped: {\n      name: 'Grouped',\n      control: { type: 'boolean' },\n      description:\n        \"This attribute is used to group all badges into a parent element. By default it is false and you don't need to add it. But if you need it you always have to add it inside a div element.\",\n      table: {\n        defaultValue: { summary: 'false' },\n        type: { summary: 'boolean' },\n      },\n    },\n    type: {\n      name: 'Type',\n      control: {\n        type: 'radio',\n      },\n      options: [\n        'normal',\n        'strong',\n        'success',\n        'info',\n        'warning',\n        'error',\n        'brand',\n      ],\n      table: {\n        type: { summary: 'string' },\n      },\n      description: 'The type of the badge, visual changes.',\n    },\n  },\n  args: {\n    text: 'Badge text',\n    type: 'normal',\n    grouped: false,\n  },\n} as Meta<typeof BmbBadgeComponent>;\n\ntype Story = StoryObj<BmbBadgeProps>;\n\nexport const Default: Story = {};\n",
            "properties": [
                {
                    "name": "grouped",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BmbUserImageProps",
            "id": "interface-BmbUserImageProps-705029774ba74bdc24ef6054d26827068d35145ca043d808708015dbedb2c5f2a8a3f9db0bb47c7c9c51376f9cd9fb0aefd2c3f2882d54f0e993aafb662a74b6",
            "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\nimport { BmbUserImageComponent } from './bmb-user-image.component';\n\ninterface BmbUserImageProps {\n  image: string;\n  altImage: string;\n  size: string;\n}\n\nexport default {\n  title: 'User Image',\n  component: BmbUserImageComponent,\n  argTypes: {\n    image: {\n      name: 'Image source',\n      control: {\n        type: 'text',\n      },\n      description:\n        'The source of the image you want to display can be in your application or in a URL.',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    altImage: {\n      name: 'Image alt text',\n      control: {\n        type: 'text',\n      },\n      description:\n        'The alternative text of image. For more information yoy can take a look at this page: https://www.w3.org/WAI/alt/.',\n      table: {\n        type: { summary: 'string' },\n      },\n    },\n    size: {\n      name: 'Size',\n      control: {\n        type: 'radio',\n      },\n      options: [\n        'desktop-small',\n        'desktop-large',\n        'mobile-small',\n        'mobile-medium',\n        'mobile-large',\n        'mobile-xlarge',\n      ],\n      table: {\n        type: { summary: 'string' },\n      },\n      description: 'The size of the user image, visual changes.',\n    },\n  },\n  args: {\n    image:\n      'https://i0.wp.com/gershenson.mx/wp-content/uploads/2020/08/logo-tec-de-monterrey-e1484853084274.png?ssl=1',\n    altImage: 'Alt image description',\n    size: 'desktop-small',\n  },\n} as Meta<typeof BmbUserImageComponent>;\n\ntype Story = StoryObj<BmbUserImageProps>;\n\nexport const Default: Story = {};\n",
            "properties": [
                {
                    "name": "altImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Props",
            "id": "interface-Props-6f84f63bd2a266dbb2b1de406bf8da808e6d45f9839f2b8776492be1780a7c12c1f8a11b5c276bca905aa77398248616d6f4054eb7ccccfb514fb4695f9fdab5",
            "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeDotIndex?: number;\n  totalDots?: number;\n  targets?: Target[];\n  onDotPress: EventEmitter<number>;\n}\n",
            "properties": [
                {
                    "name": "activeDotIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "onDotPress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<number>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "targets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Target[]",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "totalDots",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Props",
            "id": "interface-Props-5cb6e5b8787c159f4151951fbba666671ac0428c9ed513d7632617769f2fea6a2e958b6ea3fe3abe6bc972e725ed320f2038c8d132574e3965a74d295a18dce6-1",
            "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Props {\n  [key: string]: boolean;\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-5cb6e5b8787c159f4151951fbba666671ac0428c9ed513d7632617769f2fea6a2e958b6ea3fe3abe6bc972e725ed320f2038c8d132574e3965a74d295a18dce6",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "boolean",
                    "line": 1,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Props-1"
        },
        {
            "name": "Target",
            "id": "interface-Target-6f84f63bd2a266dbb2b1de406bf8da808e6d45f9839f2b8776492be1780a7c12c1f8a11b5c276bca905aa77398248616d6f4054eb7ccccfb514fb4695f9fdab5",
            "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeDotIndex?: number;\n  totalDots?: number;\n  targets?: Target[];\n  onDotPress: EventEmitter<number>;\n}\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DsNgService",
            "id": "injectable-DsNgService-a4e7e1153577747318496dc973e5de64d9122fdffb0eb8740507db1480422c503d40c362c2c4650412df24ac2ed2b159476612100db28bd1222acebdf3791f18",
            "file": "projects/ds-ng/src/lib/ds-ng.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DsNgService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-205f0af65a1152b4fa883c5e9b04ef9668652d50d15d6a8263b40ee49b87ba2b8985fbe3a2ad3879798e5eea82c90c5cb2bc98d1f10bbafbf960f4e6f77d0da6",
            "file": "projects/ds-ng/src/lib/services/theme.service.ts",
            "properties": [
                {
                    "name": "theme$",
                    "defaultValue": "this.themeSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "themeSubject",
                    "defaultValue": "new BehaviorSubject<string>('light')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private themeSubject = new BehaviorSubject<string>('light');\n  theme$ = this.themeSubject.asObservable();\n\n  setTheme(theme: string): void {\n    this.themeSubject.next(theme);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BmbButtonDirective",
            "id": "directive-BmbButtonDirective-f336d9ec591c5410edb8d4a92bcd08ff147d36b7517d5f28531c4b9b3b738b5ff07c23f4b97f7fd4bad2d350e5b4f19db9bdf164f639bc8aecd42b8f1e23677c",
            "file": "projects/ds-ng/src/lib/directives/button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  Input,\n  ElementRef,\n  HostBinding,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  OnInit,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { BmbIconComponent } from '../components/bmb-icon/bmb-icon.component';\n\n@Directive({\n  selector: '[bmbButton]',\n})\nexport class BmbButtonDirective implements OnInit, OnChanges {\n  @Input() icon: string = '';\n  @Input() iconPosition: 'left' | 'right' = 'left';\n  @Input() iconCase: boolean = false;\n  @Input() appearance: 'primary' | 'alternative' | 'secondary' | 'destructive' =\n    'primary';\n  @Input() size: 'small' | 'large' = 'small';\n\n  private providedInputs: Set<string> = new Set();\n\n  constructor(\n    private el: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    this.addIcon();\n    this.applyAttributes();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    Object.keys(changes).forEach((input) => {\n      this.providedInputs.add(input);\n    });\n\n    this.applyAttributes();\n    this.addIcon();\n    this.cdr.markForCheck();\n  }\n\n  private applyAttributes() {\n    if (this.providedInputs.has('iconCase')) {\n      if (this.iconCase) {\n        this.renderer.setAttribute(this.el.nativeElement, 'case', 'true');\n      } else {\n        this.renderer.removeAttribute(this.el.nativeElement, 'case');\n      }\n    }\n\n    if (this.providedInputs.has('size') && this.size) {\n      this.renderer.setAttribute(this.el.nativeElement, 'size', this.size);\n    }\n\n    if (this.providedInputs.has('iconPosition')) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'icon-position',\n        this.iconPosition\n      );\n    }\n  }\n\n  @HostBinding('class') get elementClass(): string {\n    return `btn-${this.appearance}`;\n  }\n\n  private addIcon() {\n    this.viewContainerRef.clear();\n\n    if (this.icon) {\n      const iconComponentRef =\n        this.viewContainerRef.createComponent(BmbIconComponent);\n      const iconComponent = iconComponentRef.instance;\n      iconComponent.icon = this.icon;\n\n      if (this.iconPosition === 'right') {\n        this.el.nativeElement.appendChild(\n          iconComponentRef.location.nativeElement\n        );\n      } else {\n        this.el.nativeElement.insertBefore(\n          iconComponentRef.location.nativeElement,\n          this.el.nativeElement.firstChild\n        );\n      }\n    }\n  }\n}\n",
            "selector": "[bmbButton]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"primary\" | \"alternative\" | \"secondary\" | \"destructive\"",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconCase",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'small'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "\"small\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "providedInputs",
                    "defaultValue": "new Set()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<string>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "applyAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "elementClass": {
                    "name": "elementClass",
                    "getSignature": {
                        "name": "elementClass",
                        "type": "string",
                        "returnType": "string",
                        "line": 72
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "BmbAlertComponent",
            "id": "component-BmbAlertComponent-3494ac487579607510bca19bd745543087b7753ca8a08f134e820ed6edc0cb5d386559f28949a140594792bc2326962eb9bbece9dee28ef6ffebb062a2242379",
            "file": "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-alert",
            "styleUrls": [
                "../../../assets/styles/components/_alert.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-alert.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'bmb-alert',\n  templateUrl: './bmb-alert.component.html',\n  styleUrls: ['../../../assets/styles/components/_alert.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbAlertComponent {\n  @Input() type: string = '';\n  @Input() text: string = '';\n\n  constructor() {}\n\n  getClasses(): string[] {\n    const classes: string[] = ['alert'];\n\n    if (this.type) {\n      classes.push('alert-' + this.type);\n    }\n\n    return classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../base/mixins\";\n\n.alert {\n  &-neutral {\n    @include alert(neutral);\n  }\n\n  &-primary {\n    @include alert(primary);\n  }\n\n  &-successful {\n    @include alert(successful);\n  }\n\n  &-warning {\n    @include alert(warning);\n  }\n\n  &-error {\n    @include alert(error);\n  }\n\n  &-event {\n    @include alert(event);\n  }\n}\n",
                    "styleUrl": "../../../assets/styles/components/_alert.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "templateData": "<div [ngClass]=\"getClasses()\">\n  <bmb-icon icon=\"info\" />\n  <span>{{ text }}</span>\n</div>\n"
        },
        {
            "name": "BmbAppButtonComponent",
            "id": "component-BmbAppButtonComponent-07732cc781a5412149ef770586e97ec7d7469e1c7fd972126e2172c623b41164188ae9570c3f3bcda4d49fefd447cf3b4e28c156c5e39a81005adec05758671f",
            "file": "projects/ds-ng/src/lib/components/bmb-app-button/bmb-app-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-app-button",
            "styleUrls": [
                "../../../assets/styles/components/_appButton.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-app-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'bmb-app-button',\n  templateUrl: './bmb-app-button.component.html',\n  styleUrls: ['../../../assets/styles/components/_appButton.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbAppButtonComponent {\n  @Input() text: string = '';\n  @Input() icon: string = '';\n  @Input() image: string = '';\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../tokens/colors\";\n@import \"../base/rem\";\n@import \"../base/measures\";\n@import \"../base/fonts\";\n\n.app-button {\n  align-items: center;\n  box-sizing: border-box;\n  display: flex;\n  min-height: rem_calc(40);\n  max-width: rem_calc(210);\n  width: 100%;\n\n  &-box {\n    align-items: center;\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    width: rem_calc(40);\n  }\n\n  &-icon,\n  &-image {\n    height: rem_calc(30);\n    margin-right: $spacing-size-md;\n    width: rem_calc(30);\n  }\n\n  &-icon {\n    color: RGBA(var(--color-charade-950));\n    font-size: rem_calc(30);\n  }\n\n  &-text {\n    @include font(3, medium);\n    color: RGBA(var(--color-charade-950));\n    flex: 1;\n    text-align: left;\n  }\n}\n",
                    "styleUrl": "../../../assets/styles/components/_appButton.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "templateData": "<div class=\"app-button\">\n  <div class=\"app-button-box\">\n    <bmb-icon class=\"app-button-icon\" icon=\"{{ icon }}\" *ngIf=\"!image\" />\n    <img *ngIf=\"image\" [src]=\"image\" alt=\"text\" class=\"app-button-image\" />\n  </div>\n  <span class=\"app-button-text\">{{ text }}</span>\n</div>\n"
        },
        {
            "name": "BmbBadgeComponent",
            "id": "component-BmbBadgeComponent-a3c14326d13b79db9ac5d7643ec478ebaa1132b4496bb1aa0cbecd8eaaa81b1e9279cfab12a18f7fba79e9eafc2fe0ff9f359cdc4953099f0354fbeef782b256",
            "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-badge",
            "styleUrls": [
                "../../../assets/styles/components/_badge.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-badge.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "grouped",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-badge',\n  templateUrl: './bmb-badge.component.html',\n  styleUrls: ['../../../assets/styles/components/_badge.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbBadgeComponent implements AfterViewInit {\n  @Input() type: string = '';\n  @Input() text: string = '';\n  @Input() grouped: boolean = false;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector('.badge-grouped');\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'badge-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['badge'];\n\n    if (this.type) {\n      classes.push('badge-' + this.type);\n    }\n\n    return classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../base/mixins\";\n@import \"../base/measures\";\n\n.badge {\n  &-grouped {\n    display: flex;\n    flex-flow: row wrap;\n    gap: $spacing-size-base;\n\n    @include media-query(768) {\n      gap: $spacing-size-md;\n    }\n  }\n\n  &-normal {\n    @include badge(normal);\n  }\n\n  &-strong {\n    @include badge(strong);\n  }\n\n  &-success {\n    @include badge(success);\n  }\n\n  &-info {\n    @include badge(info);\n  }\n\n  &-warning {\n    @include badge(warning);\n  }\n\n  &-error {\n    @include badge(error);\n  }\n\n  &-brand {\n    @include badge(brand);\n  }\n}\n",
                    "styleUrl": "../../../assets/styles/components/_badge.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div [ngClass]=\"getClasses()\">\n  <span>{{ text }}</span>\n</div>\n"
        },
        {
            "name": "BmbDividerComponent",
            "id": "component-BmbDividerComponent-ac88e134d53190d56c906807adb789c77218d1717fa6324e51911e5fffad7035f39ce5ae6190b30f7d7c31fa00b459d77b707499dae3e62f86c66902cfa129b3",
            "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-divider",
            "styleUrls": [
                "../../../assets/styles/components/_divider.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-divider.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "styles",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'bmb-divider',\n  templateUrl: './bmb-divider.component.html',\n  styleUrls: ['../../../assets/styles/components/_divider.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbDividerComponent {\n  @Input() size: string = '';\n  @Input() styles: string = '';\n  @Input() type: string = '';\n\n  constructor() {}\n\n  getClasses(): string[] {\n    const classes: string[] = ['divider'];\n\n    if (this.type) {\n      classes.push('divider-' + this.type);\n    }\n\n    if (this.size) {\n      classes.push('divider-' + this.size);\n    }\n\n    if (this.styles) {\n      classes.push('divider-' + this.styles);\n    }\n\n    return classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../tokens/colors\";\n@import \"../base/rem\";\n@import \"../base/measures\";\n\n.divider {\n  border: rem_calc(1) solid RGBA(var(--color-charade-50));\n  margin: $spacing-size-base 0;\n  width: 100%;\n\n  &-2 {\n    border-width: rem_calc(2);\n  }\n\n  &-3 {\n    border-width: rem_calc(3);\n  }\n\n  &-4 {\n    border-width: rem_calc(4);\n  }\n\n  &-5 {\n    border-width: rem_calc(5);\n  }\n\n  &-white {\n    border-color: RGBA(var(--color-white-primary));\n  }\n\n  &-primary {\n    border-color: RGBA(var(--color-mariner-500));\n  }\n\n  &-light {\n    border-color: RGBA(var(--color-charade-200));\n  }\n\n  &-secondary {\n    border-color: RGBA(var(--color-charade-300));\n  }\n\n  &-success {\n    border-color: RGBA(var(--color-green-tint));\n  }\n\n  &-info {\n    border-color: RGBA(var(--color-purple-primary));\n  }\n\n  &-warning {\n    border-color: RGBA(var(--color-yellow-primary));\n  }\n\n  &-danger {\n    border-color: RGBA(var(--color-red-primary));\n  }\n\n  &-dark {\n    border-color: RGBA(var(--color-charade-950));\n  }\n\n  &-dotted {\n    border-style: dotted;\n  }\n\n  &-dashed {\n    border-style: dashed;\n  }\n}\n",
                    "styleUrl": "../../../assets/styles/components/_divider.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "templateData": "<div class=\"divider\" [ngClass]=\"getClasses()\"></div>\n"
        },
        {
            "name": "BmbDotPaginatorComponent",
            "id": "component-BmbDotPaginatorComponent-6a745a2a485b7474dd77452586e1398e14f7a5a4e76924effccc7ab401b561214dff94cd636c6126fd105b7deabe669a6c034191b3b17e6e9be38f43c3c86cbd",
            "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-dot-paginator",
            "styleUrls": [
                "../../../assets/styles/components/_dotPaginator.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-dot-paginator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeDotIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "targets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Target[]",
                    "decorators": []
                },
                {
                    "name": "totalDots",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onDotPress",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getDotsArray",
                    "args": [],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDotClicked",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Props, Target } from './bmb-dot-paginator.interface';\n\n@Component({\n  selector: 'bmb-dot-paginator',\n  templateUrl: './bmb-dot-paginator.component.html',\n  styleUrls: ['../../../assets/styles/components/_dotPaginator.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbDotPaginatorComponent {\n  @Input() activeDotIndex?: number = 0;\n  @Input() totalDots?: number = 0;\n  @Input() targets: Target[] = [];\n  @Output() onDotPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getDotsArray(): number[] {\n    return new Array(this.totalDots || 0).fill(0).map((_, i) => i);\n  }\n\n  onDotClicked(index: number): void {\n    this.activeDotIndex = index;\n    this.onDotPress.emit(index);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../tokens/colors\";\n@import \"../base/rem\";\n\n.dot-paginator {\n  align-items: center;\n  background-color: RGBA(var(--color-charade-200));\n  border-radius: rem_calc(40);\n  display: flex;\n  justify-content: center;\n  list-style-type: none;\n  margin: 0;\n  overflow: hidden;\n  padding: rem_calc(12);\n  position: relative;\n  width: fit-content;\n\n  .dot {\n    background-color: RGBA(var(--color-white-primary));\n    border-radius: 100%;\n    cursor: pointer;\n    height: rem_calc(6);\n    margin: 0 rem_calc(8);\n    position: relative;\n    width: rem_calc(6);\n\n    &.active {\n      background-color: RGBA(var(--color-mariner-500));\n      border-radius: rem_calc(30);\n      width: rem_calc(16);\n    }\n\n    ::marker {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "../../../assets/styles/components/_dotPaginator.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ol class=\"dot-paginator\">\n  <li\n    *ngFor=\"let i of getDotsArray()\"\n    [attr.data-bs-target]=\"targets[i]?.target || ''\"\n    [attr.data-bs-slide-to]=\"i\"\n    [ngClass]=\"{ dot: true, active: activeDotIndex === i }\"\n    (click)=\"onDotClicked(i)\"\n  ></li>\n</ol>\n"
        },
        {
            "name": "BmbIconComponent",
            "id": "component-BmbIconComponent-d91ee1bfa6cdd4c102ac98287bdf0c42070f1e6f69b9c2de061db6b0cd39191f9f9210959ecf1f5abe985f8d6ce62eecb5af13c28415ffab5591c6fb19f4b8c9",
            "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "'face'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bmb-icon',\n  templateUrl: './bmb-icon.component.html',\n})\nexport class BmbIconComponent {\n  @Input() icon: string = 'face';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<i class=\"material-icons\">{{ icon }}</i>\n"
        },
        {
            "name": "BmbIconTextInputComponent",
            "id": "component-BmbIconTextInputComponent-39b3c8b0b8ddda050b0ab032715a4c170ad2a7752dd1aed9661e7e631e2ba2182ab26aa47b35c6ab6b8337690af209279407a77b0eeba906efe26976b660c50c",
            "file": "projects/ds-ng/src/lib/components/bmb-icon-text-input/bmb-icon-text-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[bmb-icon-text-input]",
            "styleUrls": [
                "../../../assets/styles/components/_icon-text-input.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-icon-text-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.ng-invalid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, HostBinding, Optional, Input, ViewEncapsulation, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: '[bmb-icon-text-input]',\n  templateUrl: './bmb-icon-text-input.component.html',\n  styleUrls: ['../../../assets/styles/components/_icon-text-input.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class BmbIconTextInputComponent {\n  // @Input() text: string = '';\n  // @Input() icon: string = '';\n  // @Input() image: string = '';\n\n  @HostBinding('class.ng-invalid')\n  get invalid(): boolean {\n    return this._ngControl?.invalid ?? false;\n  }\n\n  constructor(@Optional() private readonly _ngControl?: NgControl){\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../tokens/colors\";\n@import \"../base/rem\";\n@import \"../base/measures\";\n@import \"../base/fonts\";\n\n:host {\n  @include font(4, regular);\n  border: rem_calc(1) solid RGBA(var(--color-charade-100));\n  background-color: RGBA(var(--color-charade-100));\n  box-sizing: border-box;\n  border-radius: rem_calc(3);\n  padding: rem_calc(8);\n  // padding: rem_calc(8) rem_calc(8) rem_calc(8) rem_calc(8);\n  min-height: rem_calc(38);\n  width: 100%;\n  height: 100%;\n\n  &:focus {\n    outline: none;\n    border-color: RGBA(var(--color-blue-primary));\n    box-shadow: rem_calc(0) rem_calc(0) rem_calc(2) rem_calc(2)\n      RGBA(var(--color-marine-900));\n  }\n\n  &::placeholder {\n    color: RGBA(var(--color-charade-300));\n  }\n\n  &:disabled:focus {\n    outline: none;\n  }\n\n  &.ng-invalid {\n    border-color: RGBA(var(--color-red-primary));\n  }\n}\n",
                    "styleUrl": "../../../assets/styles/components/_icon-text-input.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "invalid": {
                    "name": "invalid",
                    "getSignature": {
                        "name": "invalid",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 17
                    }
                }
            },
            "templateData": "<!-- <div class=\"bmb-input-wrapper\">\n    <input bmb-text-input type=\"search\" placeholder=\"Search\" />\n    <bmb-icon class=\"app-button-icon\" icon=\"{{ icon }}\" *ngIf=\"!image\" />\n    <svg\n       xmlns=\"http://www.w3.org/2000/svg\"\n       class=\"bmb-input-icon\"\n       viewBox=\"0 0 20 20\"\n       fill=\"currentColor\"\n    >\n       <path\n          fill-rule=\"evenodd\"\n          d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n          clip-rule=\"evenodd\"\n       />\n    </svg>\n </div> -->"
        },
        {
            "name": "BmbTextInputComponent",
            "id": "component-BmbTextInputComponent-053c3e13175403bc2ed6ee198f6a1eaffbdae65c12ec544f075126773e2e9f93180ac1564a74c02634fd1ecbfe978aff48e672d29d7fc37e6b3bc8654b915926",
            "file": "projects/ds-ng/src/lib/components/bmb-text-input/bmb-text-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[bmb-text-input]",
            "styleUrls": [
                "../../../assets/styles/components/_text-inputs.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-text-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.ng-invalid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, HostBinding, Optional, Input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: '[bmb-text-input]',\n  templateUrl: './bmb-text-input.component.html',\n  styleUrls: ['../../../assets/styles/components/_text-inputs.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbTextInputComponent {\n\n  @HostBinding('class.ng-invalid')\n  get invalid(): boolean {\n    return this._ngControl?.invalid ?? false;\n  }\n\n  constructor(@Optional() private readonly _ngControl?: NgControl){\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../tokens/colors\";\n@import \"../base/rem\";\n@import \"../base/measures\";\n@import \"../base/fonts\";\n\n// Text input as directive\n:host {\n  @include font(4, regular);\n  border: rem_calc(1) solid RGBA(var(--color-charade-100));\n  background-color: RGBA(var(--color-charade-100));\n  box-sizing: border-box;\n  border-radius: rem_calc(3);\n  padding: rem_calc(8);\n  // padding: rem_calc(8) rem_calc(8) rem_calc(8) rem_calc(8);\n  min-height: rem_calc(38);\n  width: 100%;\n  height: 100%;\n\n  &:focus {\n    outline: none;\n    border-color: RGBA(var(--color-blue-primary));\n    box-shadow: rem_calc(0) rem_calc(0) rem_calc(2) rem_calc(2)\n      RGBA(var(--color-marine-900));\n  }\n\n  &::placeholder {\n    color: RGBA(var(--color-charade-300));\n  }\n\n  &:disabled:focus {\n    outline: none;\n  }\n\n  &.ng-invalid {\n    border-color: RGBA(var(--color-red-primary));\n  }\n}\n\n// Styles for error message in input\n.bmb-text-error {\n  @include font(2, regular);\n  padding: rem_calc(8);\n\n  *:first-child {\n    color: RGBA(var(--color-red-primary));\n  }\n}\n\n.bmb-text-msg {\n  @include font(2, regular);\n  padding: rem_calc(8);\n\n  *:first-child {\n    color: RGBA(var(--color-black-primary));\n  }\n}\n\n.bmb-form-label {\n  @include font(3, medium);\n  display: block;\n  padding: rem_calc(4);\n}\n\nbmb-icon-text-input {\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  > input {\n    border: rem_calc(1) solid RGBA(var(--color-charade-100));\n    background-color: RGBA(var(--color-charade-100));\n    box-sizing: border-box;\n    border-radius: rem_calc(3);\n    padding: rem_calc(8) rem_calc(8) rem_calc(8) rem_calc(35);\n    min-height: rem_calc(38);\n    width: 100%;\n    height: 100%;\n\n    &:focus {\n      outline: none;\n      border-color: RGBA(var(--color-blue-primary));\n      box-shadow: rem_calc(0) rem_calc(0) rem_calc(2) rem_calc(2)\n        RGBA(var(--color-marine-900));\n    }\n\n    &::placeholder {\n      color: RGBA(var(--color-charade-300));\n    }\n\n    &:disabled:focus {\n      outline: none;\n    }\n\n    &.ng-invalid {\n      border-color: RGBA(var(--color-red-primary));\n    }\n  }\n\n  > i {\n    color: RGBA(var(--color-marine-900));\n    position: absolute;\n    width: rem_calc(20);\n    height: rem_calc(20);\n    left: rem_calc(5);\n    top: 50%;\n    transform: translateY(-50%);\n  }\n}\n\n// .bmb-text-input{\n//     @include font(4, regular);\n//     border: rem_calc(1) solid RGBA(var(--color-charade-100));\n//     background-color: RGBA(var(--color-charade-100));\n//     box-sizing: border-box;\n//     border-radius: rem_calc(3);\n//     padding: rem_calc(8) rem_calc(8) rem_calc(8) rem_calc(35);\n//     min-height: rem_calc(38);\n//     width: 100%;\n//     height: 100%;\n\n//     &:focus{\n//         outline: none;\n//         border-color: RGBA(var(--color-blue-primary)) ;\n//         box-shadow: rem_calc(0) rem_calc(0) rem_calc(2) rem_calc(2) RGBA(var(--color-marine-900));\n//     }\n\n//     &::placeholder{\n//         color: RGBA(var(--color-charade-300));\n//     }\n\n//     &:disabled:focus {\n//         outline: none;\n//     }\n\n//     &.ng-invalid {\n//         border-color: RGBA(var(--color-red-primary));\n//     }\n// }\n\n.bmb-input-icon {\n  color: RGBA(var(--color-marine-900));\n  // position: absolute;\n  width: rem_calc(20);\n  height: rem_calc(20);\n  left: rem_calc(12);\n  top: 50%;\n  transform: translateY(-50%);\n}\n",
                    "styleUrl": "../../../assets/styles/components/_text-inputs.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_ngControl",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "invalid": {
                    "name": "invalid",
                    "getSignature": {
                        "name": "invalid",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 13
                    }
                }
            },
            "templateData": ""
        },
        {
            "name": "BmbThemeComponent",
            "id": "component-BmbThemeComponent-ac0dfa809336fc4e9b41646cfa108d98105009f1512497e7216d17b20719cf10ddac3450ec3bd9b4a9bb44315bb7ae4dacc3b485b8868bb38ac03b3a9494bb37",
            "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-theme",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./bmb-theme.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedTheme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "applyTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onThemeChange",
                    "args": [
                        {
                            "name": "newTheme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newTheme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from '../../services/theme.service';\n\n@Component({\n  selector: 'bmb-theme',\n  templateUrl: './bmb-theme.component.html',\n})\nexport class BmbThemeComponent implements OnInit {\n  selectedTheme: string = 'light';\n\n  constructor(private themeService: ThemeService) {}\n\n  ngOnInit(): void {\n    this.themeService.theme$.subscribe((theme) => {\n      this.applyTheme(theme);\n    });\n  }\n\n  applyTheme(theme: string): void {\n    document.documentElement.setAttribute('data-theme', theme);\n  }\n\n  onThemeChange(newTheme: string): void {\n    this.selectedTheme = newTheme;\n    this.themeService.setTheme(this.selectedTheme);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bmb-theme\">\n  <button\n    (click)=\"onThemeChange('dark')\"\n    [class.selected]=\"selectedTheme === 'dark'\"\n  >\n    Dark\n  </button>\n  <button\n    (click)=\"onThemeChange('light')\"\n    [class.selected]=\"selectedTheme === 'light'\"\n  >\n    Light\n  </button>\n  <button\n    (click)=\"onThemeChange('blue')\"\n    [class.selected]=\"selectedTheme === 'blue'\"\n  >\n    Blue\n  </button>\n</div>\n"
        },
        {
            "name": "BmbUserImageComponent",
            "id": "component-BmbUserImageComponent-b2906caf1ba27c97ba8033ec11d288113f88d73b967d7e8d14d7878069584b49c9287495c17057946098015e1a6e809ac402581412385943bc070e5cc5c3d212",
            "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-user-image",
            "styleUrls": [
                "../../../assets/styles/components/_userImage.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./bmb-user-image.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "altImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "Props",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Props } from './bmb-user-image.interface';\n\n@Component({\n  selector: 'bmb-user-image',\n  templateUrl: './bmb-user-image.component.html',\n  styleUrls: ['../../../assets/styles/components/_userImage.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BmbUserImageComponent {\n  @Input() size: string = '';\n  @Input() image: string = '';\n  @Input() altImage: string = '';\n\n  constructor() {}\n\n  getClasses(): Props {\n    let classes: Props = {\n      'user-image': true,\n    };\n\n    if (this.size) {\n      classes[this.size] = true;\n    }\n\n    return classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../tokens/colors\";\n@import \"../base/rem\";\n\n.user-image {\n  align-items: center;\n  background-color: RGBA(var(--color-mariner-900));\n  border-radius: 100%;\n  display: flex;\n  height: rem_calc(50);\n  justify-content: center;\n  overflow: hidden;\n  width: rem_calc(50);\n\n  img {\n    height: 100%;\n    width: 100%;\n  }\n\n  &.mobile-small {\n    height: rem_calc(32);\n    width: rem_calc(32);\n  }\n\n  &.mobile-medium {\n    height: rem_calc(64);\n    width: rem_calc(64);\n  }\n\n  &.mobile-large {\n    height: rem_calc(100);\n    width: rem_calc(100);\n  }\n\n  &.mobile-xlarge {\n    height: rem_calc(200);\n    width: rem_calc(200);\n  }\n\n  &.desktop-small {\n    height: rem_calc(56);\n    width: rem_calc(56);\n  }\n\n  &.desktop-large {\n    height: rem_calc(160);\n    width: rem_calc(160);\n  }\n}\n",
                    "styleUrl": "../../../assets/styles/components/_userImage.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": [],
            "templateData": "<div [ngClass]=\"getClasses()\">\n  <img [src]=\"image\" [alt]=\"altImage\" />\n</div>\n"
        },
        {
            "name": "DsNgComponent",
            "id": "component-DsNgComponent-e5efb1b6556ee93e3913add9b5651e7b82e4636efa0258c5ec4004d9377daadf8ed4ee72e8c9a31f2e6c5a39cb5057a783dea7b30a455c96c346b954f6d418cd",
            "file": "projects/ds-ng/src/lib/ds-ng.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bmb-ds-ng",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<p>\n  ds-ng works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bmb-ds-ng',\n  template: `\n    <p>\n      ds-ng works!\n    </p>\n  `,\n  styles: ``\n})\nexport class DsNgComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": []
        }
    ],
    "modules": [
        {
            "name": "DsNgModule",
            "id": "module-DsNgModule-121201a597d2aa7c25f52566fec6cde913c2155076f5a371051a773821e5467d13c5629b0f5d297baa65d3ad2ad0b65072366306174ff6b229c07be316b38c71",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ds-ng/src/lib/ds-ng.module.ts",
            "methods": [
                {
                    "name": "ngDoBootsrap",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "sourceCode": "import { NgModule, Injector, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from './directives/button.directive';\nimport { DsNgComponent } from './ds-ng.component';\nimport { BmbIconComponent } from './components/bmb-icon/bmb-icon.component';\nimport { BmbAlertComponent } from './components/bmb-alert/bmb-alert.component';\nimport { BmbThemeComponent } from './components/bmb-theme/bmb-theme.component';\nimport { BmbBadgeComponent } from './components/bmb-badge/bmb-badge.component';\nimport { BmbDividerComponent } from './components/bmb-divider/bmb-divider.component';\nimport { BmbUserImageComponent } from './components/bmb-user-image/bmb-user-image.component';\nimport { BmbAppButtonComponent } from './components/bmb-app-button/bmb-app-button.component';\nimport { BmbTextInputComponent } from './components/bmb-text-input/bmb-text-input.component';\nimport { BmbIconTextInputComponent } from './components/bmb-icon-text-input/bmb-icon-text-input.component';\nimport { BmbDotPaginatorComponent } from './components/bmb-dot-paginator/bmb-dot-paginator.component';\n\n@NgModule({\n  declarations: [\n    DsNgComponent,\n    BmbIconComponent,\n    BmbThemeComponent,\n    BmbAlertComponent,\n    BmbBadgeComponent,\n    BmbButtonDirective,\n    BmbDividerComponent,\n    BmbTextInputComponent,\n    BmbUserImageComponent,\n    BmbAppButtonComponent,\n    BmbDotPaginatorComponent,\n    BmbIconTextInputComponent,\n  ],\n  imports: [CommonModule, FormsModule],\n  exports: [\n    DsNgComponent,\n    BmbIconComponent,\n    BmbBadgeComponent,\n    BmbAlertComponent,\n    BmbThemeComponent,\n    BmbButtonDirective,\n    BmbDividerComponent,\n    BmbUserImageComponent,\n    BmbTextInputComponent,\n    BmbAppButtonComponent,\n    BmbDotPaginatorComponent,\n    BmbIconTextInputComponent,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class DsNgModule {\n  constructor(private injector: Injector) {}\n\n  ngDoBootsrap() {\n    const custonElement = createCustomElement(BmbIconTextInputComponent, {\n      injector: this.injector,\n    });\n    customElements.define('bmb-icon-text-input', custonElement);\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BmbAlertComponent"
                        },
                        {
                            "name": "BmbAppButtonComponent"
                        },
                        {
                            "name": "BmbBadgeComponent"
                        },
                        {
                            "name": "BmbButtonDirective"
                        },
                        {
                            "name": "BmbDividerComponent"
                        },
                        {
                            "name": "BmbDotPaginatorComponent"
                        },
                        {
                            "name": "BmbIconComponent"
                        },
                        {
                            "name": "BmbIconTextInputComponent"
                        },
                        {
                            "name": "BmbTextInputComponent"
                        },
                        {
                            "name": "BmbThemeComponent"
                        },
                        {
                            "name": "BmbUserImageComponent"
                        },
                        {
                            "name": "DsNgComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BmbAlertComponent"
                        },
                        {
                            "name": "BmbAppButtonComponent"
                        },
                        {
                            "name": "BmbBadgeComponent"
                        },
                        {
                            "name": "BmbButtonDirective"
                        },
                        {
                            "name": "BmbDividerComponent"
                        },
                        {
                            "name": "BmbDotPaginatorComponent"
                        },
                        {
                            "name": "BmbIconComponent"
                        },
                        {
                            "name": "BmbIconTextInputComponent"
                        },
                        {
                            "name": "BmbTextInputComponent"
                        },
                        {
                            "name": "BmbThemeComponent"
                        },
                        {
                            "name": "BmbUserImageComponent"
                        },
                        {
                            "name": "DsNgComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "customizable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args\n  )}</button>`,\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "customizable()"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ds-ng/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "attributes",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "attributesText",
                "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbAlertComponent>",
                "file": "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbBadgeProps>",
                "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BmbUserImageProps>",
                "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ds-ng/src/lib/directives/button.stories.ts": [
                {
                    "name": "customizable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args\n  )}</button>`,\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "customizable()"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "projects/ds-ng/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ds-ng/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ds-ng/src/lib/directives/button.stories.ts": [
                {
                    "name": "attributes",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "attributesText",
                    "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbAlertComponent>",
                    "file": "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbBadgeProps>",
                    "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BmbUserImageProps>",
                    "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ds-ng/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbAlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-alert/bmb-alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-app-button/bmb-app-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbAppButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbBadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BmbBadgeProps",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbDividerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbDotPaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Props",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Target",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-icon-text-input/bmb-icon-text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbIconTextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-text-input/bmb-text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbTextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbThemeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BmbUserImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Props",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BmbUserImageProps",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BmbButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "attributesText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customizable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/ds-ng.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DsNgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/ds-ng.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DsNgService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ds-ng/src/lib/services/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}