{
  "pipes": [],
  "interfaces": [
    {
      "name": "Props",
      "id": "interface-Props-0be329acc963ff455ffdf9172d95c844a313ba429c49a8f0645bca85aef6b06ecb11a573d85443a1730e1fcc45ddd93688a6b7591932b2eff126b81c31779683",
      "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeStepIndex?: number;\n  totalSteps?: number;\n  targets?: Target[];\n  onStepsPress: EventEmitter<number>;\n}\n",
      "properties": [
        {
          "name": "activeStepIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "onStepsPress",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "EventEmitter<number>",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "targets",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Target[]",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "totalSteps",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "SidebarElements",
      "id": "interface-SidebarElements-0d082ed2c34577dfebcb8c1a9c31df1872f33deec8c90a84e8138404bc6529c99c4261b0384ea9fcf8f84cff110b67c9ff18b985e9a70a6cff63d26cd9f67e13",
      "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface SidebarElements {\n    icon: string,\n    title: string,\n    link: string,\n}",
      "properties": [
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "link",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Tab",
      "id": "interface-Tab-213b5ea786d38adf625ac647e84e341f4e3f151c1b9502ff0984bcffafc71b9a244f41a43b3afa8153801e89e7fb1479820a1224d39de7962be59542c60f3d47",
      "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Tab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-tabs',\n  templateUrl: './bmb-tabs.component.html',\n  styleUrls: ['./bmb-tabs.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTabsComponent implements OnInit, AfterViewInit {\n  @Input() format: string = '';\n  @Input() tabs: Tab[] = [];\n  @Output() selected = new EventEmitter<Tab>();\n\n  activeTabIndex: number = 0;\n  @ViewChild('tabsItems') tabsItems!: ElementRef;\n\n  ngOnInit(): void {\n    const initialActiveTab = this.tabs.findIndex((tab) => tab.isActive);\n    this.activeTabIndex = initialActiveTab !== -1 ? initialActiveTab : 0;\n    this.tabs.forEach(\n      (tab, index) => (tab.isActive = index === this.activeTabIndex)\n    );\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.showActiveTab(), 100);\n  }\n\n  selectTab(selectedId: number): void {\n    const tabIndex = this.tabs.findIndex((tab) => tab.id === selectedId);\n    if (tabIndex !== -1) {\n      this.tabs.forEach((tab) => (tab.isActive = false));\n      this.tabs[tabIndex].isActive = true;\n      this.activeTabIndex = tabIndex;\n      const activeTab = this.tabs[tabIndex];\n      this.selected.emit(activeTab);\n      setTimeout(() => this.showActiveTab(), 0);\n    }\n  }\n\n  showActiveTab(): void {\n    requestAnimationFrame(() => {\n      const tabsElement = this.tabsItems.nativeElement;\n      const activeTabElement = tabsElement.children[this.activeTabIndex];\n\n      if (activeTabElement) {\n        const containerWidth = tabsElement.offsetWidth;\n        const activeTabWidth = activeTabElement.offsetWidth;\n        const activeTabOffsetLeft = activeTabElement.offsetLeft;\n\n        const scrollOffset =\n          activeTabOffsetLeft - (containerWidth - activeTabWidth) / 2;\n\n        tabsElement.scrollTo({\n          left: scrollOffset,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n}\n",
      "properties": [
        {
          "name": "badge",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "isActive",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 18
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Target",
      "id": "interface-Target-f2c3d13fcf4fd6183ec16ed094945329f06423ca7483317bd35b40b174de58d51ac8b2c617a6cf24a3f7aca7974b78604de4aff3d3f914fbfd2720c5feb49d40",
      "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'bmb-dot-paginator',\n  standalone: true,\n  styleUrl: './bmb-dot-paginator.component.scss',\n  imports: [CommonModule],\n  templateUrl: './bmb-dot-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDotPaginatorComponent {\n  @Input() activeDotIndex?: number = 0;\n  @Input() totalDots?: number = 0;\n  @Input() targets: Target[] = [];\n  @Input() appearance: string = '';\n  @Output() onDotPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getDotsArray(): number[] {\n    return new Array(this.totalDots ?? 0).fill(0).map((_, i) => i);\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_dot_paginator'];\n\n    if (this.appearance) {\n      classes.push('bmb_dot_paginator-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  onDotClicked(index: number): void {\n    this.activeDotIndex = index;\n    this.onDotPress.emit(index);\n  }\n}\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "Target",
      "id": "interface-Target-ffb933431ea34d481e15828994488a1d5d39586edbb796a4b01be09ea01819c25f1cb7b81646b06e5328e519194ae622d8ae95ddc06888bdb97851a760eb7f9a-1",
      "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Meta, StoryObj } from '@storybook/angular';\nimport { BmbDotPaginatorComponent } from './bmb-dot-paginator.component';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport default {\n  title: 'Micro Componentes/Dot Paginator',\n  component: BmbDotPaginatorComponent,\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbDotPaginatorComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbDotPaginatorComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\n\nexport class Component {\n  myActiveDotIndex: number = 0;\n  myTotalDots: number = 5;\n  myTargets: Target[] = [\n    { target: '#item1', index: 0 },\n    { target: '#item2', index: 1 },\n  ];\n\n  handleDotPress(index: number): void {\n    this.myActiveDotIndex = index;\n  }\n}\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    appearance: {\n      name: 'Appearance',\n      control: {\n        type: 'radio',\n      },\n      options: ['primary', 'secondary'],\n      description:\n        'The style of the dot paginator. Is not neccesary to add the \"primary\" style.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'primary' },\n        type: { summary: 'string' },\n      },\n    },\n    activeDotIndex: {\n      name: 'Active dot index',\n      control: 'number',\n      description: 'Index of the active dot.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 0 },\n        type: { summary: 'number' },\n      },\n    },\n    totalDots: {\n      name: 'Total Dots',\n      control: 'number',\n      description: 'Total number of dots.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 5 },\n        type: { summary: 'number' },\n      },\n    },\n    targets: {\n      name: 'Targets',\n      control: 'object',\n      description: 'Target objects for each dot.',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'optional' },\n        type: { summary: 'Target[]' },\n      },\n    },\n    onDotPress: {\n      name: 'On Dot Press',\n      control: {\n        type: '',\n      },\n      description:\n        'This handler can be used to perform a specific interaction with each dot.',\n      table: {\n        category: 'Events',\n        type: { summary: '(onDotPress)=\"yourFunction($event)\"' },\n      },\n    },\n  },\n\n  args: {\n    activeDotIndex: 0,\n    totalDots: 5,\n    targets: [\n      { target: '#item1', index: 0 },\n      { target: '#item2', index: 1 },\n    ],\n    onDotPress: (index: number) => {\n      window.alert(index);\n    },\n  },\n} as Meta<typeof BmbDotPaginatorComponent>;\n\ntype Story = StoryObj<BmbDotPaginatorComponent>;\n\nexport const Default: Story = {};\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "Target-1"
    },
    {
      "name": "Target",
      "id": "interface-Target-0be329acc963ff455ffdf9172d95c844a313ba429c49a8f0645bca85aef6b06ecb11a573d85443a1730e1fcc45ddd93688a6b7591932b2eff126b81c31779683-2",
      "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { EventEmitter } from '@angular/core';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\nexport interface Props {\n  activeStepIndex?: number;\n  totalSteps?: number;\n  targets?: Target[];\n  onStepsPress: EventEmitter<number>;\n}\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 2,
      "duplicateName": "Target-2"
    }
  ],
  "injectables": [
    {
      "name": "DsNgService",
      "id": "injectable-DsNgService-a4e7e1153577747318496dc973e5de64d9122fdffb0eb8740507db1480422c503d40c362c2c4650412df24ac2ed2b159476612100db28bd1222acebdf3791f18",
      "file": "projects/ds-ng/src/lib/ds-ng.service.ts",
      "properties": [],
      "methods": [],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DsNgService {\n\n  constructor() { }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 6
      },
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "ThemeService",
      "id": "injectable-ThemeService-125d8ba1a9deba0bd25d66629ae6cae54cc118c61a9e72581c25ed27bc4ea4de63e468eb706abf3b7b5293d35ebdda07e2d51d39e4ad98ee612b715e082c22ee",
      "file": "projects/ds-ng/src/lib/services/theme.service.ts",
      "properties": [
        {
          "name": "theme$",
          "defaultValue": "this.themeSubject.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "themeSubject",
          "defaultValue": "new BehaviorSubject<string>(\n    localStorage.getItem('theme') || 'light'\n  )",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "setTheme",
          "args": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private themeSubject = new BehaviorSubject<string>(\n    localStorage.getItem('theme') || 'light'\n  );\n  theme$ = this.themeSubject.asObservable();\n\n  setTheme(theme: string): void {\n    this.themeSubject.next(theme);\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    },
    {
      "name": "ToastService",
      "id": "injectable-ToastService-d15917c926925fffde10fc52717e682a9543cc1913fbe4a085ce0513851e78b90b31268ef81ee30f9089a24f17f0bf8b2e018bf27fb5b9edd8d9c5636ead3938",
      "file": "projects/ds-ng/src/lib/services/toast.service.ts",
      "properties": [
        {
          "name": "isOpen$",
          "defaultValue": "this.isOpenSubject.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "isOpenSubject",
          "defaultValue": "new BehaviorSubject<boolean>(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "closeToast",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openToast",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  private isOpenSubject = new BehaviorSubject<boolean>(false);\n  isOpen$ = this.isOpenSubject.asObservable();\n\n  openToast() {\n    this.isOpenSubject.next(true);\n  }\n\n  closeToast() {\n    this.isOpenSubject.next(false);\n  }\n}\n",
      "extends": [],
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [
    {
      "name": "BmbButtonDirective",
      "id": "directive-BmbButtonDirective-cb3fbf87d1b16364d38f3a066608912adb7053b5f2c2ee75217166ce98ee8b137f2ab9815f09477f7ebdcfae53b215b609620d212b0f14575b5b265cedebd13b",
      "file": "projects/ds-ng/src/lib/directives/button.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\n  Directive,\n  Input,\n  ElementRef,\n  HostBinding,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  OnInit,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { BmbIconComponent } from '../components/bmb-icon/bmb-icon.component';\n\n@Directive({\n  selector: '[bmbButton]',\n  standalone: true,\n})\nexport class BmbButtonDirective implements OnInit, OnChanges {\n  @Input() icon: string = '';\n  @Input() position: 'left' | 'right' = 'left';\n  @Input() case: boolean = false;\n  @Input() appearance:\n    | 'primary'\n    | 'secondary-filled'\n    | 'secondary-outlined'\n    | 'destructive' = 'primary';\n  @Input() size: 'small' | 'large' = 'small';\n\n  private providedInputs: Set<string> = new Set();\n\n  constructor(\n    private el: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    this.addContent();\n    this.applyAttributes();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    Object.keys(changes).forEach((input) => {\n      this.providedInputs.add(input);\n    });\n\n    this.applyAttributes();\n    this.addContent();\n    this.cdr.markForCheck();\n  }\n\n  private applyAttributes() {\n    if (this.providedInputs.has('case')) {\n      if (this.case) {\n        this.renderer.setAttribute(this.el.nativeElement, 'case', 'true');\n      } else {\n        this.renderer.removeAttribute(this.el.nativeElement, 'case');\n      }\n    }\n\n    if (this.providedInputs.has('size') && this.size) {\n      this.renderer.setAttribute(this.el.nativeElement, 'size', this.size);\n    }\n\n    if (this.providedInputs.has('position')) {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'position',\n        this.position\n      );\n    }\n  }\n\n  @HostBinding('class') get elementClass(): string {\n    return `bmb_btn-${this.appearance}`;\n  }\n\n  private addContent() {\n    this.viewContainerRef.clear();\n\n    if (this.icon) {\n      const iconComponentRef =\n        this.viewContainerRef.createComponent(BmbIconComponent); // Crear una instancia del componente\n      const iconComponent = iconComponentRef.instance;\n      iconComponent.icon = this.icon;\n\n      if (this.position === 'right') {\n        this.el.nativeElement.insertBefore(\n          iconComponentRef.location.nativeElement,\n          this.el.nativeElement.lastChild.nextSibling\n        );\n      } else {\n        this.el.nativeElement.insertBefore(\n          iconComponentRef.location.nativeElement,\n          this.el.nativeElement.firstChild\n        );\n      }\n    }\n  }\n}\n",
      "selector": "[bmbButton]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "\"primary\" | \"secondary-filled\" | \"secondary-outlined\" | \"destructive\"",
          "decorators": []
        },
        {
          "name": "case",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "position",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "\"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'small'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "\"small\" | \"large\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "string",
          "decorators": []
        }
      ],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "providedInputs",
          "defaultValue": "new Set()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Set<string>",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "addContent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 80,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "applyAttributes",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "extends": [],
      "implements": ["OnInit", "OnChanges"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 30,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "elementClass": {
          "name": "elementClass",
          "getSignature": {
            "name": "elementClass",
            "type": "string",
            "returnType": "string",
            "line": 76
          }
        }
      }
    }
  ],
  "components": [
    {
      "name": "BmbBadgeComponent",
      "id": "component-BmbBadgeComponent-20c349fdf6f6d1e98b5c233e1473aab659c3be76f498eea688070cde7666d03d93dd1692e1e992653a5323b376bfdd56d2930310a1e314bb187b1b69bcddc902",
      "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-badge",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-badge.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "grouped",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-badge',\n  styleUrl: './bmb-badge.component.scss',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-badge.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbBadgeComponent implements AfterViewInit {\n  @Input() appearance: string = '';\n  @Input() text: string = '';\n  @Input() grouped: boolean = false;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector('.bmb_badge-grouped');\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_badge-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_badge'];\n\n    if (this.appearance) {\n      classes.push('bmb_badge-' + this.appearance);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-badge.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["AfterViewInit"],
      "templateData": "<div [ngClass]=\"getClasses()\">\n  <span>{{ text }}</span>\n</div>\n"
    },
    {
      "name": "BmbCheckboxComponent",
      "id": "component-BmbCheckboxComponent-1b672cf18cc3a5a5761447b21480283f82d62141c8a99bceb090bdd1bd72252f6262db6e36e68f2e487d373c2f6e39c72070db1d4fbbfd25d94d16123d2cf46b",
      "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-checkbox",
      "styleUrls": ["./bmb-checkbox.component.scss"],
      "styles": [],
      "templateUrl": ["./bmb-checkbox.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "ariaDescribedby",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "ariaLabel",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "ariaLabelledby",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "string",
          "decorators": []
        },
        {
          "name": "checked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "id",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        },
        {
          "name": "indeterminate",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "decorators": []
        },
        {
          "name": "labelPosition",
          "defaultValue": "'after'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "\"before\" | \"after\"",
          "decorators": []
        },
        {
          "name": "name",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "EventEmitter<boolean>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleChange",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleKeyDown",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-checkbox',\n  templateUrl: './bmb-checkbox.component.html',\n  styleUrls: ['./bmb-checkbox.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbCheckboxComponent {\n  @Input() id: string = '';\n  @Input() checked: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() indeterminate: boolean = false;\n  @Input() value: string = '';\n  @Input() name: string = '';\n  @Input() label: string = '';\n  @Input() labelPosition: 'before' | 'after' = 'after';\n  @Input() ariaDescribedby: string = '';\n  @Input() ariaLabel: string = '';\n  @Input() ariaLabelledby: string = '';\n\n  @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  handleChange(event: Event) {\n    const isChecked = (event.target as HTMLInputElement).checked;\n    this.checked = isChecked;\n    this.change.emit(isChecked);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      if (this.indeterminate) {\n        this.indeterminate = false;\n        this.checked = true;\n      } else {\n        this.checked = !this.checked;\n      }\n\n      event.preventDefault();\n      this.change.emit(this.checked);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_checkbox {\n  align-items: center;\n  display: flex;\n  gap: rem.rem_calc(8);\n  position: relative;\n\n  input[type=\"checkbox\"] {\n    cursor: pointer;\n    height: rem.rem_calc(42);\n    margin: 0;\n    opacity: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n\n    &:hover {\n      + .bmb_checkbox-box {\n        background-color: RGBA(var(--color-blue-primary), 0.1);\n      }\n    }\n\n    &:focus {\n      + .bmb_checkbox-box {\n        background-color: RGBA(var(--color-blue-primary), 0.2);\n      }\n    }\n\n    &:checked {\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          background-color: RGBA(var(--color-blue-primary));\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            border: solid RGBA(var(--color-white-primary));\n            border-width: rem.rem_calc(0 2 2 0);\n            display: block;\n            height: rem.rem_calc(10);\n            left: rem.rem_calc(5);\n            transform: rotate(45deg);\n            width: rem.rem_calc(4);\n          }\n        }\n      }\n    }\n\n    &:indeterminate {\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          background-color: RGBA(var(--color-blue-primary));\n          border-color: RGBA(var(--color-blue-primary));\n\n          &::after {\n            background-color: RGBA(var(--color-white-primary));\n            bottom: 0;\n            display: block;\n            height: rem.rem_calc(2);\n            left: 0;\n            margin: auto;\n            right: 0;\n            top: 0;\n            width: rem.rem_calc(10);\n          }\n        }\n      }\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n\n      + .bmb_checkbox-box {\n        .bmb_checkbox-mark {\n          opacity: 0.5;\n        }\n      }\n      &:hover {\n        + .bmb_checkbox-box {\n          background-color: transparent;\n        }\n      }\n    }\n  }\n\n  &-box {\n    align-items: center;\n    border-radius: 100%;\n    display: flex;\n    height: rem.rem_calc(42);\n    justify-content: center;\n    width: rem.rem_calc(42);\n  }\n\n  &-mark {\n    background-color: transparent;\n    border: rem.rem_calc(1) solid RGBA(var(--color-charade-700));\n    border-radius: rem.rem_calc(4);\n    display: inline-block;\n    height: rem.rem_calc(18);\n    position: relative;\n    width: rem.rem_calc(18);\n\n    &::after {\n      content: \"\";\n      display: none;\n      position: absolute;\n    }\n  }\n\n  &-label {\n    color: RGBA(var(--color-charade-950));\n    flex: 1;\n    overflow: hidden;\n    padding-right: rem.rem_calc(10);\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    @include fonts.font(4, medium);\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_checkbox {\n    input[type=\"checkbox\"] {\n      &:hover {\n        + .bmb_checkbox-box {\n          background-color: RGBA(var(--color-green-light), 0.1);\n        }\n      }\n\n      &:focus {\n        + .bmb_checkbox-box {\n          background-color: RGBA(var(--color-green-light), 0.2);\n        }\n      }\n\n      &:checked {\n        + .bmb_checkbox-box {\n          .bmb_checkbox-mark {\n            background-color: RGBA(var(--color-green-light));\n            border-color: RGBA(var(--color-green-light));\n          }\n        }\n      }\n\n      &:indeterminate {\n        + .bmb_checkbox-box {\n          .bmb_checkbox-mark {\n            background-color: RGBA(var(--color-green-light));\n            border-color: RGBA(var(--color-green-light));\n          }\n        }\n      }\n    }\n\n    &-mark {\n      border: rem.rem_calc(1) solid RGBA(var(--color-charade-200));\n    }\n\n    &-label {\n      color: RGBA(var(--color-charade-50));\n    }\n  }\n}\n",
          "styleUrl": "./bmb-checkbox.component.scss"
        }
      ],
      "stylesData": "",
      "extends": [],
      "templateData": "<label\n  [attr.for]=\"id\"\n  class=\"bmb_checkbox\"\n  [class.bmb_checkbox-before]=\"labelPosition === 'before'\"\n  [class.bmb_checkbox-after]=\"labelPosition === 'after'\"\n>\n  <input\n    type=\"checkbox\"\n    [id]=\"id\"\n    [attr.aria-describedby]=\"ariaDescribedby\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.name]=\"name\"\n    [attr.value]=\"value\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [indeterminate]=\"indeterminate\"\n    (change)=\"handleChange($event)\"\n    (keydown)=\"handleKeyDown($event)\"\n  />\n  <div class=\"bmb_checkbox-box\">\n    <span class=\"bmb_checkbox-mark\"></span>\n  </div>\n  @if (label) {\n  <span class=\"bmb_checkbox-label\">{{ label }}</span>\n  }\n</label>\n"
    },
    {
      "name": "BmbChevronTitleSelectorComponent",
      "id": "component-BmbChevronTitleSelectorComponent-012b52964cbd5aba9fc538aa89e2295abff2315a3c271decfe4074080642fc8dc352450b81275cb1651ceddcfb51ad6a814e439b5311594ee483a9798a5a5217",
      "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-chevron-title-selector",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-chevron-title-selector.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "leadingIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "trailingIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onLeadingClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "EventEmitter<void>"
        },
        {
          "name": "onTrailingClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleLeadingClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleTrailingClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-chevron-title-selector',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-chevron-title-selector.component.scss',\n  templateUrl: './bmb-chevron-title-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbChevronTitleSelectorComponent {\n  @Input() title: string = '';\n  @Input() leadingIcon: string = '';\n  @Input() trailingIcon: string = '';\n\n  @Output() onLeadingClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onTrailingClick: EventEmitter<void> = new EventEmitter<void>();\n\n  handleLeadingClick() {\n    this.onLeadingClick.emit();\n  }\n\n  handleTrailingClick() {\n    this.onTrailingClick.emit();\n  }\n}\n",
      "styleUrl": "./bmb-chevron-title-selector.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_chevron\">\n  <button\n    class=\"bmb_chevron-button\"\n    *ngIf=\"leadingIcon\"\n    (click)=\"handleLeadingClick()\"\n  >\n    <bmb-icon [icon]=\"leadingIcon\" class=\"bmb_chevron-icon\" />\n  </button>\n\n  <span class=\"bmb_chevron-title\">{{ title }}</span>\n  <button\n    class=\"bmb_chevron-button\"\n    *ngIf=\"trailingIcon\"\n    (click)=\"handleTrailingClick()\"\n  >\n    <bmb-icon [icon]=\"trailingIcon\" class=\"bmb_chevron-icon\" />\n  </button>\n</div>\n"
    },
    {
      "name": "BmbContainerButtonComponent",
      "id": "component-BmbContainerButtonComponent-4e02d5c42340f7375fc5a2fef059faaa13cdc70fbf9b44478fbf2ee30e8d7aa98c301ef2c69b93832f3c8e72cc34d788dca37957a40eef471c7b9f3ec8fdb835",
      "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-container-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-container-button.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "iconLeft",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconRight",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "score",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "square",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "subtitle",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n@Component({\n  selector: 'bmb-container-button',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-container-button.component.scss',\n  templateUrl: './bmb-container-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbContainerButtonComponent {\n  @Input() title: string = '';\n  @Input() score: string = '';\n  @Input() square: boolean = false;\n  @Input() target: string = '';\n  @Input() link: string = '';\n  @Input() subtitle: string = '';\n  @Input() iconLeft: string = '';\n  @Input() iconRight: string = '';\n}\n",
      "styleUrl": "./bmb-container-button.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<a\n  class=\"bmb_container_button\"\n  [ngClass]=\"{\n    'bmb_container_button-small': subtitle || score, \n    'bmb_container_button-square': square, \n  }\"\n  [href]=\"link\"\n  [target]=\"target\"\n>\n  <bmb-icon\n    [icon]=\"iconLeft\"\n    class=\"bmb_container_button-left\"\n    *ngIf=\"iconLeft && !score\"\n  />\n  <div class=\"bmb_container_button-score\" *ngIf=\"score && !square\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"48\"\n      height=\"40\"\n      viewBox=\"0 0 40 48\"\n      fill=\"currentColor\"\n    >\n      <mask id=\"path-1-inside-1_3664_9005\" fill=\"currentColor\">\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M0 11.9719L20 0L40 11.9719V20.2667V27.7333V36.0281L20 48L0 36.0281V27.7333V20.2667V11.9719Z\"\n        />\n      </mask>\n      <path\n        d=\"M20 0L20.5136 -0.858025L20 -1.16547L19.4864 -0.858025L20 0ZM0 11.9719L-0.513607 11.1138L-1 11.405V11.9719H0ZM40 11.9719H41V11.405L40.5136 11.1138L40 11.9719ZM40 36.0281L40.5136 36.8862L41 36.595V36.0281H40ZM20 48L19.4864 48.858L20 49.1655L20.5136 48.858L20 48ZM0 36.0281H-1V36.595L-0.513607 36.8862L0 36.0281ZM19.4864 -0.858025L-0.513607 11.1138L0.513607 12.8299L20.5136 0.858025L19.4864 -0.858025ZM40.5136 11.1138L20.5136 -0.858025L19.4864 0.858025L39.4864 12.8299L40.5136 11.1138ZM41 20.2667V11.9719H39V20.2667H41ZM39 20.2667V27.7333H41V20.2667H39ZM39 27.7333V36.0281H41V27.7333H39ZM39.4864 35.1701L19.4864 47.142L20.5136 48.858L40.5136 36.8862L39.4864 35.1701ZM20.5136 47.142L0.513607 35.1701L-0.513607 36.8862L19.4864 48.858L20.5136 47.142ZM1 36.0281V27.7333H-1V36.0281H1ZM1 27.7333V20.2667H-1V27.7333H1ZM-1 11.9719V20.2667H1V11.9719H-1Z\"\n        fill=\"currentColor\"\n        mask=\"url(#path-1-inside-1_3664_9005)\"\n      />\n    </svg>\n    <span>{{ score }}</span>\n  </div>\n  <div class=\"bmb_container_button-text\">\n    <span class=\"bmb_container_button-title\">{{ title }}</span>\n    <span class=\"bmb_container_button-subtitle\" *ngIf=\"subtitle && !square\">{{\n      subtitle\n    }}</span>\n  </div>\n  <bmb-icon\n    [icon]=\"iconRight\"\n    class=\"bmb_container_button-right\"\n    *ngIf=\"iconRight && !square\"\n  />\n</a>\n"
    },
    {
      "name": "BmbContainerComponent",
      "id": "component-BmbContainerComponent-4eab7c60c59ad0123a3d7e46d1b65770c478da8592b6c44be9f1429016f30acf1ae14c83ffb889466c8ae704b66589fb22b21cf38ebf52d87869dafbffd3c0b9",
      "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-container",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-container.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-container',\n  standalone: true,\n  imports: [CommonModule],\n  styleUrl: './bmb-container.component.scss',\n  templateUrl: './bmb-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbContainerComponent {\n  @Input() appearance: string = '';\n\n  constructor() {}\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_container'];\n\n    if (this.appearance) {\n      classes.push('bmb_container-' + this.appearance);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-container.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 19
      },
      "extends": [],
      "templateData": "<div [ngClass]=\"getClasses()\">\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "BmbDividerComponent",
      "id": "component-BmbDividerComponent-c01b5cdc7f09a37bd606ee023ef3bbf2215642f932d456b2a9473097b66705b6c7057115fec3144a2da5330861f7beebf0ff811103b0f64b401fd20eff1adb56",
      "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-divider",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-divider.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "type",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-divider',\n  styleUrl: './bmb-divider.component.scss',\n  templateUrl: './bmb-divider.component.html',\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDividerComponent {\n  @Input() type: string = '';\n\n  constructor() {}\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_divider'];\n\n    if (this.type) {\n      classes.push('bmb_divider-' + this.type);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-divider.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 18
      },
      "extends": [],
      "templateData": "<div class=\"bmb_divider\" [ngClass]=\"getClasses()\"></div>\n"
    },
    {
      "name": "BmbDotPaginatorComponent",
      "id": "component-BmbDotPaginatorComponent-f2c3d13fcf4fd6183ec16ed094945329f06423ca7483317bd35b40b174de58d51ac8b2c617a6cf24a3f7aca7974b78604de4aff3d3f914fbfd2720c5feb49d40",
      "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-dot-paginator",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-dot-paginator.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "activeDotIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "number",
          "decorators": []
        },
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "targets",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "Target[]",
          "decorators": []
        },
        {
          "name": "totalDots",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onDotPress",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "EventEmitter<number>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getDotsArray",
          "args": [],
          "optional": false,
          "returnType": "number[]",
          "typeParameters": [],
          "line": 32,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onDotClicked",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Target {\n  target: string;\n  index: number;\n}\n\n@Component({\n  selector: 'bmb-dot-paginator',\n  standalone: true,\n  styleUrl: './bmb-dot-paginator.component.scss',\n  imports: [CommonModule],\n  templateUrl: './bmb-dot-paginator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbDotPaginatorComponent {\n  @Input() activeDotIndex?: number = 0;\n  @Input() totalDots?: number = 0;\n  @Input() targets: Target[] = [];\n  @Input() appearance: string = '';\n  @Output() onDotPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getDotsArray(): number[] {\n    return new Array(this.totalDots ?? 0).fill(0).map((_, i) => i);\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_dot_paginator'];\n\n    if (this.appearance) {\n      classes.push('bmb_dot_paginator-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  onDotClicked(index: number): void {\n    this.activeDotIndex = index;\n    this.onDotPress.emit(index);\n  }\n}\n",
      "styleUrl": "./bmb-dot-paginator.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<ol [ngClass]=\"getClasses()\">\n  <li\n    *ngFor=\"let i of getDotsArray()\"\n    [attr.data-bs-target]=\"targets && targets[i] ? targets[i].target : ''\"\n    [attr.data-bs-slide-to]=\"i\"\n    [ngClass]=\"{ dot: true, active: activeDotIndex === i }\"\n    (click)=\"onDotClicked(i)\"\n  ></li>\n</ol>\n"
    },
    {
      "name": "BmbFabComponent",
      "id": "component-BmbFabComponent-534cc95582eb3725f4daf88270e190af8a20e2e839b29bcb2842852ac974d83c27e7fdf8dc02c93a55a67b0fafb43adb8305330bf0f1a1e4be495a65d3745390",
      "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-fab",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-fab.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "FabSize",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string | null",
          "decorators": []
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "FabType",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "active",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "closeIcon",
          "defaultValue": "'close'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "fabStyle",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [
        {
          "name": "myClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'click'"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setStyles",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "click",
          "args": [],
          "argsDecorator": [],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31
        }
      ],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  HostListener,\n  Input,\n  ViewEncapsulation,\n  EventEmitter\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { FabSize, FabType } from './bmb-fab-.interface';\n@Component({\n  selector: 'bmb-fab',\n  styleUrl: './bmb-fab.component.scss',\n  templateUrl: './bmb-fab.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbFabComponent {\n  @Input() icon = '';\n  @Input() text?: string | null = '';\n  @Input() size?: FabSize;\n  @Input() type?: FabType;\n\n  active: boolean = false;\n\n  closeIcon = 'close';\n\n  fabStyle = '';\n\n  @HostListener('click') myClick() {\n    if (this.type == 'normal') {\n      this.active = !this.active;\n    }\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    this.fabStyle = this.setStyles();\n  }\n\n  setStyles() {\n    let style = 'bmb_fab';\n\n    if (this.size == 'small') {\n      style = `${style}-small`;\n    } else {\n      style = `${style}-large`;\n    }\n\n    if (this.type === 'extended') {\n      style = `${style}-extended`;\n    } else {\n      style = `${style}-normal`;\n    }\n    return style;\n  }\n}\n",
      "styleUrl": "./bmb-fab.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 35
      },
      "extends": [],
      "templateData": "<button [ngClass]=\"this.fabStyle\" type=\"button\">\n    <span *ngIf=\"type == 'extended'\">{{text}}</span>\n    <bmb-icon *ngIf=\"!active\" icon={{icon}} />\n    <bmb-icon  *ngIf=\"type == 'normal' && active \" icon='close'/>\n</button>\n"
    },
    {
      "name": "BmbFocusElementComponent",
      "id": "component-BmbFocusElementComponent-54cbc6668ffb0724b9733afb69dbfea43e25f5bc7a3858a936b09d1f2f1f28fc50a5b193c40b8bd47dff40f66d550826a1a4ae7759b60ac89f30850432176731",
      "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-focus-element",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-focus-element.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "number",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "number",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-focus-element',\n  styleUrl: './bmb-focus-element.component.scss',\n  templateUrl: './bmb-focus-element.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbFocusElementComponent {\n  @Input() icon: string = '';\n  @Input() number: number = 0;\n  @Input() title: string = '';\n}\n",
      "styleUrl": "./bmb-focus-element.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_focus_element\">\n  <div class=\"bmb_focus_element-circle\">\n    @if (icon && !number) {\n    <bmb-icon class=\"bmb_focus_element-icon\" icon=\"{{ icon }}\" />\n    } @if (number && !icon) {\n    <span class=\"bmb_focus_element-number\">{{ number }}</span>\n    }\n  </div>\n  @if (title) {\n  <p class=\"bmb_focus_element-title\">{{ title }}</p>\n  }\n</div>\n"
    },
    {
      "name": "BmbHeaderMobileComponent",
      "id": "component-BmbHeaderMobileComponent-d3f4bb98ed5796e99af7b6b94f25ad3cf4fcf7c665f7f83048d8c5fc6eed4dd73f3b52e4c3e2783337ff932375c7fca9730e4b95e7ce070f064c6d1850bae3a9",
      "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-header-mobile",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-header-mobile.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "altLogo",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconLeft",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconRight",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string",
          "decorators": []
        },
        {
          "name": "iconRight2",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string",
          "decorators": []
        },
        {
          "name": "logo",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string",
          "decorators": []
        },
        {
          "name": "logoLink",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string",
          "decorators": []
        },
        {
          "name": "logoTarget",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userAltImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userLink",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string",
          "decorators": []
        },
        {
          "name": "userTarget",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onIconLeftClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "EventEmitter<void>"
        },
        {
          "name": "onIconRight2Click",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "EventEmitter<void>"
        },
        {
          "name": "onIconRightClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleIconLeftClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleIconRight2Click",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "handleIconRightClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "BmbLogoComponent",
          "type": "component"
        },
        {
          "name": "BmbContainerComponent",
          "type": "component"
        },
        {
          "name": "BmbUserImageComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\nimport { BmbLogoComponent } from '../bmb-logo/bmb-logo.component';\nimport { BmbUserImageComponent } from '../bmb-user-image/bmb-user-image.component';\n@Component({\n  selector: 'bmb-header-mobile',\n  standalone: true,\n  imports: [\n    CommonModule,\n    BmbIconComponent,\n    BmbLogoComponent,\n    BmbContainerComponent,\n    BmbUserImageComponent,\n  ],\n  styleUrl: './bmb-header-mobile.component.scss',\n  templateUrl: './bmb-header-mobile.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbHeaderMobileComponent {\n  @Input() text: string = '';\n\n  @Input() userImage: string = '';\n  @Input() userAltImage: string = '';\n  @Input() userLink: string = '';\n  @Input() userTarget: string = '';\n\n  @Input() logo: string = '';\n  @Input() altLogo: string = '';\n  @Input() logoLink: string = '';\n  @Input() logoTarget: string = '';\n\n  @Input() iconLeft: string = '';\n  @Input() iconRight: string = '';\n  @Input() iconRight2: string = '';\n\n  // Event handlers\n  @Output() onIconLeftClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onIconRightClick: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onIconRight2Click: EventEmitter<void> = new EventEmitter<void>();\n\n  handleIconLeftClick() {\n    this.onIconLeftClick.emit();\n  }\n\n  handleIconRightClick() {\n    this.onIconRightClick.emit();\n  }\n\n  handleIconRight2Click() {\n    this.onIconRight2Click.emit();\n  }\n}\n",
      "styleUrl": "./bmb-header-mobile.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_header_mobile\">\n  <bmb-container appearance=\"primary-header\">\n    <div class=\"bmb_header_mobile-left\">\n      <bmb-logo\n        size=\"small\"\n        [image]=\"logo\"\n        [altImage]=\"altLogo\"\n        [link]=\"logoLink\"\n        [target]=\"logoTarget\"\n        *ngIf=\"logo && !iconLeft\"\n      />\n      <button *ngIf=\"iconLeft\" (click)=\"handleIconLeftClick()\">\n        <bmb-icon [icon]=\"iconLeft\" />\n      </button>\n    </div>\n    <span class=\"bmb_header_mobile-text\">{{ text }}</span>\n    <div class=\"bmb_header_mobile-right\">\n      <button *ngIf=\"iconRight && !userImage\" (click)=\"handleIconRightClick()\">\n        <bmb-icon [icon]=\"iconRight\" />\n      </button>\n      <button\n        *ngIf=\"iconRight2 && !userImage\"\n        (click)=\"handleIconRight2Click()\"\n      >\n        <bmb-icon [icon]=\"iconRight2\" />\n      </button>\n      <bmb-user-image\n        size=\"mobile-small\"\n        [image]=\"userImage\"\n        [altImage]=\"userAltImage\"\n        [link]=\"userLink\"\n        [target]=\"userTarget\"\n        *ngIf=\"userImage\"\n      />\n    </div>\n  </bmb-container>\n</div>\n"
    },
    {
      "name": "BmbHomeSectionComponent",
      "id": "component-BmbHomeSectionComponent-f7e6b27d1fd4d675ac417ed36601e533485d366a7b5270682da06c97d3a783dbc64ce51026aa00356bdd4cb05675f7ca8edf6524b265be9620f7e8f86d649229",
      "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-home-section",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-home-section.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbContainerComponent",
          "type": "component"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbContainerComponent } from '../bmb-container/bmb-container.component';\n\n@Component({\n  selector: 'bmb-home-section',\n  standalone: true,\n  imports: [CommonModule, BmbContainerComponent, BmbIconComponent],\n  styleUrl: './bmb-home-section.component.scss',\n  templateUrl: './bmb-home-section.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbHomeSectionComponent {\n  @Input() title: string = '';\n  @Input() icon: string = '';\n  @Input() target: string = '';\n  @Input() link: string = '';\n\n  constructor() {}\n}\n",
      "styleUrl": "./bmb-home-section.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 24
      },
      "extends": [],
      "templateData": "<div class=\"bmb_home_section\">\n  <bmb-container appearance=\"primary-home\">\n    <div class=\"bmb_home_section-header\">\n      <span class=\"bmb_home_section-title\">{{ title }}</span>\n      <a class=\"bmb_home_section-link\" [href]=\"link\" [target]=\"target\">\n        <bmb-icon [icon]=\"icon\" class=\"bmb_home_section-icon\" />\n      </a>\n    </div>\n    <ng-content></ng-content>\n  </bmb-container>\n</div>\n"
    },
    {
      "name": "BmbIconComponent",
      "id": "component-BmbIconComponent-8b9496ea50a2bc89e312dcbda395d86a047fc4ef32f50fa79a423460124b42151f5ab70c0bae6d8ed347d8a2db198a1863c1324a34bf9b85bfab79c18f5099c6",
      "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-icon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-icon.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "icon",
          "defaultValue": "'face'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'bmb-icon',\n  standalone: true,\n  templateUrl: './bmb-icon.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbIconComponent {\n  @Input() icon: string = 'face';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<i class=\"material-symbols-outlined\">{{ icon }}</i>\n"
    },
    {
      "name": "BmbInputComponent",
      "id": "component-BmbInputComponent-c932183335039e99c6f04edc54e16bf2bc139f70e9a595da4f8bb9e4c721778ff7a173c3523093677f41986df755fd34fe6e1be76721b71a6d7e80a2eaf62e8a",
      "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => BmbInputComponent), multi: true,\n}",
          "type": "component"
        },
        {
          "name": "{\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => BmbInputComponent), multi: true,\n}",
          "type": "component"
        }
      ],
      "selector": "bmb-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-input.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "'normal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "InputType",
          "decorators": []
        },
        {
          "name": "errorMessage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "string",
          "decorators": []
        },
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "FormControl | undefined",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isClearable",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isDisabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isRequired",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isValid",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 61,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57,
          "type": "string",
          "decorators": []
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "string | undefined",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "handleBlur",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleFocus",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "EventEmitter<any>"
        },
        {
          "name": "handleMouseover",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "iconColor",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 78
        },
        {
          "name": "input",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgModel | undefined",
          "optional": false,
          "description": "",
          "line": 55,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'input', {static: false}"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "inputModel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | undefined",
          "optional": false,
          "description": "",
          "line": 74,
          "modifierKind": [125]
        },
        {
          "name": "inputWrapper",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef | undefined",
          "optional": false,
          "description": "",
          "line": 53,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'inputWrapper', {read: ElementRef, static: false}"
            }
          ],
          "modifierKind": [170]
        },
        {
          "name": "onTouch",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function | undefined",
          "optional": false,
          "description": "",
          "line": 76
        },
        {
          "name": "style",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 77
        }
      ],
      "methodsClass": [
        {
          "name": "getComponent",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 121,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getValue",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 125,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 95,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 151,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onChange",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 159,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 105,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 139,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 144,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onMouseover",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 155,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onParentClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 165,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 169,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "state",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 173,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "state",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setValidation",
          "args": [
            {
              "name": "validation",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 129,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "validation",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setValue",
          "args": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 188,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "validate",
          "args": [
            {
              "name": "form",
              "type": "FormControl",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ invalid: boolean; }",
          "typeParameters": [],
          "line": 179,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "form",
              "type": "FormControl",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 161,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "FormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  Output,\n  EventEmitter,\n  forwardRef,\n  AfterViewInit,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  FormControl,\n  NgModel,\n  FormsModule\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { InputType } from './bmb-input.interface';\n@Component({\n  selector: 'bmb-input',\n  styleUrl: './bmb-input.component.scss',\n  templateUrl: './bmb-input.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent, FormsModule],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => BmbInputComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => BmbInputComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInputComponent\n  implements ControlValueAccessor, AfterViewInit, OnChanges\n{\n  @ViewChild('inputWrapper', { read: ElementRef, static: false })\n  inputWrapper: ElementRef | undefined;\n  @ViewChild('input', { static: false })\n  input: NgModel | undefined;\n\n  @Input() label: string = '';\n  @Input() placeholder: string = '';\n  @Input() icon: string = '';\n  @Input() errorMessage: string = '';\n  @Input() isValid: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() isRequired: boolean = false;\n  @Input() value: string | undefined;\n  @Input() isClearable: boolean = false;\n  @Input() appearance: InputType = 'normal';\n\n  @Output() handleClick: EventEmitter<any> = new EventEmitter();\n  @Output() handleFocus: EventEmitter<any> = new EventEmitter();\n  @Output() handleBlur: EventEmitter<any> = new EventEmitter();\n  @Output() handleMouseover: EventEmitter<any> = new EventEmitter();\n  @Output() handleChange: EventEmitter<any> = new EventEmitter();\n\n  public inputModel: string | undefined;\n  @Input() formControl: FormControl | undefined;\n  onTouch: Function | undefined;\n  style = '';\n  iconColor = '';\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    if (this.isDisabled && this.formControl) {\n      this.formControl.disable();\n    }\n    setTimeout(() => {\n      if (this.value && this.inputModel !== undefined) {\n        this.value = undefined;\n      }\n    }, 0);\n    this.style = `bmb_field-input-${this.appearance}`;\n    this.iconColor = `bmb_field-icon-${this.appearance}`;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.formControl && changes?.['isDisabled'] !== undefined) {\n      if (this.formControl.disabled !== changes?.['isDisabled']?.currentValue) {\n        changes?.['isDisabled']?.currentValue\n          ? this.formControl.disable()\n          : this.formControl.enable();\n      }\n    }\n  }\n\n  onClear() {\n    this.inputModel = undefined;\n    this.value = undefined;\n    this.inputWrapper?.nativeElement\n      .querySelector('.bmb_field-input')\n      .focus();\n\n    if (this.isClearable && this.formControl) {\n      this.formControl.reset();\n    }\n\n    this.cdr.detectChanges();\n\n    this.handleChange.emit(this.getValue());\n  }\n\n  getComponent() {\n    return this.input;\n  }\n\n  getValue() {\n    return this.input?.['viewModel'];\n  }\n\n  setValidation(validation: any) {\n    this.isValid = validation;\n  }\n\n  onParentClick() {\n    this.inputWrapper?.nativeElement\n      .querySelector('.bmb_field-input')\n      .focus();\n  }\n\n  onClick() {\n    this.handleChange.emit(this.getValue());\n    this.handleClick.emit(this.getValue());\n  }\n\n  onFocus() {\n    this.handleFocus.emit(this.getValue());\n    if (this.onTouch) {\n      this.onTouch();\n    }\n  }\n\n  onBlur() {\n    this.handleBlur.emit(this.getValue());\n  }\n\n  onMouseover() {\n    this.handleMouseover.emit(this.getValue());\n  }\n\n  onChange(value: any): void {}\n\n  writeValue(value: string): void {\n    this.inputModel = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  setDisabledState(state: boolean): void {\n    if (this.formControl) {\n      this.isDisabled = state;\n    }\n  }\n\n  validate(form: FormControl) {\n    this.formControl = form;\n    if (!form?.value && this.isRequired === true) {\n      return { invalid: true };\n    } else {\n      return null;\n    }\n  }\n\n  setValue(value: string) {\n    this.onChange(value);\n    if (this.input?.['viewModel'] === '') {\n      this.inputModel = undefined;\n      this.value = undefined;\n      this.cdr.detectChanges();\n    }\n    this.handleChange.emit(this.getValue());\n    if (this.onTouch) {\n      this.onTouch();\n    }\n  }\n}\n",
      "styleUrl": "./bmb-input.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 78,
        "jsdoctags": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["ControlValueAccessor", "AfterViewInit", "OnChanges"],
      "templateData": "<div class=\"bmb_field\">\n  <div class=\"bmb_field-container-label\"  *ngIf=\"label\">\n    <label for=\"\" class=\"bmb_field-label\">{{ label }}</label>\n    <span *ngIf=\"isRequired\" class=\"bmb_field-label-required\"> *</span>\n  </div>\n  <div\n    class=\"bmb_field-wrapper\"\n    (click)=\"onParentClick()\"\n    #inputWrapper\n  >\n    <ng-container *ngIf=\"icon\">\n      <bmb-icon [icon]=\"icon\" class=\"bmb_field-icon\" [ngClass]=\"iconColor\" />\n    </ng-container>\n    <input\n      type=\"text\"\n      class=\"bmb_field-input\"\n      [ngClass]=\"this.style\"\n      [ngClass]=\"[!isValid ? 'bmb_field-error' : '']\"\n      (ngModelChange)=\"setValue(input.viewModel)\"\n      (click)=\"onClick()\"\n      (focus)=\"onFocus()\"\n      (blur)=\"onBlur()\"\n      (mouseover)=\"onMouseover()\"\n      [(ngModel)]=\"value || inputModel\"\n      [required]=\"isRequired\"\n      [disabled]=\"isDisabled\"\n      [placeholder]=\"placeholder ? placeholder : ''\"\n      #input=\"ngModel\"\n    />\n  </div>\n  <p \n    class=\"bmb_field-helper\"\n    [ngClass]=\"[!inputModel ? 'bmb_field-error' : '']\"\n    >\n      {{ errorMessage }}\n  </p>\n</div>\n"
    },
    {
      "name": "BmbInteractiveIconComponent",
      "id": "component-BmbInteractiveIconComponent-7a72d4fd66f0eb11e3156cbf780f4c14fe44b4023471f20b75409dfeb26cd0ad00a16a2f8995e6a7dce3c71be8e65078e6b856d57590b8572cb2f87bd5120ad4",
      "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-interactive-icon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-interactive-icon.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        },
        {
          "name": "description",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "grouped",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "horizontal",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-interactive-icon',\n  styleUrl: './bmb-interactive-icon.component.scss',\n  templateUrl: './bmb-interactive-icon.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbInteractiveIconComponent implements AfterViewInit {\n  @Input() appearance: string = '';\n  @Input() title: string = '';\n  @Input() description: string = '';\n  @Input() icon: string = '';\n  @Input() grouped: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() target: string = '';\n  @Input() link: string = '';\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector(\n        '.bmb_interactive_icon-grouped'\n      );\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_interactive_icon-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_interactive_icon'];\n\n    if (this.appearance) {\n      classes.push('bmb_interactive_icon-' + this.appearance);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-interactive-icon.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 30,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["AfterViewInit"],
      "templateData": "<a\n  [ngClass]=\"getClasses()\"\n  [class.bmb_interactive_icon-horizontal]=\"horizontal\"\n  [href]=\"link\"\n  [target]=\"target\"\n>\n  <div class=\"bmb_interactive_icon-box\">\n    <bmb-icon\n      class=\"bmb_interactive_icon-icon\"\n      icon=\"{{ icon }}\"\n      *ngIf=\"icon\"\n    />\n  </div>\n  <div class=\"bmb_interactive_icon-text\">\n    <span class=\"bmb_interactive_icon-title\" *ngIf=\"title\">{{ title }}</span>\n    <span\n      class=\"bmb_interactive_icon-description\"\n      *ngIf=\"description && horizontal\"\n      >{{ description }}</span\n    >\n  </div>\n</a>\n"
    },
    {
      "name": "BmbLegendComponent",
      "id": "component-BmbLegendComponent-387bbc56e3c2877e08994404856700056b0c877c3bc9996e539ad0e838770fd61f0ba6e69ce82d4232a2b96e2c918bd60ebd77c72d12d03b416e8315861079f3",
      "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-legend",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-legend.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "indicatorAppearance",
          "defaultValue": "'normal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "Variations",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\ntype Variations =\n  'normal'|\n  'strong'|\n  'success'|\n  'info'|\n  'warning'|\n  'error'|\n  'brand';\n\n@Component({\n  selector: 'bmb-legend',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-legend.component.html',\n  styleUrl: './bmb-legend.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbLegendComponent {\n  @Input() label: string = '';\n  @Input() value: string = '';\n  @Input() indicatorAppearance: Variations = 'normal';\n}\n",
      "styleUrl": "./bmb-legend.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_legend\">\n  <span class=\"bmb_legend-indicator\">\n    <span [class]=\"'bmb_legend-bullet bmb_legend-bullet-' + indicatorAppearance\"></span>\n  </span>\n  <h3 class=\"bmb_legend-label\">{{ label }}</h3>\n  <span class=\"bmb_legend-value\">{{ value }}</span>\n</div>\n"
    },
    {
      "name": "BmbLoaderComponent",
      "id": "component-BmbLoaderComponent-acff4cf581ffb3bcadb33254f10ad67cc431f1abbd77c2c30b42328a9e32638968ad59d3debb67c1211600e9119dbbee154e94d7660797b9b87e6333e7d6e824",
      "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-loader",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-loader.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "status",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "subtitle",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-loader',\n  styleUrl: './bmb-loader.component.scss',\n  templateUrl: './bmb-loader.component.html',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbLoaderComponent {\n  @Input() status: string = '';\n  @Input() title: string = '';\n  @Input() subtitle: string = '';\n}\n",
      "styleUrl": "./bmb-loader.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_loader\">\n  <div *ngIf=\"status != 'noConnection'\" class=\"bmb_loader-loading\">\n    <bmb-icon icon=\"progress_activity\"></bmb-icon>\n  </div>\n  <div *ngIf=\"status === 'noConnection'\" class=\"bmb_loader-connection\">\n    <bmb-icon icon=\"wifi_off\"></bmb-icon>\n  </div>\n  <div *ngIf=\"title\" class=\"bmb_loader-title\">{{ title }}</div>\n  <div *ngIf=\"subtitle\" class=\"bmb_loader-subtitle\">{{ subtitle }}</div>\n</div>\n"
    },
    {
      "name": "BmbLogoComponent",
      "id": "component-BmbLogoComponent-204e434183aff1f6d4a8e860762d868cd2cfd515bec3c8f8a741cf9f3781ae18f6b7a994fc79dc97b759ae3d2e8067a03287b1929ee674dd40e88c881d95b601",
      "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-logo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-logo.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "altImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "image",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-logo',\n  styleUrl: './bmb-logo.component.scss',\n  templateUrl: './bmb-logo.component.html',\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbLogoComponent {\n  @Input() size: string = '';\n  @Input() image: string = '';\n  @Input() altImage: string = '';\n  @Input() link: string = '';\n  @Input() target: string = '';\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_logo'];\n\n    if (this.size) {\n      classes.push('bmb_logo-' + this.size);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-logo.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<a [ngClass]=\"getClasses()\" [href]=\"link\" [target]=\"target\">\n  <img [src]=\"image\" [alt]=\"altImage\" />\n</a>\n"
    },
    {
      "name": "BmbProgressCircleComponent",
      "id": "component-BmbProgressCircleComponent-a8c4b9df052f798f5e0944294a9bd925427f6259c7abf1d7f4204e9363bd7ccfd828a65bb118f3488cf17f1ff1d2b3bd922dad31d326698743725dd864cdd434",
      "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-progress-circle",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-progress-circle.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "percentValue",
          "defaultValue": "50",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "number | null",
          "decorators": []
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string | null",
          "decorators": []
        },
        {
          "name": "valueLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number | null",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "circunference",
          "defaultValue": "2 * Math.PI * this.radius",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "dashoffset",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "radius",
          "defaultValue": "74",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "symbol",
          "defaultValue": "'%'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "progress",
          "args": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'bmb-progress-circle',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-progress-circle.component.html',\n  styleUrl: './bmb-progress-circle.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbProgressCircleComponent implements OnChanges {\n  @Input() percentValue: number | null = 50;\n  @Input() title?: string | null;\n  @Input() valueLabel?: number | null;\n\n  radius = 74;\n  circunference = 2 * Math.PI * this.radius;\n  dashoffset = 0;\n  symbol = '%';\n\n  constructor() {\n    this.progress(0);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['percentValue']) {\n      if (changes['percentValue'].currentValue > 100) {\n        this.progress(100);\n      } else {\n        this.progress(changes['percentValue'].currentValue);\n      }\n    }\n  }\n\n  progress(value: number) {\n    const progress = value / 100;\n    this.dashoffset = -this.circunference * (1 - progress);\n  }\n}\n",
      "styleUrl": "./bmb-progress-circle.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 28
      },
      "extends": [],
      "implements": ["OnChanges"],
      "templateData": "<div class=\"bmb_progress_circle\">\n    <svg class=\"bmb_progress_circle-svg\" width=\"170\" height=\"170\" viewBox=\"0 0 170 170\">\n      <circle class=\"bmb_progress_circle-svg-meter\" cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"5\" />\n      <circle class=\"bmb_progress_circle-svg-value\" [style.strokeDasharray]=\"circunference\" [style.strokeDashoffset]=\"dashoffset\"\n        cx=\"84\" cy=\"84\" [attr.r]=\"radius\" stroke-width=\"5\" />\n    </svg>\n\n    <div class=\"bmb_progress_circle-info\">\n      @if (title) {\n        <div class=\"bmb_progress_circle-info-title\">\n          <ng-container >{{title}}</ng-container>\n        </div>  \n\n      }\n      <div class=\"bmb_progress_circle-info-value\" [ngClass]=\"{'bmb_progress_circle-info-value-alone': this.title !== undefined}\">\n        {{valueLabel}}\n      </div>\n    </div>\n  </div>\n"
    },
    {
      "name": "BmbSidebarComponent",
      "id": "component-BmbSidebarComponent-5485f870c686192841c3b5d258c2672dacc49a1bd201daf62ef2ee1b798bf082a52fcfc573ed6d4d44adb851b9fbfc805e69b57b8cd31c01f2861660a026ca8e",
      "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-sidebar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-sidebar.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "elements",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "SidebarElements[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentChoice",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [
        {
          "name": "getActive",
          "args": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setActive",
          "args": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "choice",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "BmbIconComponent",
          "type": "component"
        },
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component, \n  Input,\n} from '@angular/core';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { CommonModule } from '@angular/common';\nimport { SidebarElements } from './bmb-sidebar.interface';\n\n@Component({\n  selector: 'bmb-sidebar',\n  standalone: true,\n  imports: [BmbIconComponent, CommonModule],\n  templateUrl: './bmb-sidebar.component.html',\n  styleUrl: './bmb-sidebar.component.scss'\n})\nexport class BmbSidebarComponent {\n\n  @Input() elements: SidebarElements[] = [];\n\n  currentChoice: string = '';\n\n  ngOnInit(){\n    this.currentChoice = this.elements[0].title;\n  }\n\n  setActive(choice: string){\n    this.currentChoice = choice\n  }\n\n  getActive(choice: string): string{\n    if(this.currentChoice == choice){\n      return 'active';\n    } else{\n      return \"not\";\n    }\n  }\n}\n",
      "styleUrl": "./bmb-sidebar.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<nav class=\"bmb_sidebar\">\n    <ul class=\"bmb_sidebar-container\">\n        @for (element of elements; track element) {\n            <li class=\"bmb_sidebar-item\" (click)=\"setActive(element.title)\">\n                <div class=\"bmb_sidebar-item-container\" [ngClass]=\"getActive(element.title)\">\n                    <bmb-icon class=\"bmb_sidebar-item-container-icon\" [ngClass]=\"getActive(element.title)+'-icon'\" [icon]=\"element.icon\"/>\n                    <a class=\"bmb_sidebar-item-container-link\" [ngClass]=\"'bmb-'+getActive(element.title)+'-link'\" href={{element.link}}>\n                        {{element.title}}\n                    </a>\n                </div>\n              </li> \n        }\n    </ul>\n</nav>"
    },
    {
      "name": "BmbStatCounterComponent",
      "id": "component-BmbStatCounterComponent-1bdde546f9a2286e251035e1643025af76bfae47f1a03dd00ae808179f5c81bbf2083be04ca3eb2c545e49b7c59153c2892f33f8051c8092e0cee6b00669ebb6",
      "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-stat-counter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-stat-counter.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "activeStep",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "number",
          "decorators": []
        },
        {
          "name": "totalSteps",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onStepPress",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "EventEmitter<number>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getStepsArray",
          "args": [],
          "optional": false,
          "returnType": "number[]",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onStepClicked",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-stat-counter.component.scss',\n  selector: 'bmb-stat-counter',\n  templateUrl: './bmb-stat-counter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbStatCounterComponent {\n  @Input() activeStep: number = 0;\n  @Input() totalSteps?: number = 0;\n  @Output() onStepPress: EventEmitter<number> = new EventEmitter<number>();\n\n  getStepsArray(): number[] {\n    return new Array(this.totalSteps || 0).fill(0).map((_, i) => i);\n  }\n\n  onStepClicked(index: number): void {\n    this.activeStep = index;\n    this.onStepPress.emit(index);\n  }\n}\n",
      "styleUrl": "./bmb-stat-counter.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_stat_counter\">\n  <div\n    class=\"bmb_stat_counter-item\"\n    *ngFor=\"let i of getStepsArray()\"\n    [attr.data-bs-slide-to]=\"i\"\n    [ngClass]=\"{ active: activeStep === i, completed: activeStep > i }\"\n    (click)=\"onStepClicked(i)\"\n  >\n    <div\n      class=\"bmb_stat_counter-step\"\n      [ngClass]=\"{ active: activeStep === i, completed: activeStep > i }\"\n    >\n      <span *ngIf=\"activeStep == i || activeStep < i\">{{ i + 1 }}</span>\n      @if (activeStep > i )  {\n        <bmb-icon [icon]=\"'done'\" class=\"material-icons\" />\n      }\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "BmbSwitchComponent",
      "id": "component-BmbSwitchComponent-4df2aa8233fc1deb7889d6d34198cd4904639a9e918e01f20c4a800a53fdc07832c3ddf8c900b4b6a19c142952ec7d8171743ffd0cb9d3c0c2101cf7e942e2eb",
      "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-switch",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-switch.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "defaultValue": "'Describe the button function here'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "id",
          "defaultValue": "`bmb-switch-${BmbSwitchComponent.nextId++}`",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isChecked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "leftIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "leftText",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        },
        {
          "name": "rightIcon",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "decorators": []
        },
        {
          "name": "rightText",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "EventEmitter<boolean>"
        }
      ],
      "propertiesClass": [
        {
          "name": "nextId",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [123, 126]
        }
      ],
      "methodsClass": [
        {
          "name": "toggleSwitch",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  selector: 'bmb-switch',\n  templateUrl: './bmb-switch.component.html',\n  styleUrl: './bmb-switch.component.scss',\n  standalone: true,\n  imports: [CommonModule, FormsModule, BmbIconComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbSwitchComponent {\n  private static nextId = 0;\n  @Input() leftText: string = '';\n  @Input() leftIcon: string = '';\n  @Input() rightText: string = '';\n  @Input() rightIcon: string = '';\n  @Input() isChecked: boolean = false;\n  @Input() ariaLabel: string = 'Describe the button function here';\n  @Input() id: string = `bmb-switch-${BmbSwitchComponent.nextId++}`;\n  @Input() disabled: boolean = false;\n\n  @Output() change: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  toggleSwitch(): void {\n    if (!this.disabled) {\n      this.isChecked = !this.isChecked;\n      this.change.emit(this.isChecked);\n    }\n  }\n}\n",
      "styleUrl": "./bmb-switch.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<button\n  [ngClass]=\"{ bmb_switch: true, 'bmb_switch-checked': isChecked }\"\n  (click)=\"toggleSwitch()\"\n  role=\"switch\"\n  [attr.aria-checked]=\"isChecked ? 'true' : 'false'\"\n  [attr.id]=\"id\"\n  [attr.aria-disabled]=\"disabled ? 'true' : 'false'\"\n  [disabled]=\"disabled\"\n  [attr.aria-label]=\"ariaLabel\"\n>\n  <div class=\"bmb_switch-left\" *ngIf=\"leftText || leftIcon\">\n    <span *ngIf=\"leftText && !leftIcon\" class=\"bmb_switch-text\">{{\n      leftText\n    }}</span>\n    <bmb-icon *ngIf=\"leftIcon && !leftText\" [icon]=\"leftIcon\"></bmb-icon>\n  </div>\n\n  <label class=\"bmb_switch-label\" for=\"bmbSwitch\">\n    <span class=\"bmb_switch-inner\"></span>\n    <span class=\"bmb_switch-switch\"></span>\n  </label>\n\n  <div class=\"bmb_switch-right\" *ngIf=\"rightText || rightIcon\">\n    <span *ngIf=\"rightText && !rightIcon\" class=\"bmb_switch-text\">{{\n      rightText\n    }}</span>\n    <bmb-icon *ngIf=\"rightIcon && !rightText\" [icon]=\"rightIcon\"></bmb-icon>\n  </div>\n</button>\n"
    },
    {
      "name": "BmbTabsComponent",
      "id": "component-BmbTabsComponent-213b5ea786d38adf625ac647e84e341f4e3f151c1b9502ff0984bcffafc71b9a244f41a43b3afa8153801e89e7fb1479820a1224d39de7962be59542c60f3d47",
      "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-tabs",
      "styleUrls": ["./bmb-tabs.component.scss"],
      "styles": [],
      "templateUrl": ["./bmb-tabs.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "format",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "string",
          "decorators": []
        },
        {
          "name": "tabs",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "Tab[]",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "selected",
          "defaultValue": "new EventEmitter<Tab>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "activeTabIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "tabsItems",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 37,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'tabsItems'"
            }
          ],
          "modifierKind": [170]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "selectTab",
          "args": [
            {
              "name": "selectedId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "selectedId",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "showActiveTab",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  EventEmitter,\n  OnInit,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport interface Tab {\n  id: number;\n  title: string;\n  isActive?: boolean;\n  badge?: number;\n}\n\n@Component({\n  selector: 'bmb-tabs',\n  templateUrl: './bmb-tabs.component.html',\n  styleUrls: ['./bmb-tabs.component.scss'],\n  standalone: true,\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTabsComponent implements OnInit, AfterViewInit {\n  @Input() format: string = '';\n  @Input() tabs: Tab[] = [];\n  @Output() selected = new EventEmitter<Tab>();\n\n  activeTabIndex: number = 0;\n  @ViewChild('tabsItems') tabsItems!: ElementRef;\n\n  ngOnInit(): void {\n    const initialActiveTab = this.tabs.findIndex((tab) => tab.isActive);\n    this.activeTabIndex = initialActiveTab !== -1 ? initialActiveTab : 0;\n    this.tabs.forEach(\n      (tab, index) => (tab.isActive = index === this.activeTabIndex)\n    );\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.showActiveTab(), 100);\n  }\n\n  selectTab(selectedId: number): void {\n    const tabIndex = this.tabs.findIndex((tab) => tab.id === selectedId);\n    if (tabIndex !== -1) {\n      this.tabs.forEach((tab) => (tab.isActive = false));\n      this.tabs[tabIndex].isActive = true;\n      this.activeTabIndex = tabIndex;\n      const activeTab = this.tabs[tabIndex];\n      this.selected.emit(activeTab);\n      setTimeout(() => this.showActiveTab(), 0);\n    }\n  }\n\n  showActiveTab(): void {\n    requestAnimationFrame(() => {\n      const tabsElement = this.tabsItems.nativeElement;\n      const activeTabElement = tabsElement.children[this.activeTabIndex];\n\n      if (activeTabElement) {\n        const containerWidth = tabsElement.offsetWidth;\n        const activeTabWidth = activeTabElement.offsetWidth;\n        const activeTabOffsetLeft = activeTabElement.offsetLeft;\n\n        const scrollOffset =\n          activeTabOffsetLeft - (containerWidth - activeTabWidth) / 2;\n\n        tabsElement.scrollTo({\n          left: scrollOffset,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use \"../../../assets/styles/base/fonts\" as fonts;\n@use \"../../../assets/styles/base/mixins\" as mixins;\n@use \"../../../assets/styles/base/rem\" as rem;\n\n.bmb_tabs {\n  &-tab {\n    display: flex;\n    flex-flow: row nowrap;\n    gap: rem.rem_calc(32);\n    -webkit-overflow-scrolling: touch;\n    overflow-x: auto;\n    scroll-behavior: smooth;\n    scroll-snap-type: x mandatory;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  &-item {\n    align-items: center;\n    border-bottom-color: transparent;\n    border-bottom-style: solid;\n    border-bottom-width: rem.rem_calc(2);\n    color: RGBA(var(--color-charade-500));\n    display: flex;\n    flex: 0 0 auto;\n    gap: rem.rem_calc(8);\n    height: rem.rem_calc(40);\n    justify-content: center;\n    min-width: rem.rem_calc(120);\n    padding: rem.rem_calc(8);\n    scroll-behavior: smooth;\n    scroll-snap-align: start;\n    text-align: center;\n    @include fonts.font(5, medium);\n\n    &-active {\n      border-bottom-color: RGBA(var(--color-mariner-700));\n      color: RGBA(var(--color-charade-950));\n    }\n\n    &-uppercase {\n      text-transform: uppercase;\n      @include fonts.font(3, regular);\n    }\n  }\n\n  &-badge {\n    align-items: center;\n    background-color: RGBA(var(--color-mariner-700));\n    border-radius: 100%;\n    color: RGBA(var(--color-white-primary));\n    display: flex;\n    height: rem.rem_calc(22);\n    justify-content: center;\n    width: rem.rem_calc(20);\n    @include fonts.font(3, regular);\n  }\n}\n\n[data-theme=\"dark\"],\n.storybook-dark-theme {\n  .bmb_tabs {\n    &-item {\n      &-active {\n        border-bottom-color: RGBA(var(--color-charade-50));\n        color: RGBA(var(--color-charade-50));\n      }\n    }\n  }\n}\n",
          "styleUrl": "./bmb-tabs.component.scss"
        }
      ],
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit", "AfterViewInit"],
      "templateData": "<div class=\"bmb_tabs\">\n  <div class=\"bmb_tabs-tab\" #tabsItems>\n    <button\n      role=\"tab\"\n      [attr.aria-selected]=\"tab.isActive ? 'true' : 'false'\"\n      [attr.tabindex]=\"tab.isActive ? 0 : -1\"\n      class=\"bmb_tabs-item\"\n      *ngFor=\"let tab of tabs; let i = index\"\n      (click)=\"selectTab(tab.id)\"\n      [ngClass]=\"{\n        'bmb_tabs-item-active': tab.isActive,\n        'bmb_tabs-item-uppercase': format === 'uppercase'\n      }\"\n    >\n      <span>\n        {{ tab.title }}\n      </span>\n      <span class=\"bmb_tabs-badge\" *ngIf=\"tab.badge\">{{ tab.badge }}</span>\n    </button>\n  </div>\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "BmbTagComponent",
      "id": "component-BmbTagComponent-5739e43327279ef5cc6d248c3330d8606a370d1d882c91d30c16f80afd90c52edff0baa6d87e99a0f328f266c7d9802e3cbd0e972146c6bcc6f7e955624b7af3",
      "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-tag",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-tags.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "dissmisable",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "grouped",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "text",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "closeTag",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Renderer2,\n  AfterViewInit,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n@Component({\n  selector: 'bmb-tag',\n  standalone: true,\n  imports: [CommonModule, BmbIconComponent],\n  styleUrl: './bmb-tags.component.scss',\n  templateUrl: './bmb-tags.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbTagComponent implements AfterViewInit {\n  @Input() appearance: string = '';\n  @Input() text: string = '';\n  @Input() grouped: boolean = false;\n  @Input() dissmisable: boolean = false;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (this.grouped) {\n      const parentElement = this.el.nativeElement.parentElement;\n\n      let wrapperDiv = parentElement.querySelector('.bmb_tag-grouped');\n      if (!wrapperDiv) {\n        wrapperDiv = this.renderer.createElement('div');\n        this.renderer.addClass(wrapperDiv, 'bmb_tag-grouped');\n        this.renderer.insertBefore(parentElement, wrapperDiv, null);\n      }\n\n      this.renderer.appendChild(wrapperDiv, this.el.nativeElement);\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_tag'];\n\n    if (this.appearance) {\n      classes.push('bmb_tag-' + this.appearance);\n    }\n\n    return classes;\n  }\n\n  closeTag() {\n    this.el.nativeElement.remove();\n  }\n}\n",
      "styleUrl": "./bmb-tags.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 25,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["AfterViewInit"],
      "templateData": "<div class=\"bmb_tag\">\n  <span class=\"bmb_tag-text\">{{ text }}</span>\n  <button *ngIf=\"this.dissmisable\" class=\"bmb_tag-btn\" (click)=\"closeTag()\">\n    <bmb-icon [icon]=\"'close'\" />\n  </button>\n</div>\n"
    },
    {
      "name": "BmbThemeComponent",
      "id": "component-BmbThemeComponent-bc7f10ac36f0f4e00f358ceffd480a665e780b446beda308e0d0b68c5c55548ca747d914a1910be9e875b5d65a25dfd221683205d37ef85f028ee9bb74b5d7ef",
      "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ThemeService",
          "type": "injectable"
        }
      ],
      "selector": "bmb-theme",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-theme.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "selectedTheme",
          "defaultValue": "'light'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "service",
          "defaultValue": "inject(ThemeService)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "applyTheme",
          "args": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "theme",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onThemeChange",
          "args": [
            {
              "name": "isChecked",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isChecked",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbSwitchComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit, inject, ViewEncapsulation } from '@angular/core';\nimport { ThemeService } from '../../services';\nimport { CommonModule } from '@angular/common';\nimport { BmbSwitchComponent } from '../bmb-switch/bmb-switch.component';\n\n@Component({\n  selector: 'bmb-theme',\n  standalone: true,\n  imports: [CommonModule, BmbSwitchComponent],\n  providers: [ThemeService],\n  templateUrl: './bmb-theme.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbThemeComponent implements OnInit {\n  selectedTheme: string = 'light';\n\n  private service = inject(ThemeService);\n\n  ngOnInit(): void {\n    const savedTheme = localStorage.getItem('theme') || 'light';\n    this.selectedTheme = savedTheme;\n    this.applyTheme(savedTheme);\n\n    this.service.theme$.subscribe((theme: any) => {\n      this.applyTheme(theme);\n    });\n  }\n\n  applyTheme(theme: string): void {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }\n\n  onThemeChange(isChecked: boolean): void {\n    this.selectedTheme = isChecked ? 'dark' : 'light';\n    localStorage.setItem('theme', this.selectedTheme);\n    this.service.setTheme(this.selectedTheme);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": ["OnInit"],
      "templateData": "<bmb-switch\n  [isChecked]=\"selectedTheme === 'dark'\"\n  leftIcon=\"light_mode\"\n  rightIcon=\"dark_mode\"\n  (change)=\"onThemeChange($event)\"\n></bmb-switch>\n"
    },
    {
      "name": "BmbToastComponent",
      "id": "component-BmbToastComponent-b8ea2ef35d6c99a5e75d694f7bc5ad5348fdbb48ba8428adfd4a4017696424df9bbd0874919f8aa5b1537e7ecbc8cb3c32b26e8ab8b520ec4961330938ce9767",
      "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ToastService",
          "type": "injectable"
        }
      ],
      "selector": "bmb-toast",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-toast.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string",
          "decorators": []
        },
        {
          "name": "duration",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "number",
          "decorators": []
        },
        {
          "name": "message",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "position",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "\"top\" | \"bottom\" | \"middle\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isOpen$",
          "defaultValue": "this.toastService.isOpen$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "isOpenSubscription",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription | undefined",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "openToast",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [125]
        },
        {
          "name": "setAutoClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbIconComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  OnInit,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { ToastService } from '../../services';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\n\n@Component({\n  standalone: true,\n  selector: 'bmb-toast',\n  styleUrl: './bmb-toast.component.scss',\n  imports: [CommonModule, BmbIconComponent],\n  templateUrl: './bmb-toast.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [ToastService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbToastComponent implements OnInit, OnDestroy {\n  @Input() appearance: string = '';\n  @Input() message: string = '';\n  @Input() duration?: number;\n  @Input() position?: 'top' | 'bottom' | 'middle';\n\n  isOpen$ = this.toastService.isOpen$;\n\n  private isOpenSubscription: Subscription | undefined;\n\n  constructor(private toastService: ToastService) {}\n\n  ngOnInit(): void {\n    this.isOpenSubscription = this.isOpen$.subscribe((isOpen) => {\n      if (isOpen && this.duration) {\n        this.setAutoClose();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.isOpenSubscription) {\n      this.isOpenSubscription.unsubscribe();\n    }\n  }\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_toast'];\n\n    if (this.appearance) {\n      classes.push('bmb_toast-' + this.appearance);\n    }\n\n    if (this.position) {\n      classes.push('bmb_toast-' + this.position);\n    }\n\n    return classes;\n  }\n\n  private setAutoClose(): void {\n    setTimeout(() => {\n      this.toastService.closeToast();\n    }, this.duration);\n  }\n\n  public openToast() {\n    this.toastService.openToast();\n  }\n}\n",
      "styleUrl": "./bmb-toast.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "toastService",
            "type": "ToastService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 32,
        "jsdoctags": [
          {
            "name": "toastService",
            "type": "ToastService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div *ngIf=\"isOpen$ | async\" [ngClass]=\"getClasses()\">\n  <bmb-icon icon=\"info\" />\n  <span>{{ message }}</span>\n</div>\n"
    },
    {
      "name": "BmbUserImageComponent",
      "id": "component-BmbUserImageComponent-2594fb33154112bd055a449c1d6d25ae01d2adb4b3decaac6e03a93b055fd4abf447062a3b045348cf57e3fb6c11e6621e34c7b9d6d17f3807f6b7b9acd292a0",
      "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-user-image",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-user-image.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "altImage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string",
          "decorators": []
        },
        {
          "name": "image",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string",
          "decorators": []
        },
        {
          "name": "link",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        },
        {
          "name": "target",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getClasses",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'bmb-user-image',\n  styleUrl: './bmb-user-image.component.scss',\n  templateUrl: './bmb-user-image.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [CommonModule],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbUserImageComponent {\n  @Input() size: string = '';\n  @Input() image: string = '';\n  @Input() altImage: string = '';\n  @Input() link: string = '';\n  @Input() target: string = '';\n\n  getClasses(): string[] {\n    const classes: string[] = ['bmb_user_image'];\n\n    if (this.size) {\n      classes.push('bmb_user_image-' + this.size);\n    }\n\n    return classes;\n  }\n}\n",
      "styleUrl": "./bmb-user-image.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<a [ngClass]=\"getClasses()\" [href]=\"link\" [target]=\"target\">\n  <img [src]=\"image\" [alt]=\"altImage\" />\n</a>\n"
    },
    {
      "name": "BmbUserSummaryComponent",
      "id": "component-BmbUserSummaryComponent-2b1e51ed549015c58835294d5c4e4937dfa85bec3a609d472f9c1bebb72069a65b323cd543e53a48b4cf248c49ece709f216c1a7c33d92d632222e98a095b7bb",
      "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-user-summary",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-user-summary.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "id",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string",
          "decorators": []
        },
        {
          "name": "image",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isProfile",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "name",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        },
        {
          "name": "BmbUserImageComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component,Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BmbButtonDirective } from '../../directives/button.directive';\nimport { BmbUserImageComponent } from '../bmb-user-image/bmb-user-image.component';\n\n@Component({\n  selector: 'bmb-user-summary',\n  standalone: true,\n  imports: [CommonModule, BmbButtonDirective, BmbUserImageComponent],\n  templateUrl: './bmb-user-summary.component.html',\n  styleUrl: './bmb-user-summary.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbUserSummaryComponent {\n  @Input() isProfile: boolean = false;\n  @Input() name: string = '';\n  @Input() id: string = '';\n  @Input() image: string = '';\n  @Output() onClick: EventEmitter<void> = new EventEmitter<void>();\n\n  handleClick(): void {\n    this.onClick.emit();\n  }\n}\n",
      "styleUrl": "./bmb-user-summary.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<section class=\"bmb_user-summary\" [ngClass]=\"{'bmb_user-summary-is-profile' : isProfile}\">\n  <bmb-user-image\n    [size]=\"'mobile-large'\"\n    [image]=\"image\"\n    [altImage]=\"name\"\n  />\n  <div class=\"bmb_user-summary-content\">\n    @if (isProfile) {\n      <h3 class=\"bmb_user-summary-content-title\">{{ name }}</h3>\n    }\n    @else {\n      <h3 class=\"bmb_user-summary-content-title\">¡Buenas tardes <br>{{ name }}!</h3>\n    }\n    <span class=\"bmb_user-summary-content-id\">{{ id }}</span>\n  </div>\n  @if (isProfile) {\n    <button\n      class=\"bmb_user-summary-button\"\n      bmbButton\n      appearance=\"secondary-outlined\"\n      (click)=\"handleClick()\"\n    >\n      ID Digital\n    </button>\n  }\n</section>\n"
    },
    {
      "name": "BmbValueCounterComponent",
      "id": "component-BmbValueCounterComponent-a815caf2302db3742be9372c483fa4a532a4b788bf5397e25b9d1419321900e50baf2d7c949f4ee47ac8f3af5d4b7601dfc923b1bc55dfc190ceb488373b8f4d",
      "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-value-counter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./bmb-value-counter.component.html"],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string",
          "decorators": []
        },
        {
          "name": "progress",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'bmb-value-counter',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bmb-value-counter.component.html',\n  styleUrl: './bmb-value-counter.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BmbValueCounterComponent {\n  @Input() label: string = '';\n  @Input() value: string = '';\n  @Input() progress: string = '';\n}\n",
      "styleUrl": "./bmb-value-counter.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"bmb_value-counter\">\n  <h3 class=\"bmb_value-counter-label\">{{ label }}</h3>\n  <span class=\"bmb_value-counter-progress\">{{ progress }}</span>\n  <span class=\"bmb_value-counter-slash\">/</span>\n  <span class=\"bmb_value-counter-value\">{{ value }}</span>\n</div>\n"
    },
    {
      "name": "DsNgComponent",
      "id": "component-DsNgComponent-e5efb1b6556ee93e3913add9b5651e7b82e4636efa0258c5ec4004d9377daadf8ed4ee72e8c9a31f2e6c5a39cb5057a783dea7b30a455c96c346b954f6d418cd",
      "file": "projects/ds-ng/src/lib/ds-ng.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "bmb-ds-ng",
      "styleUrls": [],
      "styles": [""],
      "template": "<p>\n  ds-ng works!\n</p>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bmb-ds-ng',\n  template: `\n    <p>\n      ds-ng works!\n    </p>\n  `,\n  styles: ``\n})\nexport class DsNgComponent {\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n",
      "extends": []
    },
    {
      "name": "StorybookToastWrapperComponent",
      "id": "component-StorybookToastWrapperComponent-e599e8f2c9632f98dcf383bc5c03b3a5aeece87cf26ef0c929d385e56a09f1b8dac1ab96d3f355934a559f9f94faeef947134cc64aebd12a17645dc6fe7aa5d7",
      "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-toast-wrapper",
      "styleUrls": [],
      "styles": [],
      "template": "<button\n  bmbButton\n  appearance=\"primary\"\n  icon=\"home\"\n  size=\"small\"\n  position=\"left\"\n  [case]=\"false\"\n  (click)=\"onButtonClick()\"\n>\n  Click Here\n</button>\n<bmb-toast\n  [message]=\"message\"\n  [appearance]=\"appearance\"\n  [duration]=\"duration\"\n  [position]=\"position\"\n></bmb-toast>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "appearance",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string",
          "decorators": []
        },
        {
          "name": "duration",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "number",
          "decorators": []
        },
        {
          "name": "message",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string",
          "decorators": []
        },
        {
          "name": "position",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "\"top\" | \"bottom\" | \"middle\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "toastComponent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "BmbToastComponent",
          "optional": false,
          "description": "",
          "line": 39,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "BmbToastComponent"
            }
          ],
          "modifierKind": [170, 123]
        }
      ],
      "methodsClass": [
        {
          "name": "onButtonClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "BmbToastComponent",
          "type": "component"
        },
        {
          "name": "BmbButtonDirective",
          "type": "directive"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { Meta, StoryFn, moduleMetadata } from '@storybook/angular';\nimport { BmbToastComponent } from './bmb-toast.component';\nimport { ToastService } from '../../services/toast.service';\nimport { BmbIconComponent } from '../bmb-icon/bmb-icon.component';\nimport { BmbButtonDirective } from '../../directives/button.directive';\n\n@Component({\n  standalone: true,\n  imports: [BmbToastComponent, BmbButtonDirective],\n  selector: 'storybook-toast-wrapper',\n  template: `\n    <button\n      bmbButton\n      appearance=\"primary\"\n      icon=\"home\"\n      size=\"small\"\n      position=\"left\"\n      [case]=\"false\"\n      (click)=\"onButtonClick()\"\n    >\n      Click Here\n    </button>\n    <bmb-toast\n      [message]=\"message\"\n      [appearance]=\"appearance\"\n      [duration]=\"duration\"\n      [position]=\"position\"\n    ></bmb-toast>\n  `,\n})\nclass StorybookToastWrapperComponent {\n  @Input() appearance: string = '';\n  @Input() message: string = '';\n  @Input() duration?: number;\n  @Input() position?: 'top' | 'bottom' | 'middle';\n\n  @ViewChild(BmbToastComponent)\n  private toastComponent!: BmbToastComponent;\n  onButtonClick() {\n    this.toastComponent.openToast();\n  }\n}\n\nexport default {\n  title: 'Micro Componentes/Toast',\n  component: BmbToastComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        StorybookToastWrapperComponent,\n        BmbToastComponent,\n        BmbIconComponent,\n        BmbButtonDirective,\n      ],\n      providers: [ToastService],\n    }),\n  ],\n  parameters: {\n    docs: {\n      description: {\n        component: `\nBelow is an example of how you can use this component in TypeScript:\n\n\\`\\`\\`typescript\nimport { BmbButtonDirective, BmbToastComponent } from '@ti-tecnologico-de-monterrey-oficial/ds-ng';\n@Component({\n  selector: 'component',\n  standalone: true,\n  imports: [ BmbButtonDirective, BmbToastComponent ],\n  templateUrl: './component.html',\n  styleUrl: './component.scss',\n})\nexport class Component {\n  title = 'my-app';\n\n  @ViewChild(BmbToastComponent)\n  private toastComponent!: BmbToastComponent;\n  onButtonClick() {\n    this.toastComponent.openToast();\n  }\n}\n\\`\\`\\`\n\nBelow is an example of how you can use this component in HTML:\n        `,\n      },\n    },\n  },\n  argTypes: {\n    message: {\n      name: 'Message',\n      control: {\n        type: 'text',\n      },\n      description:\n        'Specifies the text displayed within the toast notification. This message should be concise and direct, providing the user with immediate feedback or information related to their actions.',\n      table: {\n        category: 'Properties',\n        type: { summary: 'string' },\n      },\n    },\n    appearance: {\n      name: 'Appearance',\n      control: 'radio',\n      options: [\n        'neutral',\n        'primary',\n        'successful',\n        'warning',\n        'error',\n        'event',\n      ],\n      description:\n        'Defines the visual style of the toast, allowing it to match the context of the notification. Each option represents a different level of notification severity or type, such as informational (neutral), success (successful), warning (warning), error (error), or event (event).',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'neutral' },\n        type: { summary: 'string' },\n      },\n    },\n    duration: {\n      name: 'Duration',\n      control: {\n        type: 'number',\n      },\n      description:\n        'Determines how long the toast remains visible to the user, in milliseconds. A longer duration can be useful for more complex messages that require additional reading time, whereas shorter durations are suitable for succinct, immediate feedback',\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: '5000' },\n        type: { summary: 'string' },\n      },\n    },\n    position: {\n      name: 'Position',\n      control: 'radio',\n      options: ['top', 'bottom', 'middle'],\n      description:\n        \"Controls the position of the toast on the screen, helping to ensure the notification does not obstruct important interface elements. Options include top, bottom, and middle, allowing you to choose the most appropriate placement based on your application's layout and user experience requirements.\",\n      table: {\n        category: 'Properties',\n        defaultValue: { summary: 'top' },\n        type: { summary: 'string' },\n      },\n    },\n  },\n  args: {\n    message: 'Your toast text here',\n    appearance: 'neutral',\n    duration: 5000,\n    position: 'top',\n  },\n} as Meta<typeof BmbToastComponent>;\n\nfunction attributes(object: { [key: string]: any }): string {\n  return Object.entries(object)\n    .filter(([key]) => key !== 'text')\n    .map(([key, value]) => {\n      if (key === 'duration') {\n        return `[${key}]=\"${value}\"`;\n      }\n      return `${key}=\"${value}\"`;\n    })\n    .join(' ');\n}\n\nexport const Default: StoryFn<typeof BmbToastComponent> = (args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n};\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    }
  ],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "customizable",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args\n  )}</button>`,\n})"
      },
      {
        "name": "customizable",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"storybook-colors-playground\"><div style=\"background-color: ${colors(\n    args\n  )};\"></div> <div style=\"background: ${gradients(args)};\"></div></div>`,\n})"
      },
      {
        "name": "customizable",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div ${attributes(args)}>Typography</div>`,\n})"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "customizable()"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "customizable()"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "customizable()"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "StoryFn<>",
        "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{}"
      },
      {
        "name": "FAB_SIZE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "{\n    small: 'small',\n    large: 'large',\n  } as const"
      },
      {
        "name": "FAB_TYPE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "{\n    normal: 'normal',\n    extended: 'extended',\n} as const"
      },
      {
        "name": "INPUT_TYPE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "{\n    normal: 'normal',\n    simple: 'simple',\n  } as const"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ds-ng/.storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'storybook-light-theme',\n        dark: 'storybook-dark-theme',\n      },\n      defaultTheme: 'light',\n    }),\n  ],\n}"
      }
    ],
    "functions": [
      {
        "name": "attributes",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "string",
        "jsdoctags": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "attributes",
        "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "any",
        "jsdoctags": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "attributes",
        "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "string",
        "jsdoctags": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "attributesText",
        "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "string",
        "jsdoctags": [
          {
            "name": "object",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "colors",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "any",
        "jsdoctags": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "gradients",
        "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "any",
        "jsdoctags": [
          {
            "name": "object",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [
      {
        "name": "FabSize",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 199
      },
      {
        "name": "FabType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 199
      },
      {
        "name": "InputType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 199
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbBadgeComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbCheckboxComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbChevronTitleSelectorComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbContainerComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbContainerButtonComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbDividerComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbDotPaginatorComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbFabComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbFocusElementComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbHeaderMobileComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbHomeSectionComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbIconComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbInputComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbInteractiveIconComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbLegendComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbLoaderComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbLogoComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbProgressCircleComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbSidebarComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbStatCounterComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbSwitchComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbTabsComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbTagComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbThemeComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbUserImageComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbUserSummaryComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<BmbValueCounterComponent>",
        "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Variations",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"normal\" | \"strong\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"brand\"",
        "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "projects/ds-ng/src/lib/directives/button.stories.ts": [
        {
          "name": "customizable",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<button bmbButton ${attributes(args)}>${attributesText(\n    args\n  )}</button>`,\n})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "customizable()"
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts": [
        {
          "name": "customizable",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div class=\"storybook-colors-playground\"><div style=\"background-color: ${colors(\n    args\n  )};\"></div> <div style=\"background: ${gradients(args)};\"></div></div>`,\n})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "customizable()"
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts": [
        {
          "name": "customizable",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): StoryFn => (args) => ({\n  props: args,\n  template: `<div ${attributes(args)}>Typography</div>`,\n})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "customizable()"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "StoryFn<>",
          "defaultValue": "(args) => {\n  return {\n    props: args,\n    template: `\n      <!-- Instruction to users: This component is used for internal Storybook logic and should not be copied -->\n      <storybook-toast-wrapper ${attributes(args)}></storybook-toast-wrapper>\n      <!-- Start copying from here -->\n      <div class=\"actions\">\n      <button bmbButton appearance=\"primary\" icon=\"home\" size=\"small\" position=\"left\" [case]=\"false\" (click)=\"onButtonClick()\">Click Here</button>\n      <bmb-toast ${attributes(args)}></bmb-toast></div>`,\n  };\n}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{}"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts": [
        {
          "name": "FAB_SIZE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "{\n    small: 'small',\n    large: 'large',\n  } as const"
        },
        {
          "name": "FAB_TYPE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "{\n    normal: 'normal',\n    extended: 'extended',\n} as const"
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts": [
        {
          "name": "INPUT_TYPE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "{\n    normal: 'normal',\n    simple: 'simple',\n  } as const"
        }
      ],
      "projects/ds-ng/.storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ds-ng/.storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      expanded: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    docs: {\n      source: { language: 'html' },\n      canvas: {\n        sourceState: 'shown',\n      },\n    },\n  },\n  decorators: [\n    withThemeByClassName({\n      themes: {\n        light: 'storybook-light-theme',\n        dark: 'storybook-dark-theme',\n      },\n      defaultTheme: 'light',\n    }),\n  ],\n}"
        }
      ]
    },
    "groupedFunctions": {
      "projects/ds-ng/src/lib/directives/button.stories.ts": [
        {
          "name": "attributes",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "string",
          "jsdoctags": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "attributesText",
          "file": "projects/ds-ng/src/lib/directives/button.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "string",
          "jsdoctags": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts": [
        {
          "name": "attributes",
          "file": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "any",
          "jsdoctags": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts": [
        {
          "name": "attributes",
          "file": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "string",
          "jsdoctags": [
            {
              "name": "object",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts": [
        {
          "name": "colors",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "any",
          "jsdoctags": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "gradients",
          "file": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "any",
          "jsdoctags": [
            {
              "name": "object",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts": [
        {
          "name": "FabSize",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 199
        },
        {
          "name": "FabType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 199
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts": [
        {
          "name": "InputType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 199
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbBadgeComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbCheckboxComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbChevronTitleSelectorComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbContainerComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbContainerButtonComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbDividerComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbDotPaginatorComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbFabComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbFocusElementComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbHeaderMobileComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbHomeSectionComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbIconComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbInputComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbInteractiveIconComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbLegendComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbLoaderComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbLogoComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbProgressCircleComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbSidebarComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbStatCounterComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbSwitchComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbTabsComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbTagComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbThemeComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbUserImageComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbUserSummaryComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<BmbValueCounterComponent>",
          "file": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts": [
        {
          "name": "Variations",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"normal\" | \"strong\" | \"success\" | \"info\" | \"warning\" | \"error\" | \"brand\"",
          "file": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "projects/ds-ng/.storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbBadgeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-badge/bmb-badge.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-checkbox/bmb-checkbox.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbChevronTitleSelectorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-chevron-title-selector/bmb-chevron-title-selector.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbContainerButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container-button/bmb-container-button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbContainerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-container/bmb-container.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbDividerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-divider/bmb-divider.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbDotPaginatorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Target",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Target",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-dot-paginator/bmb-dot-paginator.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FAB_SIZE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab-.interface.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FAB_TYPE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbFabComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-fab/bmb-fab.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbFocusElementComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-focus-element/bmb-focus-element.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbHeaderMobileComponent",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-header-mobile/bmb-header-mobile.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbHomeSectionComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-home-section/bmb-home-section.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-icon/bmb-icon.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbInputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/42",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.interface.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "INPUT_TYPE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-input/bmb-input.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbInteractiveIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-interactive-icon/bmb-interactive-icon.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbLegendComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-legend/bmb-legend.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbLoaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-loader/bmb-loader.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbLogoComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-logo/bmb-logo.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbProgressCircleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-progress-cirlce/bmb-progress-circle.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbSidebarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SidebarElements",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-sidebar/bmb-sidebar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbStatCounterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Props",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Target",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-stat-counter/bmb-stat-counter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbSwitchComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-switch/bmb-switch.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTabsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Tab",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tabs/bmb-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbTagComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-tags/bmb-tags.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbThemeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-theme/bmb-theme.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbToastComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "StorybookToastWrapperComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-toast/bmb-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-image.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbUserImageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-image/bmb-user-images.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbUserSummaryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-user-summary/bmb-user-summary.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BmbValueCounterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/components/bmb-value-counter/bmb-value-counter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BmbButtonDirective",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributesText",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "customizable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/directives/button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/ds-ng.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DsNgComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/ds-ng.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "DsNgService",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "colors",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "gradients",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "customizable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-colors.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "attributes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "customizable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/foundations/bmb-typography.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/services/theme.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ThemeService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/ds-ng/src/lib/services/toast.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ToastService",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      }
    ]
  }
}
